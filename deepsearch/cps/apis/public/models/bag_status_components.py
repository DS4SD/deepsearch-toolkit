# coding: utf-8

"""
    Corpus Processing Service (CPS) API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from deepsearch.cps.apis.public.configuration import Configuration


class BagStatusComponents(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'erlenmeyer_api': 'BagComponentStatus',
        'erlenmeyer_ui': 'BagComponentStatus',
        'kg': 'BagComponentStatus'
    }

    attribute_map = {
        'erlenmeyer_api': 'erlenmeyer_api',
        'erlenmeyer_ui': 'erlenmeyer_ui',
        'kg': 'kg'
    }

    def __init__(self, erlenmeyer_api=None, erlenmeyer_ui=None, kg=None, local_vars_configuration=None):  # noqa: E501
        """BagStatusComponents - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._erlenmeyer_api = None
        self._erlenmeyer_ui = None
        self._kg = None
        self.discriminator = None

        self.erlenmeyer_api = erlenmeyer_api
        self.erlenmeyer_ui = erlenmeyer_ui
        self.kg = kg

    @property
    def erlenmeyer_api(self):
        """Gets the erlenmeyer_api of this BagStatusComponents.  # noqa: E501

        Status of the Erlenmeyer API for this Graph  # noqa: E501

        :return: The erlenmeyer_api of this BagStatusComponents.  # noqa: E501
        :rtype: BagComponentStatus
        """
        return self._erlenmeyer_api

    @erlenmeyer_api.setter
    def erlenmeyer_api(self, erlenmeyer_api):
        """Sets the erlenmeyer_api of this BagStatusComponents.

        Status of the Erlenmeyer API for this Graph  # noqa: E501

        :param erlenmeyer_api: The erlenmeyer_api of this BagStatusComponents.  # noqa: E501
        :type: BagComponentStatus
        """
        if self.local_vars_configuration.client_side_validation and erlenmeyer_api is None:  # noqa: E501
            raise ValueError("Invalid value for `erlenmeyer_api`, must not be `None`")  # noqa: E501

        self._erlenmeyer_api = erlenmeyer_api

    @property
    def erlenmeyer_ui(self):
        """Gets the erlenmeyer_ui of this BagStatusComponents.  # noqa: E501

        Status of the Erlenmeyer UI for this Graph  # noqa: E501

        :return: The erlenmeyer_ui of this BagStatusComponents.  # noqa: E501
        :rtype: BagComponentStatus
        """
        return self._erlenmeyer_ui

    @erlenmeyer_ui.setter
    def erlenmeyer_ui(self, erlenmeyer_ui):
        """Sets the erlenmeyer_ui of this BagStatusComponents.

        Status of the Erlenmeyer UI for this Graph  # noqa: E501

        :param erlenmeyer_ui: The erlenmeyer_ui of this BagStatusComponents.  # noqa: E501
        :type: BagComponentStatus
        """
        if self.local_vars_configuration.client_side_validation and erlenmeyer_ui is None:  # noqa: E501
            raise ValueError("Invalid value for `erlenmeyer_ui`, must not be `None`")  # noqa: E501

        self._erlenmeyer_ui = erlenmeyer_ui

    @property
    def kg(self):
        """Gets the kg of this BagStatusComponents.  # noqa: E501

        Status of the Knowledge Graph and its API  # noqa: E501

        :return: The kg of this BagStatusComponents.  # noqa: E501
        :rtype: BagComponentStatus
        """
        return self._kg

    @kg.setter
    def kg(self, kg):
        """Sets the kg of this BagStatusComponents.

        Status of the Knowledge Graph and its API  # noqa: E501

        :param kg: The kg of this BagStatusComponents.  # noqa: E501
        :type: BagComponentStatus
        """
        if self.local_vars_configuration.client_side_validation and kg is None:  # noqa: E501
            raise ValueError("Invalid value for `kg`, must not be `None`")  # noqa: E501

        self._kg = kg

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BagStatusComponents):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, BagStatusComponents):
            return True

        return self.to_dict() != other.to_dict()
