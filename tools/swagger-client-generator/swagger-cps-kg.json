{"basePath":"/api/cps/kg/v1","consumes":["application/json"],"definitions":{"KGClientResponse":{"properties":{"query":{"type":"string"},"status":{"type":"string"},"version":{"type":"string"}},"required":["query","status","version"],"type":"object"},"NodeCollection":{"properties":{"collection_key":{"type":"string"},"name":{"type":"string"},"node_list":{"items":{"properties":{"db":{"type":"string"},"id":{"type":"string"}},"required":["db","id"],"type":"object"},"type":"array"}},"required":["name","node_list"],"type":"object"},"NodeDataView":{"properties":{"parameters":{"type":"object"},"projections":{"items":{"type":"string"},"type":"array"},"type":{"type":"string"}},"required":["type"],"type":"object"},"Problem":{"additionalProperties":{},"example":{"detail":"A descriptive message.","may_have_extra_fields":true,"status":500,"title":"An example title","type":"ExampleError"},"properties":{"detail":{"type":"string"},"status":{"type":"integer"},"title":{"type":"string"},"type":{"type":"string"}},"type":"object"},"Workflow":{"properties":{"description":{"type":"string"},"name":{"type":"string"},"outputs":{"additionalProperties":{"properties":{"name":{"type":"string"},"node_views":{"properties":{"active_type":{"type":"string"},"columns":{"items":{"$ref":"#/definitions/NodeDataView"},"type":"array"},"configurations":{"items":{"$ref":"#/definitions/NodeDataView"},"type":"array"},"expanded":{"type":"boolean"},"limit":{"type":"number"}},"type":"object"}},"type":"object"},"type":"object"},"template":{"type":"array"},"variables":{"type":"object"},"wf_key":{"type":"string"}},"required":["name","description","template","variables"],"type":"object"}},"info":{"title":"Corpus Processing Service (CPS) - KG API","version":"0.0.1"},"paths":{"/project/{proj_key}/bags/{bag_key}/dataset/export":{"post":{"description":"Export node collection dataset.","operationId":"api_server.controllers.kg.node_collections_controller.export_dataset","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"body","name":"options","required":true,"schema":{"properties":{"collection_key":{"type":"string"},"include_s3_data":{"default":false,"type":"boolean"},"node_list":{"example":[{"_db":"db1-hash","_id":"node-id"},{"_db":"db2-hash","_id":"node-id"}],"items":{"properties":{"_db":{"type":"string"},"_id":{"type":"string"}},"required":["_db","_id"],"type":"object"},"minLength":1,"type":"array"},"projection":{"description":"A dict specifying the fields to include or exclude. Use a dict to exclude fields from the result (e.g. projection={'main-text': false}).","example":{"projection":{}},"type":"object"}},"type":"object"}}],"produces":["application/json"],"responses":{"200":{"description":"Successful response","schema":{"properties":{"completed_at":{"format":"double","type":"number","x-nullable":true},"created_at":{"format":"double","type":"number"},"meta":{"type":"object"},"progress":{"format":"double","type":"number"},"proj_key":{"type":"string"},"started_at":{"format":"double","type":"number","x-nullable":true},"task_id":{"type":"string"},"task_status":{"type":"string"},"task_type":{"type":"string"},"user_key":{"type":"string"}},"type":"object"}},"400":{"description":"Missing field or invalid format"},"default":{"description":"unexpected error","schema":{"$ref":"#/definitions/Problem"}}},"tags":["Node collections"]}},"/project/{proj_key}/bags/{bag_key}/description":{"get":{"description":"Retrieve the kg graph description","operationId":"api_server.controllers.kg.controller.get_kg_graph_description","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/KGClientResponse"}},"404":{"description":"Knowledge graph not found or missing backend","schema":{"$ref":"#/definitions/Problem"}},"500":{"description":"Unknown error","schema":{"$ref":"#/definitions/Problem"}}},"security":[{"Bearer":[]}],"tags":["General"]}},"/project/{proj_key}/bags/{bag_key}/node_collections":{"get":{"description":"Retrieve a list of node collections","operationId":"api_server.controllers.kg.node_collections_controller.list_node_collections","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"query","name":"search","required":false,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"List of Collection nodes","schema":{"items":{"properties":{"name":{"type":"string"}},"required":["name"],"type":"object"},"type":"array"}}},"tags":["Node collections"]},"post":{"consumes":["application/json"],"description":"Create a new node collection","operationId":"api_server.controllers.kg.node_collections_controller.create_node_collection","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"body","name":"body","required":true,"schema":{"properties":{"collection_name":{"type":"string"},"node_list":{"items":{"properties":{"db":{"type":"string"},"id":{"type":"string"}},"required":["db","id"],"type":"object"},"type":"array"}},"required":["collection_name","node_list"],"type":"object"}}],"produces":["application/json"],"responses":{"200":{"description":"Node collection created"},"409":{"description":"Collection already exists","schema":{"$ref":"#/definitions/Problem"}}},"security":[{"Bearer":[]}],"tags":["Node collections"]}},"/project/{proj_key}/bags/{bag_key}/node_collections/{collection_key}":{"delete":{"consumes":["application/json"],"description":"Delete a node collection","operationId":"api_server.controllers.kg.node_collections_controller.delete_node_collection","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"path","name":"collection_key","required":true,"type":"string"}],"produces":["application/json"],"responses":{"204":{"description":"Node collection deleted"},"404":{"description":"Node collection doesn't exist","schema":{"$ref":"#/definitions/Problem"}}},"security":[{"Bearer":[]}],"tags":["Node collections"]},"get":{"description":"Retrieve a node collection by its collection key","operationId":"api_server.controllers.kg.node_collections_controller.get_node_collection","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"path","name":"collection_key","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"Node collection","schema":{"$ref":"#/definitions/NodeCollection"}},"404":{"description":"Node collection doesn't exist","schema":{"$ref":"#/definitions/Problem"}}},"tags":["Node collections"]},"put":{"consumes":["application/json"],"description":"Update a node collection","operationId":"api_server.controllers.kg.node_collections_controller.update_node_collection","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"path","name":"collection_key","required":true,"type":"string"},{"in":"body","name":"node_list","required":true,"schema":{"items":{"properties":{"db":{"type":"string"},"id":{"type":"string"}},"required":["db","id"],"type":"object"},"type":"array"}}],"produces":["application/json"],"responses":{"204":{"description":"Node collection updated"},"404":{"description":"Node collection doesn't exist","schema":{"$ref":"#/definitions/Problem"}}},"security":[{"Bearer":[]}],"tags":["Node collections"]}},"/project/{proj_key}/bags/{bag_key}/temp/workflows":{"get":{"description":"Retrieve a list of temporary workflows","operationId":"api_server.controllers.kg.temporary_workflows_controller.list_workflows","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"query","name":"search","required":false,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"Workflows","schema":{"items":{"$ref":"#/definitions/Workflow"},"type":"array"}}},"tags":["Temporary Workflows"]},"post":{"consumes":["application/json"],"description":"Create a new temporary workflow","operationId":"api_server.controllers.kg.temporary_workflows_controller.create_workflow","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"body","name":"body","required":true,"schema":{"properties":{"description":{"type":"string"},"name":{"type":"string"},"template":{"items":{"type":"object"},"type":"array"},"variables":{"additionalProperties":{"properties":{"type":{"type":"string"}},"type":"object"},"type":"object"}},"required":["name","description","template","variables"],"type":"object"}}],"produces":["application/json"],"responses":{"200":{"description":"Workflow created","schema":{"$ref":"#/definitions/Workflow"}}},"security":[{"Bearer":[]}],"tags":["Temporary Workflows"]}},"/project/{proj_key}/bags/{bag_key}/temp/workflows/{wf_key}":{"get":{"description":"Retrieve a temporary workflow by its id","operationId":"api_server.controllers.kg.temporary_workflows_controller.get_workflow","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"path","name":"wf_key","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"Workflow","schema":{"$ref":"#/definitions/Workflow"}},"404":{"description":"Workflow doesn't exist","schema":{"$ref":"#/definitions/Problem"}}},"tags":["Temporary Workflows"]}},"/project/{proj_key}/bags/{bag_key}/temp/workflows/{wf_key}/render":{"post":{"consumes":["application/json"],"description":"Render a temporary workflow","operationId":"api_server.controllers.kg.temporary_workflows_controller.render_workflow","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"path","name":"wf_key","required":true,"type":"string"},{"in":"body","name":"body","required":true,"schema":{"properties":{"variables":{"type":"object"}},"required":["variables"],"type":"object"}}],"produces":["application/json"],"responses":{"200":{"description":"Rendered workflow","schema":{"type":"object"}}},"tags":["Temporary Workflows"]}},"/project/{proj_key}/bags/{bag_key}/workflows":{"get":{"description":"Retrieve a list of workflows","operationId":"api_server.controllers.kg.workflows_controller.list_workflows","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"query","name":"search","required":false,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"Workflows","schema":{"items":{"$ref":"#/definitions/Workflow"},"type":"array"}}},"tags":["Workflows"]},"post":{"consumes":["application/json"],"description":"Create a new workflow","operationId":"api_server.controllers.kg.workflows_controller.create_workflow","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/Workflow"}}],"produces":["application/json"],"responses":{"200":{"description":"Workflow created","schema":{"$ref":"#/definitions/Workflow"}}},"security":[{"Bearer":[]}],"tags":["Workflows"]}},"/project/{proj_key}/bags/{bag_key}/workflows/import":{"post":{"consumes":["application/json"],"description":"Import multiple workflows","operationId":"api_server.controllers.kg.workflows_controller.import_workflows","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"body","name":"body","required":true,"schema":{"items":{"$ref":"#/definitions/Workflow"},"type":"array"}}],"produces":["application/json"],"responses":{"200":{"description":"Workflow imported","schema":{"items":{"$ref":"#/definitions/Workflow"},"type":"array"}}},"security":[{"Bearer":[]}],"tags":["Workflows"]}},"/project/{proj_key}/bags/{bag_key}/workflows/{wf_key}":{"delete":{"description":"Delete a workflow by its id","operationId":"api_server.controllers.kg.workflows_controller.delete_workflow","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"path","name":"wf_key","required":true,"type":"string"}],"produces":["application/json"],"responses":{"204":{"description":"Workflow deleted"},"404":{"description":"Workflow doesn't exist","schema":{"$ref":"#/definitions/Problem"}}},"security":[{"Bearer":[]}],"tags":["Workflows"]},"get":{"description":"Retrieve a workflow by its id","operationId":"api_server.controllers.kg.workflows_controller.get_workflow","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"path","name":"wf_key","required":true,"type":"string"}],"produces":["application/json"],"responses":{"200":{"description":"Workflow","schema":{"$ref":"#/definitions/Workflow"}},"404":{"description":"Workflow doesn't exist","schema":{"$ref":"#/definitions/Problem"}}},"tags":["Workflows"]},"put":{"consumes":["application/json"],"description":"Update a workflow","operationId":"api_server.controllers.kg.workflows_controller.update_workflow","parameters":[{"in":"path","name":"proj_key","required":true,"type":"string"},{"in":"path","name":"bag_key","required":true,"type":"string"},{"in":"path","name":"wf_key","required":true,"type":"string"},{"in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/Workflow"}}],"produces":["application/json"],"responses":{"204":{"description":"Workflow updated"},"404":{"description":"Workflow doesn't exist","schema":{"$ref":"#/definitions/Problem"}}},"security":[{"Bearer":[]}],"tags":["Workflows"]}}},"produces":["application/json"],"schemes":["http","https"],"securityDefinitions":{"Bearer":{"description":"For accessing the API a valid JWT token must be passed in all the queries in\nthe 'Authorization' header.\n\nA valid JWT token is generated by the API and returned.\n\nThe following syntax must be used in the 'Authorization' header :\n    Bearer xxxxxx.yyyyyyy.zzzzzz\n","in":"header","name":"Authorization","type":"apiKey","x-apikeyInfoFunc":"oidc_user_mngt.utils.connexion_auth.api_key_info"}},"swagger":"2.0"}
