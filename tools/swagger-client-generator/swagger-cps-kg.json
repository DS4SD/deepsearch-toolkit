{"swagger": "2.0", "info": {"version": "0.0.1", "title": "Corpus Processing Service (CPS) - KG API"}, "schemes": ["http", "https"], "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"description": "For accessing the API a valid JWT token must be passed in all the queries in\nthe 'Authorization' header.\n\nA valid JWT token is generated by the API and returned.\n\nThe following syntax must be used in the 'Authorization' header :\n    Bearer xxxxxx.yyyyyyy.zzzzzz\n", "type": "apiKey", "name": "Authorization", "in": "header", "x-apikeyInfoFunc": "oidc_user_mngt.utils.connexion_auth.api_key_info"}}, "paths": {"/project/{proj_key}/bags/{bag_key}/description": {"get": {"operationId": "api_server.controllers.kg.controller.get_kg_graph_description", "tags": ["General"], "security": [{"Bearer": []}], "description": "Retrieve the kg graph description", "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/KGClientResponse"}}, "404": {"description": "Knowledge graph not found or missing backend", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Unknown error", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/bags/{bag_key}/node_collections": {"get": {"operationId": "api_server.controllers.kg.node_collections_controller.list_node_collections", "tags": ["Node collections"], "description": "Retrieve a list of node collections", "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "search", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "List of Collection nodes", "schema": {"type": "array", "items": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string"}}}}}}}, "post": {"operationId": "api_server.controllers.kg.node_collections_controller.create_node_collection", "tags": ["Node collections"], "security": [{"Bearer": []}], "description": "Create a new node collection", "consumes": ["application/json"], "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"type": "object", "properties": {"collection_name": {"type": "string"}, "node_list": {"type": "array", "items": {"type": "object", "properties": {"db": {"type": "string"}, "id": {"type": "string"}}, "required": ["db", "id"]}}}, "required": ["collection_name", "node_list"]}}], "responses": {"200": {"description": "Node collection created"}, "409": {"description": "Collection already exists", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/bags/{bag_key}/node_collections/{collection_key}": {"get": {"operationId": "api_server.controllers.kg.node_collections_controller.get_node_collection", "tags": ["Node collections"], "description": "Retrieve a node collection by its collection key", "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "collection_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Node collection", "schema": {"$ref": "#/definitions/NodeCollection"}}, "404": {"description": "Node collection doesn't exist", "schema": {"$ref": "#/definitions/Problem"}}}}, "delete": {"operationId": "api_server.controllers.kg.node_collections_controller.delete_node_collection", "tags": ["Node collections"], "security": [{"Bearer": []}], "description": "Delete a node collection", "consumes": ["application/json"], "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "collection_key", "in": "path", "type": "string", "required": true}], "responses": {"204": {"description": "Node collection deleted"}, "404": {"description": "Node collection doesn't exist", "schema": {"$ref": "#/definitions/Problem"}}}}, "put": {"operationId": "api_server.controllers.kg.node_collections_controller.update_node_collection", "tags": ["Node collections"], "security": [{"Bearer": []}], "description": "Update a node collection", "consumes": ["application/json"], "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "collection_key", "in": "path", "type": "string", "required": true}, {"name": "node_list", "in": "body", "required": true, "schema": {"type": "array", "items": {"type": "object", "properties": {"db": {"type": "string"}, "id": {"type": "string"}}, "required": ["db", "id"]}}}], "responses": {"204": {"description": "Node collection updated"}, "404": {"description": "Node collection doesn't exist", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/bags/{bag_key}/dataset/export": {"post": {"operationId": "api_server.controllers.kg.node_collections_controller.export_dataset", "tags": ["Node collections"], "description": "Export node collection dataset.", "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "options", "in": "body", "required": true, "schema": {"type": "object", "properties": {"node_list": {"type": "array", "minLength": 1, "items": {"type": "object", "properties": {"_db": {"type": "string"}, "_id": {"type": "string"}}, "required": ["_db", "_id"]}, "example": [{"_db": "db1-hash", "_id": "node-id"}, {"_db": "db2-hash", "_id": "node-id"}]}, "collection_key": {"type": "string"}, "include_s3_data": {"type": "boolean", "default": false}, "projection": {"type": "object", "example": {"projection": {}}, "description": "A dict specifying the fields to include or exclude. Use a dict to exclude fields from the result (e.g. projection={'main-text': false})."}}}}], "responses": {"200": {"description": "Successful response", "schema": {"type": "object", "properties": {"proj_key": {"type": "string"}, "user_key": {"type": "string"}, "task_type": {"type": "string"}, "task_id": {"type": "string"}, "task_status": {"type": "string"}, "created_at": {"type": "number", "format": "double"}, "started_at": {"type": "number", "format": "double", "x-nullable": true}, "completed_at": {"type": "number", "format": "double", "x-nullable": true}, "progress": {"type": "number", "format": "double"}, "meta": {"type": "object"}}}}, "400": {"description": "Missing field or invalid format"}, "default": {"description": "unexpected error", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/bags/{bag_key}/temp/workflows": {"get": {"operationId": "api_server.controllers.kg.temporary_workflows_controller.list_workflows", "tags": ["Temporary Workflows"], "description": "Retrieve a list of temporary workflows", "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "search", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "Workflows", "schema": {"type": "array", "items": {"$ref": "#/definitions/Workflow"}}}}}, "post": {"operationId": "api_server.controllers.kg.temporary_workflows_controller.create_workflow", "tags": ["Temporary Workflows"], "security": [{"Bearer": []}], "description": "Create a new temporary workflow", "consumes": ["application/json"], "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string"}, "template": {"type": "array", "items": {"type": "object"}}, "variables": {"type": "object", "additionalProperties": {"type": "object", "properties": {"type": {"type": "string"}}}}}, "required": ["name", "description", "template", "variables"]}}], "responses": {"200": {"description": "Workflow created", "schema": {"$ref": "#/definitions/Workflow"}}}}}, "/project/{proj_key}/bags/{bag_key}/temp/workflows/{wf_key}": {"get": {"operationId": "api_server.controllers.kg.temporary_workflows_controller.get_workflow", "tags": ["Temporary Workflows"], "description": "Retrieve a temporary workflow by its id", "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "wf_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Workflow", "schema": {"$ref": "#/definitions/Workflow"}}, "404": {"description": "Workflow doesn't exist", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/bags/{bag_key}/temp/workflows/{wf_key}/render": {"post": {"operationId": "api_server.controllers.kg.temporary_workflows_controller.render_workflow", "tags": ["Temporary Workflows"], "description": "Render a temporary workflow", "consumes": ["application/json"], "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "wf_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"type": "object", "properties": {"variables": {"type": "object"}}, "required": ["variables"]}}], "responses": {"200": {"description": "Rendered workflow", "schema": {"type": "object"}}}}}, "/project/{proj_key}/bags/{bag_key}/workflows": {"get": {"operationId": "api_server.controllers.kg.workflows_controller.list_workflows", "tags": ["Workflows"], "description": "Retrieve a list of workflows", "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "search", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "Workflows", "schema": {"type": "array", "items": {"$ref": "#/definitions/Workflow"}}}}}, "post": {"operationId": "api_server.controllers.kg.workflows_controller.create_workflow", "tags": ["Workflows"], "security": [{"Bearer": []}], "description": "Create a new workflow", "consumes": ["application/json"], "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Workflow"}}], "responses": {"200": {"description": "Workflow created", "schema": {"$ref": "#/definitions/Workflow"}}}}}, "/project/{proj_key}/bags/{bag_key}/workflows/import": {"post": {"operationId": "api_server.controllers.kg.workflows_controller.import_workflows", "tags": ["Workflows"], "security": [{"Bearer": []}], "description": "Import multiple workflows", "consumes": ["application/json"], "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Workflow"}}}], "responses": {"200": {"description": "Workflow imported", "schema": {"type": "array", "items": {"$ref": "#/definitions/Workflow"}}}}}}, "/project/{proj_key}/bags/{bag_key}/workflows/{wf_key}": {"get": {"operationId": "api_server.controllers.kg.workflows_controller.get_workflow", "tags": ["Workflows"], "description": "Retrieve a workflow by its id", "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "wf_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Workflow", "schema": {"$ref": "#/definitions/Workflow"}}, "404": {"description": "Workflow doesn't exist", "schema": {"$ref": "#/definitions/Problem"}}}}, "delete": {"operationId": "api_server.controllers.kg.workflows_controller.delete_workflow", "tags": ["Workflows"], "security": [{"Bearer": []}], "description": "Delete a workflow by its id", "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "wf_key", "in": "path", "type": "string", "required": true}], "responses": {"204": {"description": "Workflow deleted"}, "404": {"description": "Workflow doesn't exist", "schema": {"$ref": "#/definitions/Problem"}}}}, "put": {"operationId": "api_server.controllers.kg.workflows_controller.update_workflow", "tags": ["Workflows"], "security": [{"Bearer": []}], "description": "Update a workflow", "consumes": ["application/json"], "produces": ["application/json"], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "wf_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Workflow"}}], "responses": {"204": {"description": "Workflow updated"}, "404": {"description": "Workflow doesn't exist", "schema": {"$ref": "#/definitions/Problem"}}}}}}, "definitions": {"Problem": {"type": "object", "properties": {"type": {"type": "string"}, "title": {"type": "string"}, "detail": {"type": "string"}, "status": {"type": "integer"}}, "additionalProperties": {}, "example": {"type": "ExampleError", "title": "An example title", "detail": "A descriptive message.", "status": 500, "may_have_extra_fields": true}}, "KGClientResponse": {"type": "object", "required": ["query", "status", "version"], "properties": {"query": {"type": "string"}, "status": {"type": "string"}, "version": {"type": "string"}}}, "NodeDataView": {"type": "object", "properties": {"type": {"type": "string"}, "projections": {"type": "array", "items": {"type": "string"}}, "parameters": {"type": "object"}}, "required": ["type"]}, "Workflow": {"type": "object", "properties": {"wf_key": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}, "template": {"type": "array"}, "variables": {"type": "object"}, "outputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"name": {"type": "string"}, "node_views": {"type": "object", "properties": {"limit": {"type": "number"}, "active_type": {"type": "string"}, "expanded": {"type": "boolean"}, "configurations": {"type": "array", "items": {"$ref": "#/definitions/NodeDataView"}}, "columns": {"type": "array", "items": {"$ref": "#/definitions/NodeDataView"}}}}}}}}, "required": ["name", "description", "template", "variables"]}, "NodeCollection": {"type": "object", "required": ["name", "node_list"], "properties": {"name": {"type": "string"}, "collection_key": {"type": "string"}, "node_list": {"type": "array", "items": {"type": "object", "properties": {"db": {"type": "string"}, "id": {"type": "string"}}, "required": ["db", "id"]}}}}}, "basePath": "/api/cps/kg/v1"}
