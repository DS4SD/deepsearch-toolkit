{"swagger": "2.0", "info": {"version": "2.0.0", "title": "Corpus Processing Service (CPS) API"}, "schemes": ["http", "https"], "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"description": "For accessing the API a valid JWT token must be passed in all the queries in\nthe 'Authorization' header.\n\nA valid JWT token is generated by the API and returned.\n\nThe following syntax must be used in the 'Authorization' header :\n    Bearer xxxxxx.yyyyyyy.zzzzzz\n", "type": "apiKey", "name": "Authorization", "in": "header", "x-apikeyInfoFunc": "oidc_user_mngt.utils.connexion_auth.api_key_info"}, "ManagementKey": {"description": "For accessing the API using a valid management token, it must be passed in all the queries in\nthe 'Authorization' header.\n", "type": "apiKey", "name": "Authorization", "in": "header", "x-apikeyInfoFunc": "api_server.utils.connexion_auth.api_mngt_token_info"}, "KGAuth": {"description": "API endpoints called by the KG application are authenticated by a valid JWT\ntoken which must contain the correct project resources which is needed.\nThe token must be passed in the 'X-CPS-KG-Authorization' header.\n\nA valid JWT token can be obtained by the CPS API or UI.\n\nThe following syntax must be used in the 'Authorization' header :\n    KGToken xxxxxx.yyyyyyy.zzzzzz\n", "type": "apiKey", "name": "X-CPS-KG-Authorization", "in": "header", "x-apikeyInfoFunc": "api_server.utils.connexion_auth.kg_auth_info"}}, "paths": {"/project/{proj_key}/packages": {"post": {"tags": ["Project"], "description": "Install packages on a project", "operationId": "provision_project_packages", "x-swagger-router-controller": "api_server.controllers.system_controller", "security": [{"Bearer": []}], "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "schema": {"title": "ProjectPackageInstalationManifest", "type": "object", "required": ["packages"], "properties": {"packages": {"type": "array", "items": {"type": "object", "properties": {"package_id": {"type": "string"}, "overrides": {"type": "object"}}, "required": ["package_id"]}, "uniqueItems": true}}}}], "responses": {"200": {"description": "Task started. It can be found in the tasks endpoint for the project.", "schema": {"$ref": "#/definitions/Task"}}, "404": {"description": "Package not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/data_indices": {"get": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Get project data indices", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "get_project_data_indices", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Project data indices.", "schema": {"type": "array", "items": {"$ref": "#/definitions/ProjectDataIndexWithStatus"}}}, "404": {"description": "Project data index not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}, "post": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Create a project data index", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "create_project_data_index", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "data", "x-body-name": "data", "in": "body", "required": true, "schema": {"x-oneOf": [{"$ref": "#/definitions/ProjectDataIndexNonView"}, {"$ref": "#/definitions/ProjectDataIndexView"}]}}], "responses": {"200": {"description": "Project data index.", "schema": {"$ref": "#/definitions/ProjectDataIndexWithStatus"}}, "404": {"description": "Project data index not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/data_indices/{index_key}": {"get": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Get project data index", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "get_project_data_index", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "index_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Project data index.", "schema": {"$ref": "#/definitions/ProjectDataIndexWithStatus"}}, "404": {"description": "Project data index not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}, "patch": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Update a project data index", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "update_project_data_index", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "index_key", "in": "path", "type": "string", "required": true}, {"name": "data", "x-body-name": "data", "in": "body", "required": true, "schema": {"x-oneOf": [{"$ref": "#/definitions/ProjectDataIndexNonView"}, {"$ref": "#/definitions/ProjectDataIndexView"}]}}], "responses": {"200": {"description": "Updated project data index.", "schema": {"$ref": "#/definitions/ProjectDataIndexWithStatus"}}, "404": {"description": "Project data index not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}, "delete": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Delete a project index data", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "delete_project_data_index", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "index_key", "in": "path", "type": "string", "required": true}, {"name": "confirmation_token", "in": "query", "required": true, "type": "string", "description": "The delete confirmation token"}], "responses": {"200": {"description": "Project data index deleted successfully."}, "404": {"description": "Project data index not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/data_indices/{index_key}/delete_token": {"post": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Get a token used to confirm the deletion of a project data index.", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "create_project_data_index_delete_token", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "index_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Project data index deletion token.", "schema": {"$ref": "#/definitions/TokenResponse"}}, "404": {"description": "Data flow template not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/data_indices/{index_key}/actions/upload": {"post": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Upload a file to a project data index", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "upload_project_data_index_file", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "index_key", "in": "path", "type": "string", "required": true}, {"name": "params", "in": "body", "required": true, "schema": {"type": "object", "required": ["file_url"], "properties": {"file_url": {"type": "string"}}}}], "responses": {"200": {"description": "CPS task info", "schema": {"$ref": "#/definitions/CpsTask"}}, "404": {"description": "Project data index not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/data_indices/{index_key}/actions/ccs_convert_upload": {"post": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Convert files via CCS and upload to a project data index (only for indices with 'deepsearch-doc' schema)", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "ccs_convert_upload_file_project_data_index", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "index_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "DataIndexUploadFileSource", "type": "object", "properties": {"scratch_files_id": {"description": "List of CCS's scratch files id to be converted and uploaded to the data index", "type": "array", "items": {"type": "string"}}, "file_url": {"description": "List of File's URL to be converted and uploaded to the data index", "type": "array", "items": {"type": "string"}}, "s3_source": {"description": "Coordinates to object store to get files to convert. Can specify which files with object keys.", "type": "object", "properties": {"coordinates": {"description": "Coordinates to object store to get files to convert", "$ref": "#/definitions/ProjectDataIndexS3Coordinates"}, "object_keys": {"description": "List of s3 object keys to retrieve from bucket to be converted and uploaded to the data index", "type": "array", "items": {"type": "string"}}}}, "conversion_settings": {"description": "Specify conversion settings (OCR, Assemble, ML Models) directly", "$ref": "#/definitions/ProjectDataIndexConversionSettings"}, "target_settings": {"description": "Specify the conversion target settings to use.", "type": "object", "properties": {"add_raw_pages": {"title": "add_raw_pages", "type": "boolean"}, "add_annotations": {"type": "boolean", "title": "add_annotations"}}}}}}], "responses": {"200": {"description": "CPS task info", "schema": {"$ref": "#/definitions/CpsTask"}}, "404": {"description": "Project data index not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/data_indices/{index_key}/actions/html_print_convert_upload": {"post": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Convert a list of HTML pages to PDF, convert them via CCS and upload to a project data index (only for indices with 'deepsearch-doc' schema)", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "html_print_convert_upload", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "index_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "DataIndexUploadFileSource", "type": "object", "required": ["urls"], "properties": {"urls": {"description": "List of URLs to be printed to PDF, converted and uploaded to the data index", "type": "array", "items": {"x-oneOf": [{"type": "string"}, {"type": "object", "properties": {"url": {"type": "string"}, "filename": {"type": "string"}, "meta": {"type": "object"}}, "required": ["url"]}]}}, "conversion_settings": {"description": "Specify conversion settings (OCR, Assemble, ML Models) directly", "$ref": "#/definitions/ProjectDataIndexConversionSettings"}}}}], "responses": {"200": {"description": "CPS task info", "schema": {"$ref": "#/definitions/CpsTask"}}, "404": {"description": "Project data index not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/data_indices/{index_key}/documents/{index_item_id}/attachment_url/{filename}": {"get": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Get url and path to upload an attachment to a project data index", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "get_attachment_upload_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "index_key", "in": "path", "type": "string", "required": true}, {"name": "index_item_id", "in": "path", "type": "string", "required": true}, {"name": "filename", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Attachment upload url and path", "schema": {"title": "AttachmentUploadData", "type": "object", "required": ["attachment_path", "upload_data"], "properties": {"attachment_path": {"type": "string", "description": "Attachment path."}, "upload_data": {"type": "object", "description": "Data to upload the temporary file. Example using requests 'requests(dot)post(url, data=fields, files=file)'. More information can be found on aws s3 documentation here https://docs.aws.amazon.com/AmazonS3/latest/userguide/PresignedUrlUploadObject.html", "properties": {"url": {"type": "string", "description": "url of the host."}, "fields": {"type": "object", "description": "fields to use in request body."}}}}}}, "404": {"description": "Project data index or document ID not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/data_indices/{index_key}/documents/{index_item_id}/attachment": {"post": {"tags": ["Data Indices"], "security": [{"Bearer": []}], "description": "Notify upload completion of an attachment to a project data index", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.project_data_indices", "operationId": "register_attachment", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "index_key", "in": "path", "type": "string", "required": true}, {"name": "index_item_id", "in": "path", "type": "string", "required": true}, {"name": "params", "in": "body", "required": true, "schema": {"type": "object", "required": ["attachment_path"], "properties": {"attachment_path": {"type": "string"}, "attachment_key": {"type": "string"}}}}], "responses": {"204": {"description": "Attachment notify successfull"}, "404": {"description": "Project data index or document ID not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/backend/project/{proj_key}/bags": {"get": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "List all bags in the project, backend-aware", "produces": ["application/json"], "operationId": "backend_list_project_kgs", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "term", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "OK", "schema": {"type": "array", "items": {"$ref": "#/definitions/BagBackendAware"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}, "post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Create new BAG, backend-aware", "produces": ["application/json"], "operationId": "backend_create_project_kg", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "data", "x-body-name": "data", "in": "body", "required": true, "schema": {"type": "object", "title": "CreateKnowledgeGraphOptions", "properties": {"name": {"type": "string", "pattern": "^(?:\\w| |-)+$", "description": "Name of the BAG", "maxLength": 32}, "flavours": {"type": "array", "description": "Flavours names of the bag. Determines its available resources", "items": {"type": "string"}}, "public": {"type": "boolean", "description": "If true, the BAG will be publicly available"}, "description": {"type": "string", "x-nullable": true, "description": "Description of the BAG"}}, "required": ["name", "flavours", "public"]}}], "responses": {"201": {"description": "OK", "schema": {"$ref": "#/definitions/BagBackendAware"}}, "400": {"description": "Invalid parameters.", "schema": {"$ref": "#/definitions/Problem"}}, "403": {"description": "Create knowledge graphs is disabled.", "schema": {"$ref": "#/definitions/Problem"}}, "409": {"description": "Cannot create BAG because one already exists with that name.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/backend/project/{proj_key}/bags/{bag_key}": {"patch": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Update the metadata of a Knowledge graph, backend-aware", "produces": ["application/json"], "operationId": "backend_update_project_kg_metadata", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "data", "x-body-name": "data", "in": "body", "required": true, "schema": {"type": "object", "title": "PatchKnowledgeGraphOptions", "properties": {"name": {"type": "string"}, "public": {"type": "boolean"}, "description": {"type": "string", "x-nullable": true}}, "required": ["name", "description", "public"], "additionalProperties": false}}], "responses": {"200": {"description": "Knowledge graph metadata updated.", "schema": {"$ref": "#/definitions/BagBackendAware"}}, "404": {"description": "Knowledge graph not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/backend/project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Assemble a data flow on a Knowledge Graph, backend-aware", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "backend_assemble_project_kg_data_flow", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "required": true, "type": "string"}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "AssembleDataFlowIntoKnowledgeGraphOptions", "type": "object", "properties": {"data_flow": {"type": "object", "properties": {"raw_data_flow": {"type": "object", "description": "If this is set, the raw data flow contents will be used.", "properties": {"template": {"description": "Must be valid JSON", "type": "string"}, "variables": {"type": "object"}}, "required": ["template", "variables"]}, "public": {"description": "Must be set if the data flow template is public", "type": "boolean"}, "df_tpl_key": {"description": "If set, the data flow with this key will be used.", "type": "string"}, "proj_key": {"description": "If set, allows for cross-project data flows to be used.", "type": "string"}}}, "snapshot": {"$ref": "#/definitions/TakeSnapshotSettingsBackendAware"}, "render": {"type": "object", "properties": {"variables": {"type": "object", "additionalProperties": {}}}, "required": ["variables"]}}, "required": ["render", "data_flow"]}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/ProjectTask"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/backend/project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow/latest/snapshots": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Create a snapshot of a Knowledge Graph from the last data flow assembly task, backend-aware", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.controller", "operationId": "backend_create_project_kg_snapshot_from_data_flow_assembly", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"type": "object", "required": ["snapshot"], "properties": {"snapshot": {"$ref": "#/definitions/TakeSnapshotSettingsBackendAware"}}}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/ProjectTask"}}, "404": {"description": "KG/BAG/Data Flow Assembly not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/backend/project/{proj_key}/bags/{bag_key}/status": {"get": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Get the status of a Knowledge Graph, backend-aware", "produces": ["application/json"], "operationId": "backend_get_project_kg_status", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "details", "in": "query", "type": "boolean", "required": false, "default": false}], "responses": {"200": {"description": "Knowledge Graph status.", "schema": {"$ref": "#/definitions/BagStatusBackendAware"}}, "404": {"description": "BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/public/bags": {"get": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "List all public BAGs", "produces": ["application/json"], "operationId": "list_public_knowledge_graphs", "parameters": [{"name": "term", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "OK", "schema": {"type": "array", "items": {"$ref": "#/definitions/Bag"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags": {"get": {"deprecated": true, "tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "List all bags in the project", "produces": ["application/json"], "operationId": "list_project_knowledge_graphs", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "term", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "OK", "schema": {"type": "array", "items": {"$ref": "#/definitions/Bag"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}, "post": {"deprecated": true, "tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Create new BAG", "produces": ["application/json"], "operationId": "create_project_knowledge_graph", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "data", "x-body-name": "data", "in": "body", "required": true, "schema": {"type": "object", "title": "CreateKnowledgeGraphOptions", "properties": {"name": {"type": "string", "pattern": "^(?:\\w| |-)+$", "description": "Name of the BAG", "maxLength": 32}, "flavour": {"type": "string", "description": "\"Flavour\" of the BAG, determines its available resources."}, "public": {"type": "boolean", "description": "If true, the BAG will be publicly available"}, "description": {"type": "string", "x-nullable": true, "description": "Description of the BAG"}}, "required": ["name", "flavour", "public"]}}], "responses": {"201": {"description": "OK", "schema": {"$ref": "#/definitions/Bag"}}, "400": {"description": "Invalid parameters.", "schema": {"$ref": "#/definitions/Problem"}}, "403": {"description": "Create knowledge graphs is disabled.", "schema": {"$ref": "#/definitions/Problem"}}, "409": {"description": "Cannot create BAG because one already exists with that name.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}": {"delete": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Delete a BAG", "produces": ["application/json"], "operationId": "delete_project_knowledge_graph", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "confirmation_token", "in": "query", "type": "string", "required": true}], "responses": {"204": {"description": "BAG deleted."}, "404": {"description": "BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}, "patch": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Update the metadata of a Knowledge graph", "produces": ["application/json"], "operationId": "update_project_knowledge_graph_metadata", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "data", "x-body-name": "data", "in": "body", "required": true, "schema": {"type": "object", "title": "PatchKnowledgeGraphOptions", "properties": {"name": {"type": "string"}, "public": {"type": "boolean"}, "description": {"type": "string", "x-nullable": true}}, "required": ["name", "description", "public"], "additionalProperties": false}}], "responses": {"200": {"description": "Knowledge graph metadata updated.", "schema": {"$ref": "#/definitions/Bag"}}, "404": {"description": "Knowledge graph not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/status": {"get": {"deprecated": true, "tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Get the status of a Knowledge Graph", "produces": ["application/json"], "operationId": "get_project_knowledge_graph_status", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "details", "in": "query", "type": "boolean", "required": false, "default": false}], "responses": {"200": {"description": "Knowledge Graph status.", "schema": {"$ref": "#/definitions/BagStatus"}}, "404": {"description": "BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/usage_stats": {"get": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Get the usage stats of a Knowledge Graph", "produces": ["application/json"], "operationId": "get_project_knowledge_graph_usage_stats", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Knowledge Graph usage stats.", "schema": {"title": "UsageStats", "type": "object", "properties": {"proj_key": {"type": "string"}, "bag_key": {"type": "string"}, "last_command": {"type": "string"}}}}, "404": {"description": "BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/delete_token": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Get a token used to confirm the deletion of a BAG.", "produces": ["application/json"], "operationId": "create_project_knowledge_graph_delete_token", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "BAG deletion token.", "schema": {"$ref": "#/definitions/TokenResponse"}}, "404": {"description": "BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/auth_token": {"get": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Get a token used to authenticate in the Erlenmeyer / KG APIs of a BAG.", "produces": ["application/json"], "operationId": "create_project_knowledge_graph_authentication_token", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "BAG auth token.", "schema": {"$ref": "#/definitions/TokenResponse"}}, "404": {"description": "BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/auth_callback": {"get": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Final step of redirection for authentication on a BAG.", "produces": ["application/json"], "operationId": "get_project_knowledge_graph_authentication_callback", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "bag_token", "in": "query", "type": "string", "required": true}], "responses": {"200": {"description": "BAG auth redirect URL.", "schema": {"title": "KnowledgeGraphAuthenticationCallback", "type": "object", "properties": {"callback_url": {"type": "string"}}}}, "401": {"description": "Unauthorized.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/backup": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Back up a Knowledge Graph", "produces": ["application/json"], "operationId": "create_project_knowledge_graph_backup", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "BackupKnowledgeGraphOptions", "type": "object", "properties": {"backup_s3": {"type": "boolean", "default": true}, "coordinates": {"$ref": "#/definitions/S3CoordinatesWithBackupKey"}}}}], "responses": {"201": {"description": "OK", "schema": {"$ref": "#/definitions/Task"}}, "400": {"description": "Invalid parameters.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "KG/BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/restore": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Restore a back up of a Knowledge Graph", "produces": ["application/json"], "operationId": "restore_project_knowledge_graph_backup", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "RestoreKnowledgeGraphBackupOptions", "type": "object", "properties": {"coordinates": {"$ref": "#/definitions/S3CoordinatesWithBackupKey"}}}}], "responses": {"201": {"description": "OK", "schema": {"$ref": "#/definitions/Task"}}, "400": {"description": "Invalid parameters.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "KG/BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/export": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Download a Knowledge Graph", "produces": ["application/json"], "operationId": "download_project_knowledge_graph", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}], "responses": {"201": {"description": "OK", "schema": {"$ref": "#/definitions/Task"}}, "400": {"description": "Invalid parameters.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "KG/BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow": {"get": {"deprecated": true, "tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "List assemble tasks for a Knowledge Graph.", "produces": ["application/json"], "operationId": "list_project_knowledge_graph_assemble_tasks", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "required": true, "type": "string"}, {"name": "limit", "in": "query", "required": false, "type": "integer", "minimum": 0, "default": 50}, {"name": "skip", "in": "query", "required": false, "type": "integer", "minimum": 0, "default": 0}], "responses": {"200": {"description": "List of tasks.", "schema": {"type": "array", "items": {"title": "DataFlowAssembleIntoKnowledgeGraphTask", "type": "object", "properties": {"timestamp": {"type": "number", "format": "double"}, "data_flow": {"type": "object", "properties": {"render_options": {"type": "object", "properties": {"variables": {"type": "object"}, "target_bag": {"type": "object"}}}, "template": {"type": "string"}, "variables": {"type": "object"}}}}}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}, "post": {"deprecated": true, "tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Assemble a data flow on a Knowledge Graph", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "assemble_project_knowledge_graph_data_flow", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "required": true, "type": "string"}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "AssembleDataFlowIntoKnowledgeGraphOptions", "type": "object", "properties": {"data_flow": {"type": "object", "properties": {"raw_data_flow": {"type": "object", "description": "If this is set, the raw data flow contents will be used.", "properties": {"template": {"description": "Must be valid JSON", "type": "string"}, "variables": {"type": "object"}}, "required": ["template", "variables"]}, "public": {"description": "Must be set if the data flow template is public", "type": "boolean"}, "df_tpl_key": {"description": "If set, the data flow with this key will be used.", "type": "string"}, "proj_key": {"description": "If set, allows for cross-project data flows to be used.", "type": "string"}}}, "snapshot": {"$ref": "#/definitions/TakeSnapshotSettings"}, "render": {"type": "object", "properties": {"variables": {"type": "object", "additionalProperties": {}}}, "required": ["variables"]}}, "required": ["render", "data_flow"]}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/ProjectTask"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/dataset_assembles/{task_id}/report": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Create a report for a data flow task assemble.", "produces": ["application/json"], "operationId": "create_project_knowledge_graph_assemble_report", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "task_id", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "DataFlowAssembleReportOptions", "type": "object", "properties": {"max_errors": {"type": "integer", "default": 50, "minimum": 0, "maximum": 100}, "event_log_level": {"type": "string", "default": "error", "enum": ["debug", "info", "warning", "error", "critical"]}}}}], "responses": {"200": {"description": "Report.", "schema": {"title": "DataFlowAssembleReport", "type": "object", "properties": {"task_id": {"type": "string"}, "dataflow_tasks": {"type": "object", "additionalProperties": {"title": "DataFlowAssembleReportSingleTask", "type": "object", "properties": {"status": {"type": "string"}, "progress": {"type": "number"}, "chunks": {"type": "object", "properties": {"total": {"type": "integer"}, "completed": {"type": "integer"}, "spawned": {"type": "integer"}, "success": {"type": "integer"}, "failure": {"type": "integer"}}}, "errors": {"type": "array", "items": {"type": "object", "properties": {"cause": {"type": "object", "properties": {"type": {"type": "string"}, "value": {}}}, "timestamp": {"type": "number"}}}}, "task_type": {"type": "string"}}}}}}}, "404": {"description": "Task not found, or is not a data flow assemble.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/assemble_dataflow/latest/snapshots": {"post": {"deprecated": true, "tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Create a snapshot of a Knowledge Graph from the last data flow assembly task.", "produces": ["application/json"], "x-swagger-router-controller": "api_server.controllers.controller", "operationId": "create_project_knowledge_graph_snapshot_from_data_flow_assembly", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"type": "object", "required": ["snapshot"], "properties": {"snapshot": {"$ref": "#/definitions/TakeSnapshotSettings"}}}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/ProjectTask"}}, "404": {"description": "KG/BAG/Data Flow Assembly not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/bags/{bag_key}/snapshots": {"get": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "List snapshots for a knowledge graph from assembled data flows.", "produces": ["application/json"], "operationId": "list_project_knowledge_graph_snapshots", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Snapshots", "schema": {"type": "array", "items": {"$ref": "#/definitions/KgSnapshot"}}}, "404": {"description": "KG/BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}, "post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Create a snapshot of a Knowledge Graph, with its current state.", "produces": ["application/json"], "operationId": "create_project_knowledge_graph_snapshot", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "KnowledgeGraphSnapshotOptions", "type": "object", "properties": {"name": {"type": "string", "pattern": "^(?:\\w| |-)+$"}}, "required": ["name"]}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/ProjectTask"}}, "403": {"description": "Feature is disabled on this instance.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "KG/BAG not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.kg_controller"}}, "/project/{proj_key}/bags/{bag_key}/snapshots/{execution_id}/actions/load": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Load a snapshot resulting from an assembled data flow", "produces": ["application/json"], "operationId": "load_project_knowledge_graph_snapshot", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "execution_id", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Snapshot is being loaded.", "schema": {"$ref": "#/definitions/Task"}}, "400": {"description": "Invalid parameters.", "schema": {"$ref": "#/definitions/Problem"}}, "403": {"description": "Feature is disabled on this instance.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "KG/BAG/Snapshot not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/snapshots/{execution_id}": {"delete": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Delete a snapshot resulting from an assembled data flow. The execution log itself is not deleted.", "produces": ["application/json"], "operationId": "delete_project_knowledge_graph_snapshot", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "execution_id", "in": "path", "type": "string", "required": true}], "responses": {"204": {"description": "OK"}, "400": {"description": "Invalid parameters.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "KG/BAG/Snapshot not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/load_dataflow": {"get": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "List load tasks for a Knowledge Graph", "produces": ["application/json"], "operationId": "list_project_knowledge_graph_load_tasks", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "required": true, "type": "string"}, {"name": "limit", "in": "query", "required": false, "type": "integer", "minimum": 0, "default": 50}, {"name": "skip", "in": "query", "required": false, "type": "integer", "minimum": 0, "default": 0}], "responses": {"200": {"description": "List of tasks.", "schema": {"type": "array", "items": {"title": "DataFlowLoadIntoKnowledgeGraphTask", "type": "object", "properties": {"timestamp": {"type": "number", "format": "double"}, "data_flow": {"type": "object", "properties": {"render_options": {"type": "object", "properties": {"variables": {"type": "object"}, "target_bag": {"type": "object"}}}, "template": {"type": "string"}, "variables": {"type": "object"}}}, "save": {"type": "object"}}}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}, "post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Load a data flow onto a Knowledge Graph.", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "load_project_knowledge_graph_data_flow", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "required": true, "type": "string"}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "LoadDataFlowIntoKnowledgeGraphOptions", "type": "object", "properties": {"data_flow": {"type": "object", "properties": {"raw_data_flow": {"type": "object", "description": "If this is set, the raw data flow contents will be used.", "properties": {"template": {"description": "Must be valid JSON", "type": "string"}, "variables": {"type": "object"}}, "required": ["template", "variables"]}, "public": {"description": "Must be set if the data flow template is public", "type": "boolean"}, "df_tpl_key": {"description": "If set, the data flow with this key will be used.", "type": "string"}, "proj_key": {"description": "If set, allows for cross-project data flows to be used.", "type": "string"}}}, "render": {"type": "object", "properties": {"variables": {"type": "object", "additionalProperties": {}}}, "required": ["variables"]}, "save": {"type": "object"}}, "required": ["save", "render", "data_flow"]}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/ProjectTask"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/suspend": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Suspend a Knowledge Graph", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "suspend_project_knowledge_graph", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "required": true, "type": "string"}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "SuspendKnowledgeGraphOptions", "type": "object", "properties": {"force": {"type": "boolean", "description": "If true, the KG will be suspended even if it's busy"}, "snapshot": {"type": "object", "properties": {"name": {"type": "string"}}}}, "required": ["force"]}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/ProjectTask"}}, "404": {"description": "Knowledge Graph doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/resume": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Resume a Knowledge Graph", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "resume_project_knowledge_graph", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "required": true, "type": "string"}, {"name": "body", "in": "body", "required": true, "schema": {"title": "ResumeKnowledgeGraphOptions", "type": "object", "properties": {"snapshot_to_restore_id": {"type": "string"}, "reset": {"type": "boolean"}}}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/ProjectTask"}}, "403": {"description": "Feature is disabled on this instance.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "Knowledge Graph doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/upgrade": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "Upgrade the deployment chart of a Knowledge Graph", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "upgrade_project_knowledge_graph_deployment", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "required": true, "type": "string"}, {"name": "body", "in": "body", "required": true, "schema": {"title": "KnowledgeGraphChartUpgradeOptions", "type": "object", "properties": {"chart": {"type": "string"}}}}], "responses": {"200": {"description": "Chart upgrading."}, "404": {"description": "Knowledge Graph doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/recreate_deployment": {"post": {"tags": ["Knowledge Graphs"], "security": [{"Bearer": []}], "description": "(Re)create the deployment for a Knowledge Graph", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "recreate_project_knowledge_graph_deployment", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "required": true, "type": "string"}, {"name": "body", "in": "body", "required": true, "schema": {"title": "KnowledgeGraphDeploymentRecreationOptions", "type": "object", "properties": {"force": {"type": "boolean"}}, "required": ["force"]}}], "responses": {"200": {"description": "Deployment upgrading."}, "404": {"description": "Knowledge Graph doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "409": {"description": "Refused to recreate the deployment since it already exists and the `force` flag is not `true`.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/bags/{bag_key}/tasks/export_dataset": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}, {"KGAuth": []}], "description": "Export dataset from a Knowledge Graph", "produces": ["application/json"], "operationId": "export_dataset", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "bag_key", "in": "path", "type": "string", "required": true}, {"name": "data", "in": "body", "required": true, "schema": {"type": "object", "required": ["info"], "properties": {"info": {"type": "object", "required": ["coords"], "properties": {"node_list": {"type": "array", "minLength": 1, "example": [{"_db": "db1-hash", "_id": "node-id"}, {"_db": "db2-hash", "_id": "node-id"}], "items": {"type": "object", "properties": {"_db": {"type": "string"}, "_id": {"type": "string"}}, "required": ["_db", "_id"]}}, "collection_key": {"type": "string"}, "include_s3_data": {"type": "boolean", "default": false}, "projection": {"type": "object", "example": {"projection": {}}, "description": "A dict specifying the fields to include or exclude. Use a dict to exclude fields from the result (e.g. projection={'main-text': false})."}, "coords": {"type": "object", "required": ["databases", "node_collection"], "properties": {"databases": {"type": "object", "additionalProperties": true}, "node_collection": {"type": "object", "properties": {"uri": {"type": "string"}, "database": {"type": "string"}, "collection_name_prefix": {"type": "string"}, "collection": {"type": "string"}}, "required": ["uri", "database", "collection_name_prefix", "collection"]}}}}}}}}], "responses": {"200": {"description": "Task", "schema": {"$ref": "#/definitions/ProjectTask"}}, "404": {"description": "Task not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.kg_controller"}}, "/elastic/indices/{index_type}/{index_domain}": {"get": {"tags": ["Elastic"], "security": [{"Bearer": []}], "description": "List of indices for elastic instance.", "produces": ["application/json"], "operationId": "list_indices_from_elastic_instance", "parameters": [{"name": "index_type", "in": "path", "type": "string", "default": "all", "required": true}, {"name": "index_domain", "in": "path", "type": "string", "required": true, "default": "all"}], "responses": {"200": {"description": "List of Elastic Instance Indices", "schema": {"type": "array", "items": {"$ref": "#/definitions/DataCollection"}}}, "404": {"description": "Instance indices not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.elastic_controller"}}, "/elastic/{elastic_instance}/{elastic_index}/properties": {"get": {"tags": ["Elastic"], "security": [{"Bearer": []}], "description": "Get the property schema of the given index.", "produces": ["application/json"], "operationId": "get_index_properties", "parameters": [{"name": "elastic_instance", "in": "path", "type": "string", "required": true}, {"name": "elastic_index", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Property schema", "schema": {"$ref": "#/definitions/ElasticIndexProperties"}}, "404": {"description": "Instance index not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.elastic_controller"}}, "/elastic/{elastic_instance}/{elastic_index}/saved_queries": {"get": {"tags": ["Elastic"], "security": [{"Bearer": []}], "description": "List Kibana saved queries.", "produces": ["application/json"], "operationId": "get_kibana_saved_queries", "parameters": [{"name": "elastic_instance", "in": "path", "type": "string", "required": true}, {"name": "elastic_index", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "List of Kibana saved queries", "schema": {"type": "array", "title": "KibanaSavedQueriesResult", "items": {"$ref": "#/definitions/KibanaSavedQueriesResult"}}}, "404": {"description": "Instance indices not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.elastic_controller"}}, "/elastic/domains": {"get": {"tags": ["Elastic"], "security": [{"Bearer": []}], "description": "List system elastic domains.", "produces": ["application/json"], "operationId": "get_elastic_domains", "responses": {"200": {"description": "List of Elastic Domains.", "schema": {"type": "array", "items": {"type": "string"}}}, "404": {"description": "Domains not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.elastic_controller"}}, "/elastic/query_max_size": {"get": {"tags": ["Elastic"], "security": [{"Bearer": []}], "description": "Get the system maximum workable elastic query size.", "produces": ["application/json"], "operationId": "get_elastic_query_max_size", "responses": {"200": {"description": "Maximum elastic query size.", "schema": {"type": "object", "properties": {"elastic_query_max_size": {"type": "number"}}}}, "404": {"description": "No maximum workable elastic query size found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.elastic_controller"}}, "/deployment/info": {"get": {"tags": ["System"], "description": "Get deployment version report", "produces": ["application/json"], "operationId": "get_version_report", "security": [{"ManagementKey": []}], "parameters": [], "responses": {"200": {"description": "OK"}, "401": {"description": "Authentication failed, management api token is invalid or doesn't match", "schema": {"$ref": "#/definitions/Problem"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/system/info": {"get": {"tags": ["System"], "description": "Get system info", "produces": ["application/json"], "operationId": "get_system_information", "parameters": [], "responses": {"201": {"description": "OK", "schema": {"$ref": "#/definitions/SystemInfo"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/system/modules/configuration": {"get": {"tags": ["System"], "description": "Get modules configuration", "produces": ["application/json"], "operationId": "get_system_modules_configuration", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [], "responses": {"201": {"description": "Modules configuration", "schema": {"$ref": "#/definitions/SystemModulesConfiguration"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/modules/tasks": {"get": {"tags": ["System"], "description": "Get modules tasks", "produces": ["application/json"], "operationId": "get_system_modules_tasks", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [], "responses": {"201": {"description": "Modules tasks", "schema": {"$ref": "#/definitions/SystemModulesTasks"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/celery_tasks/status": {"get": {"tags": ["Tasks"], "security": [{"Bearer": []}], "description": "Get the status of Celery tasks.", "produces": ["application/json"], "operationId": "list_system_celery_tasks", "parameters": [{"name": "proj_key", "in": "query", "required": false, "type": "string"}, {"name": "project_task_id", "in": "query", "required": false, "type": "string"}, {"name": "started_since", "required": false, "type": "number", "in": "query", "description": "If set, return the tasks created at or after this timestamp. Otherwise, return the tasks created up to 60 minutes of the system's date, if `project_task_id` is not set."}, {"name": "task_status", "required": false, "type": "number", "format": "double", "in": "query"}, {"name": "limit", "required": false, "type": "integer", "in": "query", "default": 50}], "responses": {"200": {"description": "Celery tasks", "schema": {"type": "array", "items": {"title": "CeleryTask", "type": "object", "required": ["task_id", "project_task_id", "proj_key", "task_type", "created_at", "started_at", "completed_at", "task_status", "worker_name", "meta"], "properties": {"task_id": {"type": "string"}, "task_type": {"type": "string"}, "project_task_id": {"type": "string"}, "project_task_type": {"type": "string", "x-nullable": true}, "meta": {"type": "object", "additionalProperties": {}}, "proj_key": {"type": "string"}, "created_at": {"type": "number"}, "started_at": {"type": "number"}, "completed_at": {"type": "number"}, "task_status": {"type": "string"}, "worker_name": {"type": "string"}, "metrics": {"type": "object"}}}}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/system/celery_tasks/failure": {"get": {"tags": ["Tasks"], "security": [{"Bearer": []}], "description": "Get celery tasks that failed.", "produces": ["application/json"], "operationId": "list_failure_celery_tasks", "parameters": [{"name": "proj_key", "in": "query", "required": true, "type": "string"}, {"name": "task_id", "in": "query", "required": true, "type": "string"}], "responses": {"200": {"description": "Celery tasks", "schema": {"type": "array", "items": {"title": "CeleryTask", "type": "object", "required": ["proj_key", "task_id", "failures"], "properties": {"proj_key": {"type": "string"}, "task_id": {"type": "string"}, "failures": {"type": "array", "items": {"type": "object", "properties": {"worker_name": {"type": "string"}, "task_id": {"type": "string"}, "meta": {"type": "object", "additionalProperties": {}}, "logs": {"type": "object", "additionalProperties": {}}}}}}}}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/system/kgs": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "List all Knowledge Graphs in the system", "produces": ["application/json"], "operationId": "list_system_knowledge_graphs", "parameters": [{"name": "proj_key", "in": "query", "type": "string", "required": false}, {"name": "term", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "OK", "schema": {"type": "array", "items": {"title": "KnowledgeGraphSystemInformation", "type": "object", "properties": {"proj_key": {"type": "string"}, "bag_key": {"type": "string"}, "name": {"type": "string"}, "slug": {"type": "string"}, "timestamp": {"type": "number", "format": "double"}, "bag_domain": {"type": "string"}, "bag_url": {"type": "string"}, "public": {"type": "boolean"}, "project_name": {"type": "string"}, "backend": {"type": "object", "additionalProperties": {"type": "object", "properties": {"flavour": {"type": "string"}, "deployment": {"type": "object", "properties": {"name": {"type": "string"}, "chart": {"type": "string"}, "flavour": {"type": "string"}, "resources": {"type": "object", "additionalProperties": {"type": "object", "properties": {"requests": {"type": "object"}, "limits": {"type": "object"}}}}}}}}}}}}}, "default": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.admin_kg_controller"}}, "/system/packages": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get packages available in this CPS installation for installing in a project.", "produces": ["application/json"], "operationId": "list_packages", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [], "responses": {"200": {"description": "Packages available to this CPS installation", "schema": {"type": "array", "items": {"$ref": "#/definitions/CpsPackage"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/get_all_kgs": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get all kgs (only bag_key) for admin use", "produces": ["application/json"], "operationId": "system_get_all_kgs_admin", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [], "responses": {"200": {"description": "Array with all kgs's key", "schema": {"type": "array", "items": {"type": "string"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/get_all_dcs": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get all data catalogs (only dc_key) for admin use", "produces": ["application/json"], "operationId": "system_get_all_dcs_admin", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [], "responses": {"200": {"description": "Array with all dcs's key", "schema": {"type": "array", "items": {"type": "string"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/kg_storage_summary/{kg_key}": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get kg storage summary", "produces": ["application/json"], "operationId": "system_get_kg_storage_summary_async", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [{"name": "kg_key", "in": "path", "type": "string", "required": true, "description": "Knowledge graph key"}], "responses": {"200": {"description": "Kg storage summary", "schema": {"$ref": "#/definitions/StorageSummaryTask"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/dc_storage_summary/{dc_key}": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get dc storage summary", "produces": ["application/json"], "operationId": "system_get_dc_storage_summary_async", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [{"name": "dc_key", "in": "path", "type": "string", "required": true, "description": "Data catalog key"}], "responses": {"200": {"description": "DC storage summary", "schema": {"$ref": "#/definitions/StorageSummaryTask"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/summary": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get cps summary data.", "produces": ["application/json"], "operationId": "system_get_cps_summary", "parameters": [], "responses": {"200": {"description": "Cps summary", "schema": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "workersPool": {"type": "string"}, "numNodes": {"type": "integer"}, "availSlots": {"type": "integer"}, "availMemSlots": {"type": "integer"}, "availCpuSlots": {"type": "integer"}, "numberKgs": {"type": "integer"}, "runningKgs": {"type": "integer"}}}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/system/admin/list_all_flavours": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get all KG flavours storage on db", "produces": ["application/json"], "operationId": "list_all_flavours", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [], "responses": {"200": {"description": "Flavours storage on db", "schema": {"type": "array", "items": {"$ref": "#/definitions/BagFlavourFullData"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/get_flavour/{flavour_name}": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get flavour from db", "produces": ["application/json"], "operationId": "get_flavour", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [{"name": "flavour_name", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Get flavour successful", "schema": {"$ref": "#/definitions/BagFlavourFullData"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/save_flavour": {"put": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Save flavour on db", "produces": ["application/json"], "operationId": "save_flavour", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [{"name": "new_flavour", "in": "query", "required": true, "type": "boolean"}, {"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BagFlavourFullData"}}], "responses": {"200": {"description": "Save flavour successful"}, "409": {"description": "Flavour name already taken"}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/delete_flavour/{flavour_name}": {"delete": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Delete flavour from db", "produces": ["application/json"], "operationId": "delete_flavour", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [{"name": "flavour_name", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Deleted flavour successful"}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/list_projects_flavours": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get all projects and their flavours", "produces": ["application/json"], "operationId": "list_projects_flavours", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [], "responses": {"200": {"description": "Flavours storage on db", "schema": {"type": "array", "items": {"$ref": "#/definitions/ProjectsFlavours"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/save_project_flavours": {"put": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Save project flavours assignment on db", "produces": ["application/json"], "operationId": "save_project_flavours", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectsFlavours"}}], "responses": {"200": {"description": "Save project flavours successful"}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/get_project_flavours/{proj_key}": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get project assignment flavours", "produces": ["application/json"], "operationId": "list_flavours_by_project", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Ok", "schema": {"title": "ProjectFlavours", "type": "object", "properties": {"proj_key": {"type": "string"}, "flavours": {"type": "array", "items": {"$ref": "#/definitions/BagFlavourFullData"}}}, "required": ["proj_key", "flavours"]}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/get_flavours_default_quota": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get flavours default values", "produces": ["application/json"], "operationId": "get_flavours_default_quotas", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [], "responses": {"200": {"description": "Flavours default values", "schema": {"type": "array", "items": {"$ref": "#/definitions/BagFlavourDefaultQuota"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/save_flavours_default_quota": {"put": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Save flavours default quota", "produces": ["application/json"], "operationId": "save_flavours_default_quotas", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [{"name": "flavours", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/BagFlavourDefaultQuota"}}}], "responses": {"200": {"description": "Save flavours default quotas successful", "schema": {"type": "array", "items": {"$ref": "#/definitions/BagFlavourDefaultQuota"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/get_projects_flavours_quota": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get projects flavours quotas", "produces": ["application/json"], "operationId": "get_projects_flavours_quota", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [], "responses": {"200": {"description": "Projects flavours quotas", "schema": {"type": "array", "items": {"$ref": "#/definitions/ProjectsFlavoursQuota"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/save_project_flavours_quota": {"put": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Save project flavours quota", "produces": ["application/json"], "operationId": "save_project_flavours_quota", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [{"name": "projects_flavours_quotas", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectsFlavoursQuota"}}], "responses": {"200": {"description": "Save project flavours quota successful"}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/get_project_flavours_quota/{proj_key}": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Get project flavours quota", "produces": ["application/json"], "operationId": "get_project_flavours_quota", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Project flavours quota", "schema": {"type": "array", "items": {"$ref": "#/definitions/FlavoursQuota"}}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/system/admin/get_project_flavour_total_kgs/{proj_key}/{flavour_name}": {"get": {"tags": ["System"], "security": [{"Bearer": []}], "description": "Gets kg total number by proj_key and flavour_key", "produces": ["application/json"], "operationId": "get_project_flavour_total_kgs", "x-swagger-router-controller": "api_server.controllers.system_controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "flavour_name", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Project flavours total kg number", "schema": {"title": "ProjectFlavourTotalKgs", "type": "object", "properties": {"proj_key": {"type": "string"}, "flavour_name": {"type": "string"}, "total_kgs": {"type": "integer"}}, "required": ["proj_key", "flavour_name", "total_kgs"]}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/kgc/dataflows/actions/validate": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Validate a dataflow", "produces": ["application/json"], "operationId": "validate_project_data_flow", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dataflow", "x-body-name": "dataflow", "in": "body", "required": true, "schema": {"$ref": "#/definitions/KgcDataInput"}}], "responses": {"200": {"description": "Validation successful."}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflows/actions/run": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Run a dataflow", "produces": ["application/json"], "operationId": "assemble_project_data_flow", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dataflow", "x-body-name": "dataflow", "in": "body", "required": true, "schema": {"$ref": "#/definitions/KgcDataInput"}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/Task"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflows/actions/load": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Load a dataflow into a KG", "produces": ["application/json"], "operationId": "load_project_data_flow", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"$ref": "#/definitions/LoadKgcDataInput"}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/Task"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/public/kgc/dataflow_templates": {"get": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "List public data flow templates", "produces": ["application/json"], "operationId": "list_public_data_flow_templates", "parameters": [{"name": "query", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "List of data flow templates.", "schema": {"type": "array", "items": {"$ref": "#/definitions/DataFlowTemplateListItem"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflow_templates": {"get": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "List a data flow templates", "produces": ["application/json"], "operationId": "list_project_data_flow_templates", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "query", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "List of data flow templates.", "schema": {"type": "array", "items": {"$ref": "#/definitions/DataFlowTemplateListItem"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}, "post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Create a data flow template", "produces": ["application/json"], "operationId": "create_project_data_flow_template", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "CreateDataFlowTemplateOptions", "type": "object", "properties": {"public": {"type": "boolean"}, "name": {"type": "string", "pattern": "^(?:\\w| |-)+$", "maxLength": 50, "minLength": 1}, "description": {"type": "string", "x-nullable": true}, "variables": {"type": "object", "additionalProperties": {"type": "object", "required": ["type"], "properties": {"type": {"$ref": "#/definitions/DataFlowTemplateVariable"}, "default_value": {}}}}, "template": {"$ref": "#/definitions/DataFlowTemplate"}}, "required": ["public", "name", "variables", "template", "description"]}}], "responses": {"200": {"description": "Dataflow created.", "schema": {"$ref": "#/definitions/DataFlow"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflow_templates/from_json": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Create a data flow template from a JSON file.\n**DEPRECATED**: use `create_project_data_flow_template`\n", "deprecated": true, "consumes": ["multipart/form-data"], "produces": ["application/json"], "operationId": "upload_project_data_flow_template", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "name", "in": "formData", "required": false, "type": "string"}, {"name": "description", "in": "formData", "required": false, "type": "string"}, {"name": "public", "in": "formData", "type": "boolean", "required": false}, {"name": "contents", "in": "formData", "required": true, "type": "file"}], "responses": {"200": {"description": "Dataflow created.", "schema": {"$ref": "#/definitions/DataFlow"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/public/kgc/dataflow_templates/{df_tpl_key}": {"get": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Get a single data flow template", "produces": ["application/json"], "operationId": "get_public_data_flow_template", "parameters": [{"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}], "responses": {"200": {"description": "Data flow.", "schema": {"$ref": "#/definitions/DataFlow"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/public/kgc/dataflow_templates/{df_tpl_key}/export.json": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Export a single public data flow template", "produces": ["application/vnd.ibm.cps.df-template+json"], "operationId": "export_public_data_flow_template", "parameters": [{"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}], "responses": {"200": {"description": "Data flow template.", "schema": {"type": "file"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}": {"get": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Get a single data flow template", "produces": ["application/json"], "operationId": "get_project_data_flow", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}], "responses": {"200": {"description": "Data flow template.", "schema": {"$ref": "#/definitions/DataFlow"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}, "put": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Update a data flow template", "produces": ["application/json"], "operationId": "update_project_data_flow_template", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "UpdateDataFlowOptions", "type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string"}, "variables": {"type": "object", "additionalProperties": {"type": "object", "required": ["type"], "properties": {"type": {"$ref": "#/definitions/DataFlowTemplateVariable"}, "default_value": {}}}}, "template": {"$ref": "#/definitions/DataFlowTemplate"}, "public": {"type": "boolean"}}, "required": ["public", "name", "variables", "template"]}}], "responses": {"200": {"description": "Dataflow updated.", "schema": {"$ref": "#/definitions/DataFlow"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}, "delete": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Delete a single data flow template", "produces": ["application/json"], "operationId": "delete_project_data_flow_template", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}, {"name": "confirmation_token", "in": "query", "type": "string", "required": true}], "responses": {"204": {"description": "Data flow deleted."}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/delete_token": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Get a token used to confirm the deletion of a data flow template.", "produces": ["application/json"], "operationId": "create_project_data_flow_template_delete_token", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "df_tpl_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Data flow deletion token.", "schema": {"$ref": "#/definitions/TokenResponse"}}, "404": {"description": "Data flow template not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/export.json": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Export a single data flow template", "produces": ["application/vnd.ibm.cps.df-template+json"], "operationId": "export_project_data_flow_template", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}], "responses": {"200": {"description": "Data flow template.", "schema": {"type": "file"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/topology": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Render a single data flow template, replacing the variable placeholders by their actual values and get the resulting Knowledge Graph topology from it.", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "get_project_data_flow_template_topology", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "DataFlowTopologyOptions", "type": "object", "properties": {"variables": {"type": "object", "additionalProperties": {}}}}}], "responses": {"200": {"description": "Data flow topology.", "schema": {"$ref": "#/definitions/Topology"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/actions/render": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Render a single data flow template, replacing the variable placeholders by their actual values.", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "render_project_data_flow_template", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "RenderDataFlowTemplateOptions", "type": "object", "properties": {"target_bag": {"type": "object", "properties": {"bag_key": {"type": "string"}, "proj_key": {"type": "string", "description": "If set, this will override the 'proj_key' parameter in the path, allowing cross-project KGs to be used."}}, "required": ["bag_key"]}, "variables": {"type": "object", "additionalProperties": {}}}, "required": ["target_bag", "variables"]}}], "responses": {"200": {"description": "Rendered data flow", "schema": {"type": "object"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/actions/run": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Render a single data flow template, replacing the variable placeholders by their actual values and run it.", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "assemble_project_data_flow_template_into_knowledge_graph", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "RunDataFlowTemplateOptions", "type": "object", "properties": {"target_bag_key": {"type": "string"}, "variables": {"type": "object", "additionalProperties": {}}}}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/Task"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/raw_dataflow_templates/actions/run": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Render a single data flow template, replacing the variable placeholders by their actual values and run it.", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "assemble_project_raw_data_flow_template_into_knowledge_graph", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "RunDataFlowTemplateOptions", "type": "object", "required": ["data_flow", "variable_values", "log_task"], "properties": {"log_task": {"type": "boolean", "default": true}, "data_flow": {"type": "object", "properties": {"template": {"type": "object", "properties": {"config": {"type": "object"}, "data-flow": {"type": "array", "items": {"type": "object"}}}, "required": ["config", "data-flow"]}, "variables": {"type": "object", "additionalProperties": {}}}, "required": ["template", "variables"]}, "variable_values": {"type": "object", "additionalProperties": {}}}}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/Task"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc/dataflow_templates/{df_tpl_key}/actions/load": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "Render a single data flow template, replacing the variable placeholders by their actual values and load it into a Knowledge Graph.", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "load_project_data_flow_template_into_knowledge_graph", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "LoadDataFlowIntoKnowledgeGraphOptions", "type": "object", "properties": {"render": {"type": "object", "properties": {"target_bag": {"type": "object", "properties": {"bag_key": {"type": "string"}, "proj_key": {"type": "string", "description": "If set, this will override the 'proj_key' parameter in the path, allowing cross-project KGs to be used."}}, "required": ["bag_key"]}, "variables": {"type": "object", "additionalProperties": {}}}, "required": ["target_bag", "variables"]}, "target": {"type": "object", "properties": {"save": {"type": "object"}}, "required": ["save"]}}}}], "responses": {"200": {"description": "Task started.", "schema": {"$ref": "#/definitions/Task"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/kgc_dataflow_templates/debug/{df_tpl_key}": {"post": {"tags": ["Data Flows"], "security": [{"Bearer": []}], "description": "(Debug) get the fully rendered data flow, with all the coordinates set.", "produces": ["application/json"], "consumes": ["application/json"], "operationId": "debug_project_data_flow_template", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "df_tpl_key", "in": "path", "required": true, "type": "string"}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "FullyRenderedDataFlow", "type": "object", "properties": {"target_bag": {"type": "object", "required": ["bag_key"], "properties": {"bag_key": {"type": "string"}, "proj_key": {"type": "string"}}}, "variables": {"type": "object", "additionalProperties": {}}}}}], "responses": {"200": {"description": "Rendered data flow.", "schema": {"type": "object"}}, "400": {"description": "Invalid dataflow.", "schema": {"$ref": "#/definitions/Problem"}}, "404": {"description": "Data flow template doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/data_cataloges/known_schemas": {"get": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "List System Known Data Catalog Schemas.", "produces": ["application/json"], "operationId": "list_known_data_catalog_schemas", "parameters": [], "responses": {"200": {"description": "List of Known Data Catalog Schemas.", "schema": {"type": "array", "items": {"$ref": "#/definitions/DataCatalogSchema"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/data_catalogues/with_schema": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "List data catalogues with specific schema", "produces": ["application/json"], "operationId": "list_data_catalogs_and_collections_from_schema", "parameters": [{"name": "proj_key", "in": "query", "type": "string", "required": false}, {"name": "schema", "x-body-name": "schema", "in": "body", "required": true, "schema": {"type": "object", "additionalProperties": {}}}], "responses": {"200": {"description": "List of data catalogues", "schema": {"type": "array", "items": {"$ref": "#/definitions/DataCatalogue"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/data": {"get": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Get Data Catalog Collection data.", "produces": ["application/json"], "operationId": "get_data_catalog_collection_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "collection_name", "in": "path", "type": "string", "required": true}, {"name": "after", "in": "query", "type": "string", "required": false}, {"name": "limit", "in": "query", "type": "integer", "minimum": 0, "default": 50, "required": false}], "responses": {"200": {"description": "Get Data Catalog Collection data."}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/from_mongo": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Create a data catalogue from a mongo database", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "import_project_data_catalog_from_mongo", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "DataCatalogImportOptions", "type": "object", "properties": {"target": {"type": "object", "required": ["name", "description", "public"], "properties": {"public": {"type": "boolean"}, "name": {"type": "string"}, "description": {"type": "string", "x-nullable": true}}}, "options": {"type": "object", "required": ["coordinates"], "properties": {"coordinates": {"$ref": "#/definitions/MongoS3CoordinatesWithCollectionList"}}}}, "required": ["target", "options"]}}], "responses": {"200": {"description": "Data catalogue created, and data is being imported.", "schema": {"$ref": "#/definitions/DataCatalogImportResult"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/from_url": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Create a data catalogue from a URL to a file", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "import_project_data_catalog_from_url", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "DataCatalogUrlImportOptions", "type": "object", "properties": {"target": {"type": "object", "required": ["name", "description", "public"], "properties": {"public": {"type": "boolean"}, "name": {"type": "string"}, "description": {"type": "string", "x-nullable": true}}}, "options": {"type": "object", "required": ["url"], "properties": {"url": {"type": "string"}}}}, "required": ["target", "options"]}}], "responses": {"200": {"description": "Data catalogue created, and data is being imported.", "schema": {"$ref": "#/definitions/DataCatalogImportResult"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/actions/clone": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Clone an existing data catalogue", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "clone_project_data_catalog", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "CloneDataCatalogOptions", "type": "object", "properties": {"public": {"type": "boolean"}, "name": {"type": "string", "x-nullable": true, "pattern": "^(?:\\w| |-)+$"}, "description": {"type": "string", "x-nullable": true}, "copy_s3": {"type": "boolean", "description": "Should the catalog's S3 data also be copied?", "default": true}, "collections": {"type": "array", "items": {"type": "string"}}}, "required": ["name", "description", "public"]}}], "responses": {"200": {"description": "Data catalogue cloned, and data is being copied.", "schema": {"$ref": "#/definitions/CloneDataCatalogResult"}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues": {"get": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "List data catalogues for a project", "produces": ["application/json"], "operationId": "list_project_data_catalogs", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "query", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "List of data catalogues", "schema": {"type": "array", "items": {"$ref": "#/definitions/DataCatalogue"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}, "post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Create an empty data catalog", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "create_project_data_catalog", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"type": "object", "title": "CreateDataCatalogOptions", "properties": {"public": {"type": "boolean"}, "name": {"type": "string", "pattern": "^(?:\\w| |-)+$"}, "description": {"type": "string", "x-nullable": true}, "topology:data_flows": {"type": "array", "items": {"type": "object", "title": "DataCatalogDataFlow", "required": ["key", "data_flows"], "properties": {"key": {"type": "string"}, "data_flows": {"type": "object", "additionalProperties": {}}}, "$ref": "#/definitions/DataCatalogTopology"}}, "category_schemas": {"type": "array", "items": {"type": "object", "title": "DataCatalogCategorySchema", "required": ["key", "schema"], "properties": {"key": {"type": "string"}, "schema": {"type": "object", "additionalProperties": {}}}}}, "collections_data_flows": {"type": "array", "items": {"type": "object", "title": "DataCatalogDataFlow", "required": ["key", "data_flows"], "properties": {"key": {"type": "string"}, "data_flows": {"type": "array", "items": {"type": "object"}}}}}}, "required": ["name", "description", "public"]}}], "responses": {"200": {"description": "Data catalog created.", "schema": {"$ref": "#/definitions/DataCatalogue"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/public/data_catalogues/{dc_key}": {"get": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Get a single data catalogue that was made public", "produces": ["application/json"], "operationId": "get_public_data_catalog", "parameters": [{"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "include_collections", "in": "query", "type": "boolean", "required": false, "default": false}], "responses": {"200": {"description": "Data catalogue", "schema": {"$ref": "#/definitions/DataCatalogue"}}, "404": {"description": "Data catalogue not found or is not public", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/public/data_catalogues/{dc_key}/collections": {"get": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Get the collections of a data catalog.", "produces": ["application/json"], "operationId": "list_public_data_catalog_collections", "parameters": [{"name": "dc_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Data catalog collections", "schema": {"type": "array", "items": {"$ref": "#/definitions/DataCatalogCollection"}}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}": {"delete": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Delete a single data catalog's collection", "produces": ["application/json"], "operationId": "delete_project_data_catalog_collection", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "collection_name", "in": "path", "type": "string", "required": true}], "responses": {"204": {"description": "Collection deleted."}, "404": {"description": "Collection doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/infer_schema": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Infer the schema for a data catalog's collection.", "produces": ["application/json"], "operationId": "infer_project_data_catalog_category_schema", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "collection_name", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "InferProjectDataCatalogCategorySchema", "type": "object", "properties": {"sample_size": {"type": "integer", "minimum": 1, "maximum": 1000}}}}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Task"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/upload": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Upload data to a data catalog collection. The collection will be created if it doesn't exist.", "consumes": ["multipart/form-data"], "produces": ["application/json"], "operationId": "upload_project_data_catalog_collection_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "collection_name", "in": "path", "type": "string", "required": true}, {"name": "file", "in": "formData", "required": true, "type": "file"}], "responses": {"200": {"description": "Data is being processed.", "schema": {"$ref": "#/definitions/Task"}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/import": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Import data to a data catalog collection. The collection will be created if it doesn't exist.", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "import_project_data_catalog_collection_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "collection_name", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"type": "object", "title": "ImportToDataCatalogCollectionOptions", "minProperties": 1, "maxProperties": 1, "properties": {"ccs": {"type": "object", "properties": {"proj_key": {"type": "string"}, "auth_token": {"type": "string"}, "url": {"type": "string"}, "source_collection_name": {"type": "string"}, "export_package_mongo_options": {"type": "object", "required": ["assemble_options", "incremental", "package_options"], "properties": {"incremental": {"type": "boolean"}, "assemble_options": {"type": "object", "required": ["mode", "options"], "properties": {"mode": {"required": ["page_elements", "tables"], "properties": {"page_elements": {"description": "Which type of annotations to filter for the page elements: H (human annotations), M (model generated)", "items": {"enum": ["H", "M"], "type": "string"}, "type": "array", "minItems": 2, "maxItems": 2}, "tables": {"description": "Which type of annotations to filter for the tables: H (human annotations), M (model generated)", "items": {"enum": ["H", "M"], "type": "string"}, "type": "array", "minItems": 2, "maxItems": 2}}, "type": "object"}, "options": {"required": ["include_incomplete_documents"], "properties": {"include_incomplete_documents": {"type": "boolean", "description": "Include documents with missing pages? (e.g. no annotations for some pages)"}}, "type": "object"}}}, "inputs": {"type": "object", "required": ["document_hashes"], "properties": {"document_hashes": {"type": "array", "default": [], "items": {"type": "string"}}}}, "package_options": {"type": "object", "properties": {"match_mode": {"type": "string", "default": "document_hash", "enum": ["use_fuzzy_search", "document_hash"]}, "redirect_keys_to_s3": {"type": "array", "default": [], "items": {"type": "string"}}}}}}}, "required": ["proj_key"]}, "url": {"type": "string"}, "elastic": {"title": "ImportFromElasticToDataCatalogOptions", "type": "object", "required": ["parameters"], "properties": {"coordinates": {"$ref": "#/definitions/ElasticCoordinates"}, "elastic_id": {"type": "string"}, "parameters": {"type": "object", "required": ["index", "query_options"], "properties": {"index": {"type": "string"}, "query_options": {"type": "object", "properties": {"_source": {"type": "array", "items": {"type": "string"}}, "size": {"type": "number", "minimum": 0}, "query": {"type": "object", "additionalProperties": {}}}}, "import_s3_data": {"type": "boolean"}, "s3": {"title": "ImportFromElasticToDataCatalogS3Coords", "type": "object", "properties": {"host": {"type": "string"}, "port": {"type": "integer"}, "ssl": {"type": "boolean"}, "verifySSL": {"type": "boolean"}, "access-key": {"type": "string"}, "secret-key": {"type": "string"}, "bucket": {"type": "string"}, "key_prefix": {"type": "string"}, "location": {"type": "string"}}, "required": ["host", "port", "ssl", "verifySSL", "access-key", "secret-key", "bucket", "key_prefix", "location"]}, "page_size": {"type": "number", "default": 100}}}}}}}}], "responses": {"200": {"description": "Data is being processed.", "schema": {"$ref": "#/definitions/Task"}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/collections/{collection_name}/actions/export": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Export the contents of a data catalog's collection", "produces": ["application/zip", "application/json", "application/x-jsonlines"], "operationId": "export_project_data_catalog_collection_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "collection_name", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Data catalog collection contents.", "schema": {"type": "file"}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/actions/upload": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Upload data to a data catalog. The collection name(s) will be inferred from the file name(s).", "consumes": ["multipart/form-data"], "produces": ["application/json"], "operationId": "upload_project_data_catalog_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "file", "in": "formData", "required": true, "type": "file"}], "responses": {"200": {"description": "Data is being processed.", "schema": {"$ref": "#/definitions/Task"}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/actions/import": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Import data to a data catalog. The collections will be created if they don't exist.", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "import_project_data_catalog_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"type": "object", "title": "ImportToDataCatalogOptions", "minProperties": 1, "maxProperties": 1, "properties": {"url": {"type": "string"}, "coordinates": {"$ref": "#/definitions/MongoS3CoordinatesWithCollectionList"}}}}], "responses": {"200": {"description": "Data is being processed.", "schema": {"$ref": "#/definitions/Task"}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/actions/export": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Export the contents of a data catalog.", "produces": ["application/zip"], "operationId": "export_project_data_catalog_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Data catalog contents.", "schema": {"type": "file"}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/delete_token": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Get a token used to confirm the deletion of a data catalog.", "produces": ["application/json"], "operationId": "create_project_data_catalog_delete_token", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Data catalog deletion token.", "schema": {"$ref": "#/definitions/TokenResponse"}}, "404": {"description": "Data flow template not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/public/data_catalogues": {"get": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "List public data catalogues", "produces": ["application/json"], "operationId": "list_public_data_catalogs", "parameters": [{"name": "query", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "List of public data catalogues", "schema": {"type": "array", "items": {"$ref": "#/definitions/DataCatalogue"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/public/data_catalogues/{dc_key}/actions/clone": {"post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Clone an existing public data catalogue", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "clone_public_data_catalog", "parameters": [{"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "ClonePublicDataCatalogOptions", "type": "object", "properties": {"proj_key": {"description": "The project key of the project to store the resulting data catalogue", "type": "string"}, "public": {"type": "boolean"}, "name": {"type": "string", "x-nullable": true, "pattern": "^(?:\\w| |-)+$"}, "description": {"type": "string", "x-nullable": true}, "collections": {"type": "array", "items": {"type": "string"}}, "copy_s3": {"type": "boolean", "description": "Should the catalog's S3 data also be copied?", "default": true}}, "required": ["name", "description", "public", "proj_key"]}}], "responses": {"200": {"description": "Data catalogue cloned, and data is being copied.", "schema": {"$ref": "#/definitions/CloneDataCatalogResult"}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}": {"get": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Get a single data catalogue", "produces": ["application/json"], "operationId": "get_project_data_catalog", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "include_collections", "in": "query", "type": "boolean", "required": false, "default": false}], "responses": {"200": {"description": "Data catalogue", "schema": {"$ref": "#/definitions/DataCatalogue"}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}, "delete": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Delete a single data catalog", "produces": ["application/json"], "operationId": "delete_project_data_catalog", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "required": true, "type": "string"}, {"name": "confirmation_token", "in": "query", "type": "string", "required": true}], "responses": {"204": {"description": "Data catalog deleted."}, "404": {"description": "Data catalog doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}, "patch": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Update the metadata of a data catalog.", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "patch_project_data_catalog", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"type": "object", "title": "PatchDataCatalogOptions", "properties": {"name": {"type": "string"}, "public": {"type": "boolean"}, "description": {"type": "string", "x-nullable": true}, "topology": {"$ref": "#/definitions/DataCatalogTopology"}, "category_schemas": {"type": "array", "items": {"type": "object", "title": "DataCatalogCategorySchema", "required": ["key", "schema"], "properties": {"key": {"type": "string"}, "schema": {"type": "object", "additionalProperties": {}}}}}, "collections_data_flows": {"type": "array", "items": {"type": "object", "title": "DataCatalogDataFlow", "required": ["key", "data_flows"], "properties": {"key": {"type": "string"}, "data_flows": {"type": "array", "items": {"type": "object"}}}}}}, "additionalProperties": false}}], "responses": {"200": {"description": "Data catalog updated.", "schema": {"$ref": "#/definitions/DataCatalogue"}}, "404": {"description": "Data catalog not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/data_catalogues/{dc_key}/collections": {"get": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Get the collections of a data catalog.", "produces": ["application/json"], "operationId": "list_project_data_catalog_collections", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Data catalog collections", "schema": {"type": "array", "items": {"$ref": "#/definitions/DataCatalogCollection"}}}, "404": {"description": "Data catalogue not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}, "post": {"tags": ["Data Catalogs"], "security": [{"Bearer": []}], "description": "Create a collection in a data catalog", "produces": ["application/json"], "operationId": "create_project_data_catalog_collection", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dc_key", "in": "path", "required": true, "type": "string"}, {"name": "body", "in": "body", "required": true, "schema": {"type": "object", "title": "CreateDataCatalogCollectionOptions", "properties": {"collection_name": {"type": "string", "pattern": "^(?:\\w|-)+$", "maxLength": 24, "minLength": 4}}, "required": ["collection_name"]}}], "responses": {"200": {"description": "Collection created."}, "404": {"description": "Dictionary doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.catalogs_controller"}}, "/project/{proj_key}/tasks": {"get": {"tags": ["Tasks"], "security": [{"Bearer": []}], "description": "List tasks for a project.", "produces": ["application/json"], "operationId": "list_project_tasks", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "task_type", "in": "query", "required": false, "type": "string"}, {"name": "limit", "in": "query", "required": false, "type": "integer", "minimum": 0, "default": 50}, {"name": "skip", "in": "query", "required": false, "type": "integer", "minimum": 0, "default": 0}, {"name": "sort_by", "in": "query", "required": false, "type": "string"}, {"name": "sort_order", "in": "query", "required": false, "type": "string", "default": "asc", "enum": ["asc", "desc"]}], "responses": {"200": {"description": "List of tasks.", "schema": {"type": "array", "items": {"$ref": "#/definitions/ProjectTask"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/tasks/{task_id}": {"get": {"tags": ["Tasks"], "security": [{"Bearer": []}, {"KGAuth": []}], "description": "Get a task for a project.", "produces": ["application/json"], "operationId": "get_project_task", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "task_id", "in": "path", "required": true, "type": "string"}], "responses": {"200": {"description": "Task", "schema": {"$ref": "#/definitions/ProjectTask"}}, "404": {"description": "Task not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/tasks/{task_id}/actions/abort": {"post": {"tags": ["Tasks"], "security": [{"Bearer": []}], "description": "Abort a task.", "produces": ["application/json"], "operationId": "abort_project_task", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "task_id", "in": "path", "required": true, "type": "string"}], "responses": {"204": {"description": "Task aborted."}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/celery_tasks/{task_id}": {"get": {"tags": ["Tasks"], "security": [{"Bearer": []}], "description": "Get a celery task for a project.", "produces": ["application/json"], "operationId": "get_project_celery_task", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "task_id", "in": "path", "required": true, "type": "string"}], "responses": {"200": {"description": "Task", "schema": {"type": "object", "title": "CeleryTaskPromise", "required": ["task_id", "task_status", "result"], "properties": {"task_id": {"type": "string"}, "task_status": {"type": "string"}, "result": {"x-nullable": true}}}}, "404": {"description": "Task not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/annotator/metadata": {"post": {"tags": ["Annotate"], "security": [{"Bearer": []}], "description": "Get annotator's metadata", "produces": ["application/json", "text/html"], "operationId": "get_cached_annotator_metadata", "x-swagger-router-controller": "api_server.controllers.annotate", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "options", "in": "body", "schema": {"x-oneOf": [{"$ref": "#/definitions/AnnotatorSupportedAnnotationsParameters"}, {"$ref": "#/definitions/ModelSupportedAnnotationsParameters"}]}, "required": true}], "responses": {"200": {"description": "OK", "schema": {"title": "AnnotatorMetadata", "type": "object", "required": ["name", "version", "url", "author", "description"], "properties": {"name": {"type": "string"}, "version": {"type": "string"}, "url": {"type": "string"}, "author": {"type": "string"}, "description": {"type": "string"}}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/annotate/supported_annotations": {"post": {"tags": ["Annotate"], "security": [{"Bearer": []}], "description": "Get supported annotations for an annotator", "produces": ["application/json", "text/html"], "operationId": "get_project_annotator_supported_annotations", "x-swagger-router-controller": "api_server.controllers.annotate", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "options", "in": "body", "schema": {"x-oneOf": [{"$ref": "#/definitions/AnnotatorSupportedAnnotationsParameters"}, {"$ref": "#/definitions/ModelSupportedAnnotationsParameters"}]}, "required": true}], "responses": {"200": {"description": "OK", "schema": {"title": "SupportedAnnotatorAnnotations", "type": "object", "required": ["entities", "relationships"], "properties": {"entities": {"type": "array", "items": {"title": "EntityAnnotationDescriptor", "type": "object", "properties": {"key": {"type": "string"}, "description": {"type": "string"}, "data_fields": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}}, "required": ["key", "description"]}}, "relationships": {"type": "array", "items": {"title": "RelationshipAnnotationDescriptor", "type": "object", "properties": {"key": {"type": "string"}, "description": {"type": "string"}, "columns": {"type": "array", "items": {"type": "object", "title": "RelationshipAnnotationColumn", "properties": {"key": {"type": "string"}, "entities": {"type": "array", "items": {"type": "string"}}}, "required": ["key", "entities"]}}}, "required": ["key", "description", "columns"]}}, "supported_object_types": {"type": "array", "items": {"type": "string"}}}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/object_annotations": {"post": {"tags": ["Annotate"], "security": [{"Bearer": []}], "description": "Run an annotator on an object, using resources from the project.\n*DEPRECATED*, please use generate_project_object_annotations_async instead.\n", "deprecated": true, "produces": ["application/json"], "operationId": "generate_project_object_annotations", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "AnnotateObjectOptions", "type": "object", "required": ["parameters", "input"], "properties": {"input": {"title": "AnnotatorInput", "type": "object", "minProperties": 1, "maxProperties": 1, "properties": {"text": {"type": "string", "maxLength": 4500}, "table": {"type": "array", "description": "A table, specified as an array of arrays. Each outer array represents a row, and each item in the inner array represents the column.", "items": {"type": "array", "items": {"title": "AnnotateTableCell", "type": "object", "required": ["bbox", "spans", "text", "type"], "properties": {"bbox": {"type": "array", "items": {"type": "number", "format": "double"}, "minItems": 4, "maxItems": 4}, "spans": {"type": "array", "description": "2-tuple representing the row:column where this cell spans to.", "items": {"type": "array", "items": {"type": "number", "format": "integer"}, "minItems": 2, "maxItems": 2}}, "text": {"type": "string"}, "type": {"title": "AnnotateTableCellType", "type": "string", "enum": ["col_header", "row_header", "body"]}}}}}, "image": {"title": "AnnotatorImageInput", "type": "object", "required": ["source"], "properties": {"source": {"title": "ImageSource", "type": "object", "minProperties": 1, "properties": {"scratch_id": {"type": "string"}, "proj_key": {"type": "string"}, "url": {"type": "string"}}}, "metadata": {"title": "ImageMetadata", "type": "object", "required": ["cells"], "properties": {"cells": {"title": "ImageCells", "type": "object", "required": ["data"], "properties": {"data": {"type": "array", "description": "A 6-tuple consisting of x1, y1, x2, y2, font, coordinates", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}, {"type": "number"}, {"type": "string"}, {"type": "string"}]}}}, "info": {"title": "ImageInfo", "type": "object", "required": ["width", "height"], "properties": {"width": {"type": "number"}, "height": {"type": "number"}}}}}}}}}, "parameters": {"title": "AnnotatorParameters", "type": "object", "properties": {"type": {"type": "string"}}, "additionalProperties": {}, "required": ["type"]}}}}], "responses": {"200": {"description": "OK", "schema": {"title": "AnnotatedObject", "type": "object", "minProperties": 1, "maxProperties": 1, "properties": {"text": {"title": "AnnotatedTextLines", "type": "object", "required": ["text", "entities", "relationships", "properties"], "properties": {"text": {"description": "Input text after clean up. The annotation indexes will be based on this text and not the input text.", "type": "string"}, "entities": {"type": "array", "description": "One item per line on the original text.", "items": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/EntityAnnotation"}}}}, "relationships": {"type": "array", "description": "One item per line on the original text.", "items": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/RelationshipAnnotation"}}}}, "properties": {"type": "array", "description": "One item per line on the original text.", "items": {"$ref": "#/definitions/ObjectPropertyMap"}}}}, "table": {"$ref": "#/definitions/AnnotatedTable"}, "image": {"$ref": "#/definitions/AnnotatedImage"}}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.annotate"}}, "/project/{proj_key}/object_annotations_async": {"post": {"tags": ["Annotate"], "security": [{"Bearer": []}], "description": "Run an annotator on an object, using resources from the project.", "produces": ["application/json"], "operationId": "generate_project_object_annotations_async", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"title": "AnnotateObjectOptions", "type": "object", "required": ["parameters", "input"], "properties": {"input": {"title": "AnnotatorInput", "type": "object", "minProperties": 1, "maxProperties": 1, "properties": {"text": {"type": "string", "maxLength": 4500}, "table": {"type": "array", "description": "A table, specified as an array of arrays. Each outer array represents a row, and each item in the inner array represents the column.", "items": {"type": "array", "items": {"title": "AnnotateTableCell", "type": "object", "required": ["bbox", "spans", "text", "type"], "properties": {"bbox": {"type": "array", "items": {"type": "number", "format": "double"}, "minItems": 4, "maxItems": 4}, "spans": {"type": "array", "description": "2-tuple representing the row:column where this cell spans to.", "items": {"type": "array", "items": {"type": "number", "format": "integer"}, "minItems": 2, "maxItems": 2}}, "text": {"type": "string"}, "type": {"title": "AnnotateTableCellType", "type": "string", "enum": ["col_header", "row_header", "body"]}}}}}, "image": {"title": "AnnotatorImageInput", "type": "object", "required": ["source"], "properties": {"source": {"title": "ImageSource", "type": "object", "minProperties": 1, "properties": {"scratch_id": {"type": "string"}, "proj_key": {"type": "string"}, "url": {"type": "string"}}}, "metadata": {"title": "ImageMetadata", "type": "object", "required": ["cells"], "properties": {"cells": {"title": "ImageCells", "type": "object", "required": ["data"], "properties": {"data": {"type": "array", "description": "A 6-tuple consisting of x1, y1, x2, y2, font, coordinates", "items": [{"type": "number"}, {"type": "number"}, {"type": "number"}, {"type": "number"}, {"type": "string"}, {"type": "string"}]}}}, "info": {"title": "ImageInfo", "type": "object", "required": ["width", "height"], "properties": {"width": {"type": "number"}, "height": {"type": "number"}}}}}}}}}, "parameters": {"title": "AnnotatorParameters", "type": "object", "properties": {"type": {"type": "string"}}, "additionalProperties": {}, "required": ["type"]}, "proj_key": {"type": "string"}, "model_config_key": {"type": "string"}, "public": {"type": "boolean"}}}}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Task"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.annotate"}}, "/project/{proj_key}/scratch/files": {"get": {"tags": ["Uploads"], "security": [{"Bearer": []}], "description": "Get temporary files uploaded to a project", "produces": ["application/json"], "operationId": "list_project_scratch_files", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "scratch_ids", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "Files", "schema": {"type": "array", "items": {"title": "UploadedFile", "type": "object", "properties": {"id": {"type": "string", "description": "ID of the temporary file."}, "proj_key": {"type": "string"}, "user_key": {"type": "string"}, "filename": {"type": "string"}, "timestamp": {"type": "number"}}, "required": ["id", "proj_key", "user_key", "filename", "timestamp"]}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}, "post": {"deprecated": true, "tags": ["Uploads"], "security": [{"Bearer": []}], "description": "Upload a file to temporary storage", "consumes": ["multipart/form-data"], "produces": ["application/json"], "operationId": "upload_project_scratch_file", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "file", "in": "formData", "required": true, "type": "file"}], "responses": {"200": {"description": "File uploaded", "schema": {"title": "UploadedFileResult", "type": "object", "required": ["id", "url"], "properties": {"id": {"type": "string", "description": "ID of the temporary file."}, "url": {"type": "string", "description": "URL to get the temporary file form."}}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/scratch/files_paginated": {"get": {"tags": ["Uploads"], "security": [{"Bearer": []}], "description": "Get paginated list of temporary files uploaded to a project", "produces": ["application/json"], "operationId": "list_project_scratch_files_paginated", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "page", "in": "query", "description": "page of the result list", "required": false, "type": "integer"}, {"name": "items_per_page", "in": "query", "description": "items on one page of the result list", "required": false, "default": 20, "type": "integer"}, {"name": "search_string", "in": "query", "description": "search keyword", "required": false, "type": "string"}, {"name": "begin_date", "in": "query", "description": "begin date of the search date interval", "required": false, "type": "integer"}, {"name": "end_date", "in": "query", "description": "end date of the search date interval", "required": false, "type": "integer"}], "responses": {"200": {"description": "Files", "schema": {"type": "array", "items": {"title": "UploadedFile", "type": "object", "properties": {"id": {"type": "string", "description": "ID of the temporary file."}, "proj_key": {"type": "string"}, "user_key": {"type": "string"}, "filename": {"type": "string"}, "timestamp": {"type": "number"}}, "required": ["id", "proj_key", "user_key", "filename", "timestamp"]}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/scratch/files/upload/{filename}": {"post": {"tags": ["Uploads"], "security": [{"Bearer": []}], "description": "Create file pointers for temporary storage", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "create_project_scratch_file", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "filename", "in": "path", "required": true, "type": "string"}], "responses": {"201": {"description": "Temporary file details", "schema": {"title": "TemporaryUploadFileResult", "type": "object", "required": ["id", "upload", "download", "metadata", "upload_private", "download_private", "metadata_private"], "properties": {"id": {"type": "string", "description": "ID of the temporary file."}, "upload": {"type": "object", "description": "URL to upload the temporary file.", "properties": {"url": {"type": "string"}, "fields": {"type": "object"}}}, "upload_private": {"type": "object", "description": "URL to upload the temporary file. (private URL, usable within the infrastracture)", "properties": {"url": {"type": "string"}, "fields": {"type": "object"}}}, "download": {"type": "object", "description": "URL to get the temporary file.", "properties": {"url": {"type": "string"}}}, "download_private": {"type": "object", "description": "URL to get the temporary file. (private URL, usable within the infrastracture)", "properties": {"url": {"type": "string"}}}, "metadata": {"type": "object", "description": "URL to metadata of the temporary file using the HEAD HTTP method.", "properties": {"url": {"type": "string"}}}, "metadata_private": {"type": "object", "description": "URL to metadata of the temporary file using the HEAD HTTP method. (private URL, usable within the infrastracture)", "properties": {"url": {"type": "string"}}}}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.controller"}}, "/project/{proj_key}/default_values": {"get": {"tags": ["Project"], "security": [{"Bearer": []}], "description": "List project's default values", "produces": ["application/json"], "operationId": "get_project_default_values", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/ProjectDefaultValues"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}, "post": {"tags": ["Project"], "security": [{"Bearer": []}], "description": "List project's default values", "produces": ["application/json"], "operationId": "update_project_default_values", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "default_values", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectDefaultValues"}}], "responses": {"200": {"description": "OK"}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/integrations/{integration_name}": {"get": {"tags": ["Project"], "security": [{"Bearer": []}], "description": "Get the config for a given project integration", "produces": ["application/json"], "operationId": "get_project_integration_config", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "integration_name", "in": "path", "type": "string", "required": true}, {"name": "decode_secrets", "in": "query", "type": "boolean", "description": "Project owners can retrieve decoded secrets", "default": false}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/ProjectIntegrations"}}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}, "post": {"tags": ["Project"], "security": [{"Bearer": []}], "description": "Update the config for a given project integration", "produces": ["application/json"], "operationId": "update_project_integration_config", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "integration_name", "in": "path", "type": "string", "required": true}, {"name": "config", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectIntegrations"}}], "responses": {"200": {"description": "OK"}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}, "delete": {"tags": ["Project"], "security": [{"Bearer": []}], "description": "Delete the config for a given project integration", "produces": ["application/json"], "operationId": "delete_project_integration_config", "x-swagger-router-controller": "api_server.controllers.controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "integration_name", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "OK"}, "500": {"description": "Error occured on the server", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/annotate/document": {"post": {"tags": ["Document Inspection"], "security": [{"Bearer": []}], "description": "Run an annotator on a document", "produces": ["application/json"], "operationId": "annotate_document", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "body", "x-body-name": "body", "in": "body", "required": true, "schema": {"title": "AnnotateDocumentRequest", "type": "object", "required": ["document", "text_annotators", "image_annotators", "table_annotators"], "properties": {"document": {"type": "object"}, "text_annotators": {"type": "array", "items": {"$ref": "#/definitions/AnnotatorParametersOrRef"}}, "image_annotators": {"type": "array", "items": {"$ref": "#/definitions/AnnotatorParametersOrRef"}}, "table_annotators": {"type": "array", "items": {"$ref": "#/definitions/AnnotatorParametersOrRef"}}, "use_cache": {"type": "boolean", "default": true}}}}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Task"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.document_inspect_controller"}}, "/project/{proj_key}/annotate/document/report": {"post": {"tags": ["Document Inspection"], "security": [{"Bearer": []}], "description": "Submit a report on an inspected document", "produces": ["application/json"], "operationId": "report_inspected_document", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "body", "x-body-name": "body", "in": "body", "required": true, "schema": {"title": "AnnotatedDocumentReport", "type": "object", "required": ["document", "report"], "properties": {"document": {"type": "object", "properties": {"input_scratch_id": {"type": "string"}, "output_scratch_id": {"type": "string"}}, "required": ["input_scratch_id", "output_scratch_id"]}, "document_conversion_parameters": {"type": "object"}, "document_annotation_parameters": {"type": "object"}, "report": {"type": "object", "properties": {"description": {"type": "string"}, "review_consent": {"type": "boolean"}}, "required": ["review_consent"]}}}}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Task"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.document_inspect_controller"}}, "/project/{proj_key}/annotate/document/results/{document_hash}": {"delete": {"tags": ["Document Inspection"], "security": [{"Bearer": []}], "description": "Delete annotation results for a document", "produces": ["application/json"], "operationId": "delete_document_annotation_result", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "document_hash", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "OK"}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.document_inspect_controller"}}, "/project/{proj_key}/annotate/document/tasks/{task_id}": {"get": {"tags": ["Document Inspection"], "security": [{"Bearer": []}], "description": "Get the result of a previous document annotation", "produces": ["application/json"], "operationId": "get_annotate_document_result", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "task_id", "in": "path", "required": true, "type": "string"}, {"name": "wait", "in": "query", "required": false, "type": "number", "minimum": 0, "maximum": 10, "description": "Allow the response to be delayed for a few seconds to wait for the result, instead of doing client-side polling."}], "responses": {"200": {"description": "OK", "schema": {"type": "object", "required": ["task_id", "task_status", "result", "done"], "properties": {"task_id": {"type": "string"}, "task_status": {"type": "string"}, "result": {"type": "object", "x-nullable": true}, "done": {"type": "boolean"}}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.document_inspect_controller"}}, "/project/{proj_key}/annotate/inspection_report": {"get": {"tags": ["Document Inspection"], "security": [{"Bearer": []}], "description": "Get paginated list of inspection reports for a project", "produces": ["application/json"], "operationId": "list_project_inspection_report", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "page", "in": "query", "description": "page of the result list", "required": false, "type": "integer"}, {"name": "items_per_page", "in": "query", "description": "items on one page of the result list", "required": false, "default": 20, "type": "integer"}, {"name": "search_string", "in": "query", "description": "search keyword", "required": false, "type": "string"}, {"name": "begin_date", "in": "query", "description": "begin date of the search date interval", "required": false, "type": "integer"}, {"name": "end_date", "in": "query", "description": "end date of the search date interval", "required": false, "type": "integer"}], "responses": {"200": {"description": "Reports", "schema": {"type": "array", "items": {"title": "InspectionReport", "type": "object", "properties": {"id": {"type": "string", "description": "ID of the inpection report."}, "proj_key": {"type": "string"}, "user_key": {"type": "string"}, "timestamp": {"type": "number"}, "document": {"type": "string"}}, "required": ["id", "proj_key", "user_key", "timestamp", "document"]}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.document_inspect_controller"}}, "/project/{proj_key}/ingest/documentqa": {"post": {"deprecated": true, "tags": ["Document Inspection", "Semantic"], "security": [{"Bearer": []}], "description": "Ingest a document for QA", "produces": ["application/json"], "operationId": "ingest_documentqa", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "body", "x-body-name": "body", "in": "body", "required": true, "schema": {"title": "IngestDocumentQARequest", "type": "object", "properties": {"source": {"title": "Source", "x-anyOf": [{"title": "IngestDocumentQASourceUrl", "type": "object", "properties": {"type": {"title": "Type", "enum": ["url"], "type": "string"}, "url": {"title": "Url", "type": "string"}}, "required": ["type", "url"]}, {"title": "IngestDocumentQASourcePublicData", "type": "object", "properties": {"type": {"title": "Type", "enum": ["public_data"], "type": "string"}, "elastic_id": {"title": "Elastic Id", "type": "string"}, "index_key": {"title": "Index Key", "type": "string"}, "document_hash": {"title": "Document Hash", "type": "string"}}, "required": ["type", "elastic_id", "index_key", "document_hash"]}, {"title": "IngestDocumentQASourcePrivateData", "type": "object", "properties": {"type": {"title": "Type", "enum": ["private_data"], "type": "string"}, "proj_key": {"title": "Proj Key", "type": "string"}, "index_key": {"title": "Index Key", "type": "string"}, "document_hash": {"title": "Document Hash", "type": "string"}}, "required": ["type", "proj_key", "index_key", "document_hash"]}]}}, "required": ["source"]}}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Task"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.document_inspect_controller"}}, "/project/{proj_key}/semantic/ingest": {"post": {"tags": ["Semantic"], "security": [{"Bearer": []}], "description": "Ingest documents and collections for RAG", "produces": ["application/json"], "operationId": "ingest", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "body", "x-body-name": "body", "in": "body", "required": true, "schema": {"title": "SemanticIngestRequest", "type": "object", "properties": {"source": {"title": "Source", "x-anyOf": [{"title": "IngestDocumentQASourceUrl", "type": "object", "properties": {"type": {"title": "Type", "enum": ["url"], "type": "string"}, "url": {"title": "Url", "type": "string"}}, "required": ["type", "url"]}, {"title": "SemanticIngestSourcePublicDataDocument", "type": "object", "properties": {"type": {"title": "Type", "enum": ["public_data_document"], "type": "string"}, "elastic_id": {"title": "Elastic Id", "type": "string"}, "index_key": {"title": "Index Key", "type": "string"}, "document_hash": {"title": "Document Hash", "type": "string"}}, "required": ["type", "elastic_id", "index_key", "document_hash"]}, {"title": "SemanticIngestSourcePrivateDataDocument", "type": "object", "properties": {"type": {"title": "Type", "enum": ["private_data_document"], "type": "string"}, "proj_key": {"title": "Proj Key", "type": "string"}, "index_key": {"title": "Index Key", "type": "string"}, "document_hash": {"title": "Document Hash", "type": "string"}}, "required": ["type", "proj_key", "index_key", "document_hash"]}, {"title": "SemanticIngestSourcePrivateDataCollection", "type": "object", "properties": {"type": {"title": "Type", "enum": ["private_data_collection"], "type": "string"}, "proj_key": {"title": "Proj Key", "type": "string"}, "index_key": {"title": "Index Key", "type": "string"}}, "required": ["type", "proj_key", "index_key"]}]}, "parameters": {"title": "SemanticIngestReqParams", "type": "object", "properties": {"skip_ingested_docs": {"title": "Skip Ingested Docs", "type": "boolean"}}, "required": ["skip_ingested_docs"]}}, "required": ["source", "parameters"]}}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Task"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.semantic_controller"}}, "/project/{proj_key}/dictionaries/from_mongo": {"post": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Create a dictionary from a mongo database", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "import_project_dictionary_from_mongo", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "DictionaryImportOptions", "type": "object", "properties": {"target": {"type": "object", "required": ["name", "description", "public"], "properties": {"public": {"type": "boolean"}, "name": {"type": "string", "pattern": "^(?:\\w| |-)+$"}, "description": {"type": "string", "x-nullable": true}}}, "options": {"type": "object", "required": ["coordinates"], "properties": {"coordinates": {"$ref": "#/definitions/MongoS3CoordinatesWithCollectionList"}}}}, "required": ["target", "options"]}}], "responses": {"200": {"description": "Dictionary created, and data is being imported.", "schema": {"title": "DictionaryImportResult", "type": "object", "properties": {"dictionary": {"$ref": "#/definitions/Dictionary"}, "import_task": {"$ref": "#/definitions/Task"}}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries/{dict_key}/actions/clone": {"post": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Clone an existing dictionary", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "clone_project_dictionary", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "CloneDictionaryOptions", "type": "object", "properties": {"public": {"type": "boolean"}, "name": {"type": "string", "pattern": "^(?:\\w| |-)+$", "x-nullable": true}, "description": {"type": "string", "x-nullable": true}, "copy_s3": {"type": "boolean", "description": "Should the dictionary's S3 data also be copied?", "default": true}, "collections": {"type": "array", "items": {"type": "string"}}}, "required": ["name", "description", "public"]}}], "responses": {"200": {"description": "Dictionary cloned, and data is being copied.", "schema": {"$ref": "#/definitions/DictionaryCloneResult"}}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries": {"get": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "List dictionaries for a project", "produces": ["application/json"], "operationId": "list_project_dictionaries", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "query", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "List of dictionaries", "schema": {"type": "array", "items": {"$ref": "#/definitions/Dictionary"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}, "post": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Create an empty dictionary", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "create_project_dictionary", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "CreateDictionaryOptions", "type": "object", "properties": {"public": {"type": "boolean"}, "name": {"type": "string", "pattern": "^(?:\\w| |-)+$"}, "description": {"type": "string", "x-nullable": true}}, "required": ["name", "description", "public"]}}], "responses": {"200": {"description": "Dictionary created.", "schema": {"$ref": "#/definitions/Dictionary"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/public/dictionaries/{dict_key}": {"get": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Get a single dictionary that was made public", "produces": ["application/json"], "operationId": "get_public_dictionary", "parameters": [{"name": "dict_key", "in": "path", "type": "string", "required": true}, {"name": "include_collections", "in": "query", "type": "boolean", "required": false, "default": false}], "responses": {"200": {"description": "Dictionary", "schema": {"$ref": "#/definitions/Dictionary"}}, "404": {"description": "Dictionary not found or is not public", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/public/dictionaries/{dict_key}/collections": {"get": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Get the collections of a dictionary.", "produces": ["application/json"], "operationId": "list_public_dictionary_collections", "parameters": [{"name": "dict_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Dictionary collections", "schema": {"type": "array", "items": {"$ref": "#/definitions/DictionaryCollection"}}}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/actions/upload": {"post": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Upload data to a dictionary collection. The collection will be created if it doesn't exist.", "consumes": ["multipart/form-data"], "produces": ["application/json"], "operationId": "upload_project_dictionary_collection_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}, {"name": "collection_name", "in": "path", "type": "string", "required": true}, {"name": "file", "in": "formData", "required": true, "type": "file"}], "responses": {"200": {"description": "Data is being processed.", "schema": {"$ref": "#/definitions/Task"}}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/actions/export": {"post": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Export the contents of a dictionary's collection", "produces": ["application/zip", "application/json"], "operationId": "export_project_dictionary_collection_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}, {"name": "collection_name", "in": "path", "type": "string", "required": true}, {"name": "file_format", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "Dictionary collection contents.", "schema": {"type": "file"}}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries/{dict_key}/actions/upload": {"post": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Upload data to a dictionary. The collection name(s) will be inferred from the file name(s).", "consumes": ["multipart/form-data"], "produces": ["application/json"], "operationId": "upload_project_dictionary_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}, {"name": "file", "in": "formData", "required": true, "type": "file"}], "responses": {"200": {"description": "Data is being processed.", "schema": {"$ref": "#/definitions/Task"}}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries/{dict_key}/actions/export": {"post": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Export the contents of a dictionary.", "produces": ["application/zip"], "operationId": "export_project_dictionary_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Dictionary contents.", "schema": {"type": "file"}}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries/{dict_key}/delete_token": {"post": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Get a token used to confirm the deletion of a dictionary.", "produces": ["application/json"], "operationId": "create_project_dictionary_delete_token", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Dictionary deletion token.", "schema": {"$ref": "#/definitions/TokenResponse"}}, "404": {"description": "Data flow template not found.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/public/dictionaries": {"get": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "List public dictionaries", "produces": ["application/json"], "operationId": "list_public_dictionaries", "parameters": [{"name": "query", "in": "query", "type": "string", "required": false}], "responses": {"200": {"description": "List of public dictionaries", "schema": {"type": "array", "items": {"$ref": "#/definitions/Dictionary"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/public/dictionaries/{dict_key}/actions/clone": {"post": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Clone an existing public dictionary", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "clone_public_dictionary", "parameters": [{"name": "dict_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "ClonePublicDictionaryOptions", "type": "object", "properties": {"proj_key": {"description": "The project key of the project to store the resulting dictionary", "type": "string"}, "public": {"type": "boolean"}, "name": {"type": "string", "x-nullable": true}, "description": {"type": "string", "x-nullable": true}, "collections": {"type": "array", "items": {"type": "string"}}, "copy_s3": {"type": "boolean", "description": "Should the dictionary's S3 data also be copied?", "default": true}}, "required": ["name", "description", "public", "proj_key"]}}], "responses": {"200": {"description": "Dictionary cloned, and data is being copied.", "schema": {"$ref": "#/definitions/DictionaryCloneResult"}}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries/{dict_key}": {"get": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Get a single dictionary", "produces": ["application/json"], "operationId": "get_project_dictionary", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}, {"name": "include_collections", "in": "query", "type": "boolean", "required": false, "default": false}], "responses": {"200": {"description": "Dictionary", "schema": {"$ref": "#/definitions/Dictionary"}}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}, "delete": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Delete a single dictionary", "produces": ["application/json"], "operationId": "delete_project_dictionary", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "required": true, "type": "string"}, {"name": "confirmation_token", "in": "query", "type": "string", "required": true}], "responses": {"204": {"description": "Dictionary deleted."}, "404": {"description": "Dictionary doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}, "patch": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Update the metadata of a dictionary", "produces": ["application/json"], "operationId": "update_project_dictionary", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}, {"name": "options", "x-body-name": "options", "in": "body", "required": true, "schema": {"type": "object", "title": "PatchDictionaryOptions", "properties": {"name": {"type": "string"}, "public": {"type": "boolean"}, "description": {"type": "string", "x-nullable": true}}, "additionalProperties": false}}], "responses": {"200": {"description": "Dictionary updated.", "schema": {"$ref": "#/definitions/Dictionary"}}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries/{dict_key}/collections": {"get": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Get the collections of a dictionary.", "produces": ["application/json"], "operationId": "list_project_dictionary_collections", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "Dictionary collections", "schema": {"type": "array", "items": {"$ref": "#/definitions/DictionaryCollection"}}}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}, "post": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Create a collection in a dictionary", "produces": ["application/json"], "operationId": "create_project_dictionary_collection", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "required": true, "type": "string"}, {"name": "body", "in": "body", "required": true, "schema": {"title": "CreateCollectionInDictionaryOptions", "type": "object", "properties": {"collection_name": {"type": "string", "pattern": "^(?:\\w|-)(?:\\w|\\s|-)*(?:\\w|-)$", "maxLength": 50, "minLength": 4}}, "required": ["collection_name"]}}], "responses": {"200": {"description": "Collection created."}, "404": {"description": "Dictionary doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}": {"delete": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Delete a single dictionary's collection", "produces": ["application/json"], "operationId": "delete_project_dictionary_collection", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "required": true, "type": "string"}, {"name": "collection_name", "in": "path", "type": "string", "required": true}], "responses": {"204": {"description": "Collection deleted."}, "404": {"description": "Collection doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/dictionaries/{dict_key}/collections/{collection_name}/data": {"get": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Get a preview of the data in a dictionary", "produces": ["application/json"], "operationId": "get_project_dictionary_collection_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}, {"name": "collection_name", "in": "path", "type": "string", "required": true}, {"name": "after", "in": "query", "type": "string", "pattern": "[a-zA-Z0-9]{24}", "required": false}, {"name": "limit", "in": "query", "type": "integer", "minimum": 0, "default": 1000, "required": false}, {"name": "response_format", "in": "query", "type": "string", "default": "object", "required": false}], "responses": {"200": {"description": "Dictionary collection contents.", "schema": {"x-oneOf": [{"$ref": "#/definitions/DictionaryCollectionObjectData"}, {"$ref": "#/definitions/DictionaryCollectionCsvData"}]}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}, "patch": {"tags": ["Dictionaries"], "security": [{"Bearer": []}], "description": "Update the data in a dictionary's collection", "produces": ["application/json"], "operationId": "update_project_dictionary_collection_data", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "dict_key", "in": "path", "type": "string", "required": true}, {"name": "collection_name", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "description": "A subset of JSON Patch operation list. Only `add`, `replace`, and `remove` is supported.\nSee http://jsonpatch.com/ for more details.\n", "schema": {"type": "array", "items": {"$ref": "#/definitions/DictionaryCollectionPatch"}}}], "responses": {"204": {"description": "Data updated."}, "404": {"description": "Dictionary not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.dicts_controller"}}, "/project/{proj_key}/model_configs": {"get": {"tags": ["Model Configurations"], "security": [{"Bearer": []}], "description": "List Model Configurations for a project", "produces": ["application/json"], "operationId": "list_project_model_configs", "x-swagger-router-controller": "api_server.controllers.model_configs_controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "List of Model Configurations", "schema": {"type": "array", "items": {"$ref": "#/definitions/ModelConfiguration"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}, "post": {"tags": ["Model Configurations"], "security": [{"Bearer": []}], "description": "Create a Model Configuration", "consumes": ["application/json"], "produces": ["application/json"], "operationId": "create_project_model_config", "x-swagger-router-controller": "api_server.controllers.model_configs_controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "body", "in": "body", "required": true, "schema": {"title": "CreateProjectModelConfigOptions", "type": "object", "additionalProperties": false, "properties": {"public": {"type": "boolean"}, "name": {"pattern": "^(?:\\w| |-)+$", "type": "string"}, "description": {"type": "string", "x-nullable": true}, "configurations": {"type": "object", "properties": {"type": {"type": "string"}}, "required": ["type"]}, "model_config_key": {"type": "string"}}, "required": ["name", "description", "public", "configurations"]}}], "responses": {"200": {"description": "Model Configuration created.", "schema": {"$ref": "#/definitions/ModelConfiguration"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/model_configs/{model_config_key}": {"get": {"tags": ["Model Configurations"], "security": [{"Bearer": []}], "description": "Get a single Model Configuration", "produces": ["application/json"], "operationId": "read_project_model_config", "x-swagger-router-controller": "api_server.controllers.model_configs_controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "model_config_key", "in": "path", "type": "string", "required": true}, {"name": "include_collections", "in": "query", "type": "boolean", "required": false, "default": false}], "responses": {"200": {"description": "Model Configuration", "schema": {"$ref": "#/definitions/ModelConfiguration"}}, "404": {"description": "Model Configuration not found", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}, "patch": {"tags": ["Model Configurations"], "security": [{"Bearer": []}], "description": "Update a single Model Configuration", "produces": ["application/json"], "operationId": "update_project_model_config", "x-swagger-router-controller": "api_server.controllers.model_configs_controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "model_config_key", "in": "path", "required": true, "type": "string"}, {"name": "body", "in": "body", "required": true, "schema": {"title": "UpdateProjectModelConfigOptions", "type": "object", "additionalProperties": false, "properties": {"name": {"type": "string"}, "public": {"type": "boolean"}, "description": {"type": "string", "x-nullable": true}, "configurations": {"type": "object", "properties": {"type": {"type": "string"}}, "required": ["type"]}}, "required": ["name", "description", "public", "configurations"]}}], "responses": {"204": {"description": "Model Configuration updated."}, "404": {"description": "Model Configuration doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}, "delete": {"tags": ["Model Configurations"], "security": [{"Bearer": []}], "description": "Delete a single Model Configuration", "produces": ["application/json"], "operationId": "delete_project_model_config", "x-swagger-router-controller": "api_server.controllers.model_configs_controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}, {"name": "model_config_key", "in": "path", "required": true, "type": "string"}], "responses": {"204": {"description": "Model Configuration deleted."}, "404": {"description": "Model Configuration doesn't exist.", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/public/model_configs": {"get": {"tags": ["Model Configurations"], "security": [{"Bearer": []}], "description": "List public Model Configurations", "produces": ["application/json"], "operationId": "list_public_model_configs", "x-swagger-router-controller": "api_server.controllers.model_configs_controller", "parameters": [], "responses": {"200": {"description": "List of public Model Configurations", "schema": {"type": "array", "items": {"$ref": "#/definitions/ModelConfiguration"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/public/model_configs/{model_config_key}": {"get": {"tags": ["Model Configurations"], "security": [{"Bearer": []}], "description": "Get a single Model Configuration that was made public", "produces": ["application/json"], "operationId": "read_public_model_config", "x-swagger-router-controller": "api_server.controllers.model_configs_controller", "parameters": [{"name": "model_config_key", "in": "path", "type": "string", "required": true}, {"name": "include_collections", "in": "query", "type": "boolean", "required": false, "default": false}], "responses": {"200": {"description": "Model configuration", "schema": {"$ref": "#/definitions/ModelConfiguration"}}, "404": {"description": "Model configuration not found or is not public", "schema": {"$ref": "#/definitions/Problem"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/project/{proj_key}/models": {"get": {"tags": ["Model Configurations"], "security": [{"Bearer": []}], "description": "List models with the supported annotations for a project", "produces": ["application/json"], "operationId": "get_project_models_with_supported_annotations", "x-swagger-router-controller": "api_server.controllers.model_configs_controller", "parameters": [{"name": "proj_key", "in": "path", "type": "string", "required": true}], "responses": {"200": {"description": "List of Models with the supported annotations", "schema": {"type": "array", "items": {"$ref": "#/definitions/ModelConfiguration"}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}, "/processing_models/docs_graph_with_databases": {"post": {"tags": ["Processing Model"], "security": [{"Bearer": []}], "consumes": ["application/json"], "produces": ["application/json"], "description": "Create a Data Flow from a list of CCS Collections and CPS Models.", "operationId": "create_data_flow_from_df_wizard", "parameters": [{"name": "body", "in": "body", "required": true, "schema": {"type": "object", "required": ["ccs_document_collections", "catalog_document_collections", "models", "access_token"], "properties": {"access_token": {"type": "string"}, "ccs_document_collections": {"type": "array", "items": {"$ref": "#/definitions/CcsCollectionReference"}}, "models": {"type": "array", "items": {"$ref": "#/definitions/CpsModelReference"}}, "entity_mappings": {"$ref": "#/definitions/EntityMapping"}, "catalog_document_collections": {"type": "array", "items": {"$ref": "#/definitions/CatalogReference"}}, "data_catalogs": {"type": "array", "items": {"$ref": "#/definitions/CatalogReference"}}}}}], "responses": {"200": {"description": "Processing model generated successfully", "schema": {"$ref": "#/definitions/ProcessingModel"}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}, "x-swagger-router-controller": "api_server.controllers.processing_model_controller"}}, "/processing_models": {"get": {"tags": ["Processing Model"], "security": [{"Bearer": []}], "produces": ["application/json"], "description": "List the available processing models.", "operationId": "get_processing_models", "x-swagger-router-controller": "api_server.controllers.processing_model_controller", "responses": {"200": {"description": "List of processing models and their description", "schema": {"type": "object", "required": ["processing_models"], "properties": {"processing_models": {"type": "array", "items": {"$ref": "#/definitions/ProcessingModelDescription"}}}}}, "default": {"description": "Unexpected error.", "schema": {"$ref": "#/definitions/Problem"}}}}}}, "definitions": {"TokenResponse": {"type": "object", "properties": {"token": {"type": "string"}}, "required": ["token"]}, "ProjectDataIndexWithStatus": {"title": "ProjectDataIndexWithStatus", "description": "Project data index with elastic status", "type": "object", "properties": {"source": {"title": "ProjectDataIndexSource", "type": "object", "properties": {"proj_key": {"type": "string"}, "index_key": {"type": "string"}}, "required": ["proj_key", "index_key"]}, "name": {"type": "string"}, "description": {"type": "string"}, "schema_key": {"type": "string", "description": "Index's schema key", "enum": ["deepsearch-doc", "deepsearch-db", "generic"]}, "type": {"type": "string", "description": "Index type, user friendly format", "enum": ["View", "Document", "DB Record", "Generic", "Experiment"]}, "view_of": {"type": "object", "properties": {"index_key": {"type": "string"}, "elastic_id": {"type": "string"}, "proj_key": {"type": "string"}, "query_options": {"$ref": "#/definitions/ElasticIndexSearchQueryOptions"}}, "required": ["index_key", "query_options"]}, "documents": {"type": "number"}, "health": {"type": "string"}, "status": {"type": "string"}, "creation_date": {"type": "string"}, "record_properties": {"$ref": "#/definitions/ElasticIndexProperties"}, "provenance": {"type": "string"}}, "required": ["source", "name", "description", "type", "documents", "health", "status", "creation_date"]}, "ProjectDataIndexNonView": {"title": "ProjectDataIndexNonView", "description": "Object to create a project data index", "type": "object", "properties": {"name": {"type": "string", "description": "Name of the data index", "minLength": 1, "maxLength": 64}, "description": {"type": "string", "description": "Description of the Index", "minLength": 1, "maxLength": 254}, "schema_key": {"type": "string", "description": "Schema key", "minLength": 1, "maxLength": 64, "default": "generic", "enum": ["deepsearch-doc", "deepsearch-db", "generic"]}}, "required": ["name"]}, "ProjectDataIndexView": {"title": "ProjectDataIndexView", "description": "Object to create a project data index view", "type": "object", "properties": {"name": {"type": "string", "description": "Name of the data index view", "minLength": 1, "maxLength": 64}, "description": {"type": "string", "description": "Description of the index view", "minLength": 1, "maxLength": 254}, "view_of": {"type": "object", "title": "ProjectDataIndexViewOf", "properties": {"instance_id": {"type": "string", "description": "Instance id key, if the source is a data asset", "minLength": 1, "maxLength": 64}, "proj_key": {"type": "string", "description": "Project id key, if the source is a project data index", "minLength": 1, "maxLength": 64}, "index_key": {"type": "string", "description": "Data index key", "minLength": 1, "maxLength": 64}, "query_options": {"$ref": "#/definitions/ElasticIndexSearchQueryOptions"}}, "required": ["index_key", "query_options"]}}, "required": ["name", "view_of"]}, "ProjectDataIndexConversionSettings": {"title": "ProjectDataIndexConversionSettings", "description": "Specify the conversion settings to use.", "type": "object", "properties": {"type": {"title": "Type", "type": "string", "default": "direct", "enum": ["direct"]}, "ocr": {"type": "object", "title": "OCR Settings", "properties": {"enabled": {"title": "Enabled", "type": "boolean", "default": false}, "backend": {"title": "Backend", "type": "string"}, "backend_settings": {"title": "Backend Settings", "type": "object"}, "merge_mode": {"title": "Merge Mode", "type": "string"}}}, "assemble": {"title": "Assemble Settings", "type": "object", "required": ["mode", "include_incomplete_documents"], "properties": {"mode": {"type": "object", "required": ["page_elements", "tables"], "properties": {"page_elements": {"title": "Page Elements", "type": "array", "items": {"type": "string", "enum": ["H", "M", "None"]}}, "tables": {"title": "Tables", "type": "array", "items": {"type": "string", "enum": ["H", "M", "None"]}}}}, "include_incomplete_documents": {"title": "Include Incomplete Documents", "type": "boolean"}}}, "metadata": {"title": "Collection Metadata Settings", "type": "object", "properties": {"description": {"title": "Description", "type": "string"}, "display_name": {"title": "Display Name", "type": "string"}, "licence": {"title": "Licence", "type": "string"}, "source": {"title": "Source", "type": "string"}, "version": {"title": "Version", "type": "string"}}}, "page_labels": {"title": "Page Labels", "type": "object"}, "model_pipeline": {"title": "Model Pipeline Settings", "type": "object", "required": ["clusters", "page", "tables", "normalization"], "properties": {"clusters": {"title": "Clusters", "x-oneOf": [{"$ref": "#/definitions/ProjectDataIndexConversionSettings/properties/model_pipeline/properties/page/x-oneOf/0"}, {"$ref": "#/definitions/ProjectDataIndexConversionSettings/properties/model_pipeline/properties/page/x-oneOf/1"}]}, "page": {"title": "Page", "x-oneOf": [{"type": "object", "description": "Reference to a model configuration", "required": ["model_config_key", "proj_key"], "properties": {"model_config_key": {"title": "Model Config Key", "type": "string"}, "proj_key": {"title": "Proj Key", "type": "string"}, "name": {"title": "Name", "type": "string"}, "description": {"title": "Description", "type": "string"}}}, {"type": "object", "description": "Direct configuration of a model", "required": ["type", "config"], "properties": {"type": {"title": "Type", "type": "string"}, "config": {"title": "Config", "type": "string"}}}]}, "tables": {"title": "Tables", "x-oneOf": [{"$ref": "#/definitions/ProjectDataIndexConversionSettings/properties/model_pipeline/properties/page/x-oneOf/0"}, {"$ref": "#/definitions/ProjectDataIndexConversionSettings/properties/model_pipeline/properties/page/x-oneOf/1"}]}, "normalization": {"title": "Normalization", "x-oneOf": [{"$ref": "#/definitions/ProjectDataIndexConversionSettings/properties/model_pipeline/properties/page/x-oneOf/0"}, {"$ref": "#/definitions/ProjectDataIndexConversionSettings/properties/model_pipeline/properties/page/x-oneOf/1"}]}}}}}, "ProjectDataIndexS3Coordinates": {"title": "ProjectDataIndexCOSCoordinates", "description": "Coordinates to COS", "type": "object", "properties": {"host": {"title": "host", "type": "string"}, "port": {"title": "port", "type": "number"}, "ssl": {"title": "ssl", "type": "boolean"}, "verify_ssl": {"title": "verify_ssl", "type": "boolean"}, "access_key": {"title": "access_key", "type": "string"}, "secret_key": {"title": "secret_key", "type": "string"}, "bucket": {"title": "bucket", "type": "string"}, "location": {"title": "location", "type": "string"}, "key_prefix": {"title": "key_prefix", "type": "string"}}, "required": ["host", "port", "ssl", "verify_ssl", "access_key", "secret_key", "bucket", "location"]}, "error_response": {"type": "object", "properties": {"error_message": {"type": "string"}, "error_code": {"type": "string", "x-nullable": true}}, "required": ["error_message"]}, "Problem": {"type": "object", "properties": {"type": {"type": "string"}, "title": {"type": "string"}, "detail": {"type": "string"}, "status": {"type": "integer"}}, "additionalProperties": {}, "example": {"type": "ExampleError", "title": "An example title", "detail": "A descriptive message.", "status": 500, "may_have_extra_fields": true}}, "Bag": {"type": "object", "required": ["proj_key", "bag_key", "name", "slug", "timestamp", "bag_domain", "flavour", "bag_url", "public", "_svc_endpoint", "token"], "properties": {"proj_key": {"type": "string"}, "bag_key": {"type": "string"}, "name": {"type": "string"}, "slug": {"type": "string"}, "timestamp": {"type": "number", "format": "double"}, "bag_domain": {"type": "string"}, "flavour": {"type": "string"}, "bag_url": {"type": "string"}, "public": {"type": "boolean"}, "_svc_endpoint": {"type": "string"}, "token": {"type": "string"}}}, "BagFlavour": {"type": "object", "properties": {"name": {"type": "string"}, "display_name": {"type": "string"}, "description": {"type": "string"}}}, "BagFlavourDefaultQuota": {"title": "BagFlavourDefaultQuota", "type": "object", "properties": {"name": {"type": "string"}, "display_name": {"type": "string"}, "default_quota": {"type": "number"}}, "required": ["name", "display_name"]}, "BagFlavourFullData": {"type": "object", "properties": {"name": {"type": "string"}, "display_name": {"type": "string"}, "description": {"type": "string"}, "is_from_deployment": {"type": "boolean"}, "project_specific": {"type": "boolean"}, "default_quota": {"type": "integer"}, "order": {"type": "number"}, "backend": {"type": "string"}, "config": {"type": "object"}}, "required": ["display_name", "description", "project_specific", "backend", "config"]}, "ProjectsFlavours": {"type": "object", "properties": {"proj_key": {"type": "string"}, "name": {"type": "string"}, "flavours": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "display_name": {"type": "string"}}, "required": ["name"]}}}, "required": ["proj_key", "name", "flavours"]}, "ProjectsFlavoursQuota": {"title": "ProjectsFlavoursQuota", "type": "object", "properties": {"proj_key": {"type": "string"}, "name": {"type": "string"}, "quotas": {"type": "array", "items": {"$ref": "#/definitions/FlavoursQuota"}}}, "required": ["proj_key", "name", "quotas"]}, "FlavoursQuota": {"title": "FlavoursQuota", "type": "object", "properties": {"name": {"type": "string"}, "display_name": {"type": "string"}, "quota": {"type": "integer"}}, "required": ["name", "display_name"]}, "SystemInfo": {"type": "object", "properties": {"allow_non_admins_to_make_resources_public": {"type": "boolean"}, "deployment": {"type": "object", "properties": {"name": {"type": "string"}, "disclaimer": {"type": "string"}, "should_show_warning": {"type": "boolean"}, "disable_kg_actions": {"type": "boolean"}, "linked_ccs_api": {"type": "object", "properties": {"uri": {"type": "string"}, "project_sync": {"type": "boolean"}}}}}, "toolkit": {"type": "object", "properties": {"name": {"type": "string"}, "host": {"type": "string"}, "verify_ssl": {"type": "boolean"}, "cli_command": {"type": "string"}, "required_version": {"type": "string", "x-nullable": true}}}, "api": {"type": "object", "properties": {"version": {"type": "string"}, "commit_hash": {"type": "string"}, "build_date": {"type": "integer"}}}}}, "SystemModulesConfiguration": {"type": "object", "required": ["df_template_variables", "linked_ccs_instances", "linked_elastic_instances"], "properties": {"df_template_variables": {"type": "array", "items": {"type": "object", "title": "WellKnownDfTemplateVariable", "required": ["description", "id", "type"], "properties": {"description": {"type": "string"}, "id": {"type": "string"}, "type": {"$ref": "#/definitions/DataFlowTemplateVariable"}}}}, "linked_ccs_instances": {"type": "array", "items": {"type": "object", "title": "LinkedCcsInstances", "required": ["description", "id"], "properties": {"description": {"type": "string"}, "id": {"type": "string"}}}}, "linked_elastic_instances": {"type": "array", "items": {"type": "object", "title": "LinkedElasticInstances", "required": ["description", "id"], "properties": {"description": {"type": "string"}, "id": {"type": "string"}}}}}}, "SystemModulesTasks": {"type": "object", "properties": {"tasks": {"type": "object", "additionalProperties": {"type": "object", "properties": {"schema": {"type": "object"}}}}}}, "BagCallback": {"type": "object", "properties": {"callback_url": {"type": "string"}}}, "KgcDataInput": {"type": "object", "properties": {"config": {"type": "object"}, "data-flow": {"type": "array", "items": {"type": "object", "additionalProperties": {}, "properties": {"config": {"type": "object", "additionalProperties": {}, "properties": {"coordinates": {"type": "object", "additionalProperties": {}, "properties": {"source": {"type": "object", "additionalProperties": {}, "properties": {"type": {"type": "string", "default": "bag", "enum": ["raw", "bag", "catalogue"]}, "bag_key": {"type": "string"}, "dc_key": {"type": "string"}, "proj_key": {"type": "string"}, "collection": {"type": "string"}, "public": {"type": "boolean"}}}, "target": {"type": "object", "additionalProperties": {}, "properties": {"type": {"type": "string", "default": "bag", "enum": ["raw", "bag", "catalogue"]}, "bag_key": {"type": "string"}, "dc_key": {"type": "string"}, "proj_key": {"type": "string"}, "collection": {"type": "string"}, "public": {"type": "boolean"}}}}}}, "required": ["coordinates"]}}, "required": ["config"]}}}, "required": ["config", "data-flow"]}, "LoadKgcDataInput": {"type": "object", "properties": {"dataflow": {"type": "object", "properties": {"config": {"type": "object"}, "data-flow": {"type": "array", "items": {"type": "object"}}}}, "target": {"type": "object", "properties": {"bag_key": {"type": "string"}, "save": {"type": "object"}}, "required": ["bag_key", "save"]}}, "required": ["dataflow", "target"]}, "Task": {"type": "object", "properties": {"task_id": {"type": "string"}, "task_type": {"type": "string"}, "task_status": {"type": "string"}, "proj_key": {"type": "string"}, "error_reason": {"type": "string", "x-nullable": true}, "kind": {"type": "string", "enum": ["project_task", "celery_task"]}, "related_tasks": {"type": "array", "items": {"title": "RelatedTask", "type": "object", "required": ["task_id", "task_type"], "properties": {"task_id": {"type": "string"}, "task_type": {"type": "string"}}}}}, "required": ["task_id", "task_type", "task_status", "proj_key", "error_reason", "kind"]}, "CcsTask": {"title": "CcsTask", "type": "object", "properties": {"task_id": {"type": "string"}, "ccs_project_key": {"type": "string"}, "ccs_collection_name": {"type": "string"}}, "required": ["task_id", "ccs_project_key", "ccs_collection_name"]}, "CpsTask": {"title": "CpsTask", "type": "object", "properties": {"task_id": {"type": "string"}, "task_status": {"type": "string"}, "task_type": {"type": "string"}}, "required": ["task_id", "task_status", "task_type"]}, "StorageSummaryTask": {"type": "object", "properties": {"task_id": {"type": "string"}, "proj_key": {"type": "string"}, "kg_key": {"type": "string"}, "dc_key": {"type": "string"}, "kind": {"type": "string", "enum": ["project_task", "celery_task"]}}, "required": ["task_id", "proj_key", "kind"]}, "StorageSummaryKG": {"type": "object", "properties": {"bag_key": {"type": "string"}, "name": {"type": "string"}, "size_bytes_db": {"type": "number"}, "size_converted_db": {"type": "string"}, "size_bytes_s3": {"type": "number"}, "size_converted_s3": {"type": "string"}, "categories_fraction": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "percentage": {"type": "number"}, "size_bytes_db": {"type": "number"}, "size_converted_db": {"type": "string"}, "color": {"type": "string"}}, "required": ["name", "percentage", "size_bytes_db", "size_converted_db"]}}}, "required": ["bag_key", "name", "size_bytes_db", "size_converted_db", "size_bytes_s3", "size_converted_s3", "categories_fraction"]}, "StorageSummaryDC": {"type": "object", "properties": {"dc_key": {"type": "string"}, "name": {"type": "string"}, "size_bytes_db": {"type": "number"}, "size_converted_db": {"type": "string"}, "size_bytes_s3": {"type": "number"}, "size_converted_s3": {"type": "string"}}, "required": ["dc_key", "name", "size_bytes_db", "size_converted_db", "size_bytes_s3", "size_converted_s3"]}, "DataCatalogue": {"type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string", "x-nullable": true}, "dc_key": {"type": "string"}, "proj_key": {"type": "string"}, "created_by": {"type": "string"}, "created_at": {"type": "number", "format": "double"}, "copy_of": {"type": "string", "x-nullable": true}, "public": {"type": "boolean"}, "collections": {"type": "array", "items": {"$ref": "#/definitions/DataCatalogCollection"}}, "topology": {"$ref": "#/definitions/DataCatalogTopology"}, "category_schemas": {"type": "array", "items": {"type": "object", "title": "DataCatalogCategorySchema", "required": ["key", "schema"], "properties": {"key": {"type": "string"}, "schema": {"type": "object", "additionalProperties": {}}}}}, "collections_data_flows": {"type": "array", "items": {"type": "object", "title": "DataCatalogDataFlow", "required": ["key", "data_flows"], "properties": {"key": {"type": "string"}, "data_flows": {"type": "array", "items": {"type": "object"}}}}}, "provenance_logs": {"type": "array", "items": {"type": "object", "title": "DataCatalogProvenanceLog", "required": ["user", "timestamp", "collection_name", "source"], "properties": {"user": {"type": "object", "title": "DataCatalogProvenanceLogUser", "properties": {"user_key": {"type": "string"}, "name": {"type": "string"}, "email": {"type": "string"}}, "required": ["user_key", "name", "email"]}, "timestamp": {"type": "number"}, "collection_name": {"type": "string", "x-nullable": true}, "source": {"type": "object", "title": "DataCatalogProvenanceLogSource", "x-nullable": true, "properties": {"elastic": {}, "mongo_s3": {}, "file": {}, "url": {}, "clone": {}, "ccs": {}}}}}}}, "required": ["name", "description", "dc_key", "proj_key", "created_by", "created_at", "copy_of", "public", "topology", "category_schemas", "collections_data_flows", "provenance_logs"]}, "DataCatalogSchema": {"type": "object", "properties": {"name": {"type": "string"}, "schema": {"type": "string"}}}, "DataCatalogCollection": {"type": "object", "required": ["name", "item_count"], "properties": {"name": {"type": "string"}, "item_count": {"type": "integer"}}}, "CloneDataCatalogResult": {"type": "object", "properties": {"data_catalogue": {"$ref": "#/definitions/DataCatalogue"}, "clone_task": {"$ref": "#/definitions/Task"}}, "required": ["data_catalogue", "clone_task"]}, "ProjectTask": {"type": "object", "properties": {"proj_key": {"type": "string"}, "user_key": {"type": "string"}, "task_type": {"type": "string"}, "task_id": {"type": "string"}, "task_status": {"type": "string"}, "created_at": {"type": "number", "format": "double"}, "started_at": {"type": "number", "format": "double", "x-nullable": true}, "completed_at": {"type": "number", "format": "double", "x-nullable": true}, "progress": {"type": "number", "format": "double"}, "meta": {"type": "object"}}}, "BagComponentStatus": {"type": "object", "properties": {"status": {"$ref": "#/definitions/BagComponentStatusEnum"}, "start_time": {"type": "number", "format": "double", "x-nullable": true}}, "required": ["status", "start_time"]}, "BagStatus": {"type": "object", "properties": {"status": {"$ref": "#/definitions/BagComponentStatusEnum"}, "components": {"type": "object", "properties": {"kg": {"description": "Status of the Knowledge Graph and its API", "allOf": [{"$ref": "#/definitions/BagComponentStatus"}]}, "erlenmeyer_api": {"description": "Status of the Erlenmeyer API for this Graph", "allOf": [{"$ref": "#/definitions/BagComponentStatus"}]}, "erlenmeyer_ui": {"description": "Status of the Erlenmeyer UI for this Graph", "allOf": [{"$ref": "#/definitions/BagComponentStatus"}]}}, "required": ["kg", "erlenmeyer_api", "erlenmeyer_ui"]}}, "required": ["status", "components"]}, "BagComponentStatusEnum": {"type": "string", "enum": ["LAUNCHING", "READY", "BUSY", "SUSPENDED", "SUSPENDING", "ERROR", "PROVISIONING", "PROVISIONING_FAILED", "UNKNOWN", "CHECKING", "PENDING_RESOURCES", "IDLE"]}, "DataFlowTemplate": {"type": "object", "properties": {"config": {"type": "object"}, "data-flow": {"type": "array", "items": {"type": "object"}}}, "required": ["config", "data-flow"]}, "DataFlowTemplateListItem": {"type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string"}, "proj_key": {"type": "string"}, "df_tpl_key": {"type": "string"}, "created_at": {"type": "number", "format": "double"}, "updated_at": {"type": "number", "format": "double"}, "public": {"type": "boolean"}}}, "DataFlow": {"type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string"}, "variables": {"type": "object", "additionalProperties": {"type": "object"}}, "template": {"type": "object"}, "proj_key": {"type": "string"}, "df_tpl_key": {"type": "string"}, "created_at": {"type": "number", "format": "double"}, "updated_at": {"type": "number", "format": "double"}, "public": {"type": "boolean"}}}, "DataFlowTemplateVariable": {"type": "string", "enum": ["string", "boolean", "number", "integer", "DataCatalogId", "DictionaryId", "KnowledgeGraphId", "ModelConfigurationId", "file", "SecretString", "ElasticId", "DataCatalogCollection", "DictionaryCollection", "KnowledgeGraphCollection", "CcsCollection", "DocumentSources"]}, "TakeSnapshotSettings": {"type": "object", "properties": {"flavour": {"type": "string"}, "name": {"type": "string"}, "load_into_kg_after_created": {"type": "boolean", "default": false}}, "required": ["flavour"]}, "KgSnapshot": {"type": "object", "properties": {"timestamp": {"type": "number", "format": "double"}, "data_flow": {"type": "object", "x-nullable": true}, "project_task_id": {"type": "string"}, "task_type": {"type": "string"}, "name": {"type": "string"}, "is_current": {"type": "boolean"}}}, "S3CoordinatesWithBackupKey": {"type": "object", "properties": {"host": {"type": "string"}, "port": {"type": "integer"}, "ssl": {"type": "boolean"}, "verifySSL": {"type": "boolean"}, "access-key": {"type": "string"}, "secret-key": {"type": "string"}, "bucket": {"type": "string"}, "location": {"type": "string"}, "backup_key": {"type": "string"}, "presigned": {"type": "object", "properties": {"url": {"type": "string"}, "fields": {"type": "object", "additionalProperties": {}}}, "required": ["url", "fields"]}}, "required": ["bucket", "backup_key"]}, "MongoCoordinates": {"type": "object", "properties": {"uri": {"type": "string"}, "database": {"type": "string"}}, "required": ["uri", "database"]}, "S3Coordinates": {"type": "object", "description": "If provided, the S3 data will be copied", "properties": {"host": {"type": "string"}, "port": {"type": "integer"}, "ssl": {"type": "boolean"}, "verifySSL": {"type": "boolean"}, "access-key": {"type": "string"}, "secret-key": {"type": "string"}, "bucket": {"type": "string"}, "location": {"type": "string"}, "key_prefix": {"type": "string"}}, "required": ["host", "port", "ssl", "verifySSL", "access-key", "secret-key", "bucket", "location", "key_prefix"]}, "MongoS3Coordinates": {"type": "object", "properties": {"mongo": {"$ref": "#/definitions/MongoCoordinates"}, "s3": {"$ref": "#/definitions/S3Coordinates"}}}, "CollectionListCoordinates": {"type": "object", "properties": {"collections": {"type": "array", "items": {"type": "string"}}}}, "MongoS3CoordinatesWithCollectionList": {"allOf": [{"$ref": "#/definitions/MongoS3Coordinates"}, {"$ref": "#/definitions/CollectionListCoordinates"}]}, "CpsPackage": {"type": "object", "properties": {"name": {"type": "string"}, "package_id": {"type": "string"}, "description": {"type": "string"}, "type": {"type": "string", "enum": ["model", "dictionary", "knowledge_graph", "data_catalog", "data_flow", "bundle"]}, "dependencies": {"type": "array", "items": {"type": "string"}}}, "required": ["name", "package_id", "description", "type", "dependencies"]}, "EntityAnnotation": {"type": "object", "properties": {"match": {"type": "string"}, "range": {"type": "array", "description": "2-Tuple representing the low and high indexes of the matching substring", "items": {"type": "integer"}, "minItems": 2, "maxItems": 2}, "subtype": {"type": "string"}, "type": {"type": "string"}}, "required": ["match", "range", "type"]}, "RelationshipAnnotation": {"type": "object"}, "ObjectPropertyMap": {"type": "object"}, "AnnotatedText": {"type": "object", "required": ["text", "entities", "relationships", "properties"], "properties": {"text": {"type": "string"}, "entities": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/EntityAnnotation"}}}, "relationships": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/RelationshipAnnotation"}}}, "properties": {"$ref": "#/definitions/ObjectPropertyMap"}}}, "AnnotatedTable": {"type": "object", "required": ["entities", "relationships", "properties"], "properties": {"text": {"type": "string"}, "entities": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/EntityAnnotation"}}}, "relationships": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/RelationshipAnnotation"}}}, "properties": {"$ref": "#/definitions/ObjectPropertyMap"}}}, "AnnotatedImage": {"type": "object", "required": ["entities", "relationships", "properties"], "properties": {"text": {"type": "string"}, "entities": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/EntityAnnotation"}}}, "relationships": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/RelationshipAnnotation"}}}, "properties": {"$ref": "#/definitions/ObjectPropertyMap"}}}, "AnnotatedObject": {"type": "object", "minProperties": 1, "maxProperties": 1, "properties": {"text": {"title": "AnnotatedTextLines", "type": "object", "required": ["text", "entities", "relationships", "properties"], "properties": {"text": {"description": "Input text after clean up. The annotation indexes will be based on this text and not the input text.", "type": "string"}, "entities": {"type": "array", "description": "One item per line on the original text.", "items": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/EntityAnnotation"}}}}, "relationships": {"type": "array", "description": "One item per line on the original text.", "items": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/definitions/RelationshipAnnotation"}}}}, "properties": {"type": "array", "description": "One item per line on the original text.", "items": {"$ref": "#/definitions/ObjectPropertyMap"}}}}, "table": {"$ref": "#/definitions/AnnotatedTable"}, "image": {"$ref": "#/definitions/AnnotatedImage"}}}, "TopologyNode": {"type": "object", "properties": {"name": {"type": "string"}}, "required": ["name"]}, "TopologyEdge": {"type": "object", "properties": {"name": {"type": "string"}, "source": {"type": "array", "items": {"type": "string"}}, "target": {"type": "array", "items": {"type": "string"}}}, "required": ["name", "source", "target"]}, "Topology": {"type": "object", "properties": {"categories": {"type": "array", "items": {"$ref": "#/definitions/TopologyNode"}}, "edges": {"type": "array", "items": {"$ref": "#/definitions/TopologyEdge"}}}, "required": ["categories", "edges"]}, "DataCatalogTopologyNode": {"properties": {"name": {"type": "string"}, "data-fields": {"type": "array", "items": {"type": "string"}}}, "required": ["name", "data-fields"]}, "DataCatalogTopologyEdge": {"type": "object", "properties": {"name": {"type": "string"}, "source": {"type": "array", "items": {"type": "string"}}, "target": {"type": "array", "items": {"type": "string"}}, "source_field": {"type": "string"}, "target_field": {"type": "string"}}, "required": ["name", "source", "target", "source_field", "target_field"]}, "DataCatalogTopology": {"properties": {"categories": {"type": "array", "items": {"$ref": "#/definitions/DataCatalogTopologyNode"}}, "edges": {"type": "array", "items": {"$ref": "#/definitions/DataCatalogTopologyEdge"}}}, "required": ["categories", "edges"]}, "DataCatalogImportResult": {"type": "object", "required": ["data_catalogue", "import_task"], "properties": {"data_catalogue": {"$ref": "#/definitions/DataCatalogue"}, "import_task": {"$ref": "#/definitions/Task"}}}, "ElasticCoordinates": {"type": "object", "required": ["hosts"], "properties": {"hosts": {"type": "array", "items": {"type": "string"}}, "ca_certificate_base64": {"type": "string"}, "dangerously_disable_ssl_validation": {"type": "boolean"}}}, "ModelConfiguration": {"type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string", "x-nullable": true}, "model_config_key": {"type": "string"}, "proj_key": {"type": "string"}, "created_by": {"type": "string"}, "created_at": {"type": "number", "format": "double"}, "public": {"type": "boolean"}, "configurations": {"type": "object", "properties": {"type": {"type": "string"}}, "required": ["type"], "additionalProperties": {}}, "supported_annotations": {"type": "object"}}, "required": ["name", "description", "model_config_key", "proj_key", "created_by", "created_at", "public"]}, "DictionaryCollectionObjectData": {"title": "DictionaryCollectionObjectData", "type": "array", "items": {"title": "DictionaryEntryWithId", "properties": {"_id": {"type": "string"}}, "required": ["_id"], "allOf": [{"$ref": "#/definitions/DictionaryEntry"}]}}, "DictionaryCollectionCsvData": {"title": "DictionaryCollectionCsvData", "type": "object", "properties": {"header": {"type": "string"}, "body": {"type": "string"}}, "required": ["header", "body"]}, "ProjectDefaultValues": {"type": "object", "properties": {"ccs_project": {"type": "object", "required": ["proj_key", "name"], "properties": {"proj_key": {"type": "string"}, "name": {"type": "string"}, "collection_name": {"type": "string"}}}, "dataflow": {"type": "object", "required": ["df_tpl_key", "name"], "properties": {"df_tpl_key": {"type": "string"}, "name": {"type": "string"}}}}}, "ProjectIntegrations": {"x-anyOf": [{"title": "Genai", "x-anyOf": [{"title": "GenAIWatsonx", "description": "GenAI integration for watsonx settings", "type": "object", "properties": {"kind": {"title": "Kind", "default": "watsonx", "const": "watsonx", "type": "string"}, "config": {"title": "GenAIWatsonxConfig", "description": "Config for watsonx", "type": "object", "properties": {"GENAI_API": {"title": "Endpoint", "type": "string"}, "GENAI_PROJECT_ID": {"title": "Project Id", "type": "string"}, "GENAI_KEY": {"title": "Apikey", "type": "string", "writeOnly": true, "format": "password"}}, "required": ["endpoint", "project_id", "apikey"]}}, "required": ["config"]}, {"title": "GenAIBAM", "description": "GenAI integration for BAM settings", "type": "object", "properties": {"kind": {"title": "Kind", "default": "bam", "const": "bam", "type": "string"}, "config": {"title": "GenAIBAMConfig", "description": "Config for BAM", "type": "object", "properties": {"GENAI_API": {"title": "Endpoint", "type": "string"}, "GENAI_KEY": {"title": "Apikey", "type": "string", "writeOnly": true, "format": "password"}}, "required": ["endpoint", "apikey"]}}, "required": ["config"]}, {"title": "GenAIHFInferenceApi", "description": "GenAI integration for Inference API settings", "type": "object", "properties": {"kind": {"title": "Kind", "default": "hf_api", "const": "hf_api", "type": "string"}, "config": {"title": "GenAIHFInferenceApiConfig", "description": "Config for HF Inference API", "type": "object", "properties": {"GENAI_HF_API_KEY": {"title": "Genai Hf Api Key", "type": "string", "writeOnly": true, "format": "password"}}, "required": ["GENAI_HF_API_KEY"]}}, "required": ["config"]}, {"title": "GenAIAWSBedrock", "description": "GenAI integration for AWS Bedrock settings", "type": "object", "properties": {"kind": {"title": "Kind", "default": "aws_bedrock", "const": "aws_bedrock", "type": "string"}, "config": {"title": "GenAIAWSBedrockConfig", "description": "Config for AWS Bedrock", "type": "object", "properties": {"GENAI_AWS_ACCESS_KEY": {"title": "Genai Aws Access Key", "type": "string", "writeOnly": true, "format": "password"}, "GENAI_AWS_SECRET_KEY": {"title": "Genai Aws Secret Key", "type": "string", "writeOnly": true, "format": "password"}, "GENAI_AWS_REGION_NAME": {"title": "Genai Aws Region Name", "type": "string"}}, "required": ["GENAI_AWS_ACCESS_KEY", "GENAI_AWS_SECRET_KEY", "GENAI_AWS_REGION_NAME"]}}, "required": ["config"]}]}]}, "BagBackendAware": {"type": "object", "required": ["proj_key", "bag_key", "name", "description", "slug", "timestamp", "backend", "public"], "properties": {"proj_key": {"type": "string"}, "bag_key": {"type": "string"}, "name": {"type": "string"}, "description": {"type": "string"}, "slug": {"type": "string"}, "timestamp": {"type": "number", "format": "double"}, "backend": {"type": "object", "title": "BagBackends", "properties": {"kg_legacy_api": {"type": "object", "title": "BagKgLegacyApiBackend", "properties": {"bag_domain": {"type": "string"}, "flavour": {"type": "string"}, "bag_url": {"type": "string"}, "token": {"type": "string"}, "_svc_endpoint": {"type": "string"}}}, "kg_amqp": {"type": "object", "title": "BagAmqpBackend", "properties": {"flavour": {"type": "string"}}}}}, "public": {"type": "boolean"}, "last_coords_resolution": {"type": "number"}}}, "TakeSnapshotSettingsBackendAware": {"type": "object", "properties": {"backend_flavours": {"type": "object", "title": "BackendFlavour", "properties": {"kg_amqp": {"type": "string"}, "kg_legacy_api": {"type": "string"}}}, "name": {"type": "string"}, "load_into_kg_after_created": {"type": "boolean", "default": false}}, "required": ["backend_flavours"]}, "BagStatusBackendAware": {"type": "object", "properties": {"overall_status": {"$ref": "#/definitions/BagComponentStatusEnum"}, "kg_amqp": {"type": "object", "properties": {"status": {"$ref": "#/definitions/BagComponentStatusEnum"}}, "required": ["status"]}, "kg_legacy_api": {"$ref": "#/definitions/BagStatus"}}, "required": ["overall_status"]}, "AnnotatorSupportedAnnotationsParameters": {"type": "object", "properties": {"annotator": {"type": "string"}, "annotator_settings": {"type": "object"}}, "required": ["annotator"]}, "ModelSupportedAnnotationsParameters": {"type": "object", "properties": {"model_config_key": {"type": "string"}, "proj_key": {"type": "string"}, "public": {"type": "boolean"}}, "required": ["model_config_key", "proj_key", "public"]}, "ElasticIndexSearchQueryOptions": {"type": "object", "properties": {"_source": {"type": "array", "items": {"type": "string"}}, "from": {"type": "number", "minimum": 0}, "size": {"type": "number", "minimum": 0, "maximum": 10000}, "query": {"type": "object", "additionalProperties": {}}, "aggs": {"type": "object"}, "sort": {"type": "array", "items": {"type": "object"}}}}, "ElasticIndexProperties": {"type": "object"}, "KibanaSavedQueriesResult": {"type": "object", "properties": {"description": {"type": "string"}, "fields": {"type": "array", "items": {"type": "string"}}, "query": {"type": "string"}, "title": {"type": "string"}}}, "AnnotatorParametersOrRef": {"type": "object", "properties": {"type": {"type": "string"}, "model_config_key": {"type": "string"}, "proj_key": {"type": "string"}, "public": {"type": "boolean"}}}, "DataCollection": {"type": "object", "required": ["name", "documents", "health", "status", "metadata"], "properties": {"name": {"type": "string"}, "documents": {"type": "number"}, "health": {"type": "string"}, "status": {"type": "string"}, "metadata": {"type": "object", "required": ["aliases", "created", "description", "source", "version", "type", "domain"], "properties": {"aliases": {"type": "array", "items": {"type": "string"}}, "created": {"type": "string", "format": "datetime"}, "description": {"type": "string"}, "source": {"type": "string"}, "storage": {"type": "string"}, "version": {"type": "string"}, "type": {"type": "string"}, "domain": {"type": "array", "items": {"type": "string"}}}}, "source": {"type": "object", "required": ["index_key"], "properties": {"index_key": {"type": "string"}, "proj_key": {"type": "string"}, "elastic_id": {"type": "string"}}}}}, "Dictionary": {"type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string", "x-nullable": true}, "dict_key": {"type": "string"}, "proj_key": {"type": "string"}, "created_by": {"type": "string"}, "created_at": {"type": "number", "format": "double"}, "copy_of": {"type": "string", "x-nullable": true}, "public": {"type": "boolean"}, "collections": {"type": "array", "items": {"$ref": "#/definitions/DictionaryCollection"}}}, "required": ["name", "description", "dict_key", "proj_key", "created_by", "created_at", "copy_of", "public"]}, "DictionaryEntry": {"type": "object", "additionalProperties": {}, "properties": {"_name": {"type": "string"}, "_synonyms": {"type": "array", "items": {"type": "string"}}}, "required": ["_name", "_synonyms"]}, "DictionaryCloneResult": {"type": "object", "properties": {"dictionary": {"$ref": "#/definitions/Dictionary"}, "clone_task": {"$ref": "#/definitions/Task"}}}, "DictionaryCollection": {"type": "object", "required": ["name", "item_count"], "properties": {"name": {"type": "string"}, "item_count": {"type": "integer"}}}, "DictionaryCollectionPatch": {"type": "object", "required": ["op", "path"], "properties": {"op": {"type": "string", "enum": ["add", "replace", "remove"]}, "path": {"type": "string", "description": "A path (see JSON patch specification) in the format `/{objectid}` for existing objects, or `/-` for new objects (`add` operations).", "pattern": "^/(?:-|[a-zA-Z0-9]{24})$"}, "value": {"$ref": "#/definitions/DictionaryEntry"}}}, "CpsModelReference": {"type": "object", "properties": {"model_config_key": {"type": "string"}, "proj_key": {"type": "string"}}, "required": ["model_config_key", "proj_key"]}, "CcsCollectionReference": {"type": "object", "properties": {"proj_key": {"type": "string"}, "collection_name": {"type": "string"}, "language": {"type": "string"}}, "required": ["proj_key", "collection_name"]}, "ProcessingModelDataFlow": {"type": "object", "properties": {"config": {"type": "object"}, "data-flow": {"type": "array", "items": {"type": "object"}}}, "required": ["config", "data-flow"]}, "WorkFlow": {"type": "object"}, "ProcessingModel": {"type": "object", "required": ["dataflow"], "properties": {"dataflow": {"$ref": "#/definitions/ProcessingModelDataFlow"}, "variables": {"type": "object", "additionalProperties": {"type": "object", "title": "DataFlowVariableDefinition", "properties": {"type": {"type": "string"}}, "required": ["type"]}}}}, "CatalogReference": {"type": "object", "properties": {"dc_key": {"type": "string"}, "proj_key": {"type": "string"}, "collection_name": {"type": "string"}}, "required": ["dc_key", "collection_name"]}, "EntityMapping": {"type": "object", "additionalProperties": {"type": "string"}}, "ProcessingModelDescription": {"type": "object", "required": ["name", "display_name", "description"], "properties": {"name": {"type": "string"}, "display_name": {"type": "string"}, "description": {"type": "string"}}}}, "basePath": "/api/cps/public/v1"}
