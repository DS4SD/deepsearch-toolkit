{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Deep Search Toolkit","text":"<p>Interact with the Deep Search platform for new knowledge explorations and discoveries</p> <p>The Deep Search Toolkit is a Python SDK and CLI allowing users to interact with the Deep Search platform. The Toolkit provides easy-to-use features for several common document workflows such as conversion, graph creation, and querying, including semantic retrieval and RAG.</p> <p>Deep Search  Deep Search GitHub  Examples </p>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#install","title":"Install","text":"pippipxpoetry <pre><code>pip install deepsearch-toolkit\n</code></pre> <pre><code>pipx install deepsearch-toolkit\n</code></pre> <pre><code>poetry add deepsearch-toolkit\n</code></pre>"},{"location":"#set-up-your-profile","title":"Set up your Profile","text":"<p>After logging in to Deep Search, you can set up your profile as shown below:</p> <ol> <li>click on the Toolkit / API icon on the top-right corner</li> <li>from the Toolkit section, copy the command and run on your terminal</li> <li>when prompted for the API key, copy it from the HTTP section and complete the setup</li> </ol> <p></p> <p>To quickly check your profile setup, run the following \u2014 your projects should be displayed:</p> CLIPython <pre><code>deepsearch cps projects list\n</code></pre> <pre><code>import deepsearch as ds\napi = ds.CpsApi.from_env()\nprint([p.name for p in api.projects.list()])\n</code></pre> <p>Multi-profile support</p> <p>You can set up multiple profiles, e.g. for different deployments. For details on managing profiles, check Profiles.</p>"},{"location":"#start-using-the-toolkit","title":"Start Using the Toolkit","text":"<p>Check out Deep Search Examples  for interactive notebooks showcasing various common usage scenarios and find inspiration on how to make the most out of your own documents.</p>"},{"location":"api-reference/","title":"API Reference","text":"<p>DeepSearch Toolkit</p>"},{"location":"api-reference/#deepsearch.artifacts","title":"<code>artifacts</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager","title":"<code>artifact_manager</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ARTF_META_FILENAME","title":"<code>ARTF_META_FILENAME = os.getenv('DEEPSEARCH_ARTIFACT_META_FILENAME', default='meta.info')</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ARTF_META_URL_FIELD","title":"<code>ARTF_META_URL_FIELD = os.getenv('DEEPSEARCH_ARTIFACT_URL_FIELD', default='static_url')</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.DFLT_ARTFCT_CACHE_DIR","title":"<code>DFLT_ARTFCT_CACHE_DIR = os.getenv('DEEPSEARCH_ARTIFACT_CACHE', default=Path(platformdirs.user_cache_dir('deepsearch', 'ibm')) / 'artifact_cache')</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.DFLT_ARTFCT_INDEX_DIR","title":"<code>DFLT_ARTFCT_INDEX_DIR = os.getenv('DEEPSEARCH_ARTIFACT_INDEX', default=os.getcwd())</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager","title":"<code>ArtifactManager</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.HitStrategy","title":"<code>HitStrategy</code>","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p>"},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.HitStrategy.OVERWRITE","title":"<code>OVERWRITE = 'overwrite'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.HitStrategy.PASS","title":"<code>PASS = 'pass'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.HitStrategy.RAISE","title":"<code>RAISE = 'raise'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.__init__","title":"<code>__init__(index=None, cache=None)</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.download_artifact_to_cache","title":"<code>download_artifact_to_cache(artifact_name, unpack_archives=True, hit_strategy=HitStrategy.OVERWRITE, with_progress_bar=False)</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.get_artifact_path_in_cache","title":"<code>get_artifact_path_in_cache(artifact_name)</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.get_artifacts_in_cache","title":"<code>get_artifacts_in_cache()</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.get_artifacts_in_index","title":"<code>get_artifacts_in_index()</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.get_cache_path","title":"<code>get_cache_path()</code>","text":""},{"location":"api-reference/#deepsearch.artifacts.artifact_manager.ArtifactManager.get_index_path","title":"<code>get_index_path()</code>","text":""},{"location":"api-reference/#deepsearch.chemistry","title":"<code>chemistry</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.models","title":"<code>models</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryCompound","title":"<code>ChemistryCompound</code>","text":"<p>               Bases: <code>ChemistryModel</code></p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryCompound.display_name","title":"<code>display_name</code>  <code>instance-attribute</code>","text":"<p>User friendly representation of compound.</p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryCompound.inchi","title":"<code>inchi</code>  <code>instance-attribute</code>","text":"<p>InChI representation of compound structure.</p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryCompound.inchikey","title":"<code>inchikey</code>  <code>instance-attribute</code>","text":"<p>Hashed form of InChI.</p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryCompound.smiles","title":"<code>smiles</code>  <code>instance-attribute</code>","text":"<p>SMILES representation of compound structure.</p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryCompound.sum_formula","title":"<code>sum_formula</code>  <code>instance-attribute</code>","text":"<p>Sum formula of compound. For example 'C6 O2 H5'</p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryDocument","title":"<code>ChemistryDocument</code>","text":"<p>               Bases: <code>ChemistryModel</code></p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryDocument.application_id","title":"<code>application_id</code>  <code>instance-attribute</code>","text":"<p>Identifier under which a patent application has been filed.</p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryDocument.publication_id","title":"<code>publication_id</code>  <code>instance-attribute</code>","text":"<p>Identifier under which a patent has been published.</p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryDocument.title","title":"<code>title</code>  <code>instance-attribute</code>","text":"<p>(Readable) title of the document.</p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryModel","title":"<code>ChemistryModel</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryModel.id","title":"<code>id</code>  <code>instance-attribute</code>","text":"<p>Transient identifier for short term use.</p>"},{"location":"api-reference/#deepsearch.chemistry.models.ChemistryModel.persistent_id","title":"<code>persistent_id</code>  <code>instance-attribute</code>","text":"<p>Identifier for long term (storage) use.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries","title":"<code>queries</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryCompound","title":"<code>ChemistryCompound</code>","text":"<p>               Bases: <code>ChemistryModel</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryCompound.display_name","title":"<code>display_name</code>  <code>instance-attribute</code>","text":"<p>User friendly representation of compound.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryCompound.inchi","title":"<code>inchi</code>  <code>instance-attribute</code>","text":"<p>InChI representation of compound structure.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryCompound.inchikey","title":"<code>inchikey</code>  <code>instance-attribute</code>","text":"<p>Hashed form of InChI.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryCompound.smiles","title":"<code>smiles</code>  <code>instance-attribute</code>","text":"<p>SMILES representation of compound structure.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryCompound.sum_formula","title":"<code>sum_formula</code>  <code>instance-attribute</code>","text":"<p>Sum formula of compound. For example 'C6 O2 H5'</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryDocument","title":"<code>ChemistryDocument</code>","text":"<p>               Bases: <code>ChemistryModel</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryDocument.application_id","title":"<code>application_id</code>  <code>instance-attribute</code>","text":"<p>Identifier under which a patent application has been filed.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryDocument.publication_id","title":"<code>publication_id</code>  <code>instance-attribute</code>","text":"<p>Identifier under which a patent has been published.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryDocument.title","title":"<code>title</code>  <code>instance-attribute</code>","text":"<p>(Readable) title of the document.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.ChemistryQuery","title":"<code>ChemistryQuery</code>","text":"<p>               Bases: <code>BaseModel</code>, <code>ABC</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsByIds","title":"<code>CompoundsByIds</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that have any of the given identifiers.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsByIds.inchikeys","title":"<code>inchikeys = []</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsByIds.persistent_ids","title":"<code>persistent_ids = []</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsBySimilarity","title":"<code>CompoundsBySimilarity</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that are similar to the given SMILES code.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsBySimilarity.structure","title":"<code>structure</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsBySimilarity.threshold","title":"<code>threshold = 0.9</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsBySmarts","title":"<code>CompoundsBySmarts</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that (exactly) match the given SMARTS code.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsBySmarts.structure","title":"<code>structure</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsBySmiles","title":"<code>CompoundsBySmiles</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that (exactly) match the given SMILES code.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsBySmiles.structure","title":"<code>structure</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsBySubstructure","title":"<code>CompoundsBySubstructure</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that contain a substructure with the given SMILES code.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsBySubstructure.structure","title":"<code>structure</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsIn","title":"<code>CompoundsIn</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that occur in the given documents.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsIn.documents","title":"<code>documents</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.CompoundsQuery","title":"<code>CompoundsQuery</code>","text":"<p>               Bases: <code>ChemistryQuery</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.DocumentsByIds","title":"<code>DocumentsByIds</code>","text":"<p>               Bases: <code>DocumentsQuery</code></p> <p>Query documents that have any of the given identifiers.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.DocumentsByIds.application_ids","title":"<code>application_ids = []</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.DocumentsByIds.persistent_ids","title":"<code>persistent_ids = []</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.DocumentsByIds.publication_ids","title":"<code>publication_ids = []</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.DocumentsHaving","title":"<code>DocumentsHaving</code>","text":"<p>               Bases: <code>DocumentsQuery</code></p> <p>Query documents that contain compounds matching the given query.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.DocumentsHaving.compounds","title":"<code>compounds</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.DocumentsQuery","title":"<code>DocumentsQuery</code>","text":"<p>               Bases: <code>ChemistryQuery</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.KnowledgeDbResource","title":"<code>KnowledgeDbResource</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.KnowledgeDbResource.to_resource","title":"<code>to_resource()</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.Query","title":"<code>Query</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.Query.paginated_task","title":"<code>paginated_task = None</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.Query.tasks","title":"<code>tasks = []</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.Query.variables","title":"<code>variables = {}</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.Query.__init__","title":"<code>__init__()</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.Query.add","title":"<code>add(kind_or_task, *, task_id=None, parameters=None, inputs=None, coordinates=None)</code>","text":"<pre><code>add(kind_or_task: TTask) -&gt; TTask\n</code></pre><pre><code>add(\n    kind_or_task: str,\n    *,\n    task_id: Optional[str] = None,\n    parameters: Optional[Dict[str, Any]] = None,\n    inputs: Optional[TaskInputs] = None,\n    coordinates: Optional[TaskCoordinates] = None\n) -&gt; Task\n</code></pre>"},{"location":"api-reference/#deepsearch.chemistry.queries.Query.parse","title":"<code>parse(value)</code>  <code>classmethod</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.Query.to_flow","title":"<code>to_flow()</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.query_chemistry","title":"<code>query_chemistry(api, query, offset=0, limit=10)</code>","text":"<pre><code>query_chemistry(\n    api: api.CpsApi,\n    query: CompoundsQuery,\n    offset: int = 0,\n    limit: int = 10,\n) -&gt; list[ChemistryCompound]\n</code></pre><pre><code>query_chemistry(\n    api: api.CpsApi,\n    query: DocumentsQuery,\n    offset: int = 0,\n    limit: int = 10,\n) -&gt; list[ChemistryDocument]\n</code></pre> <p>Perform a chemistry query on the knowledge base.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.api","title":"<code>api</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi","title":"<code>CpsApi</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.data_catalogs","title":"<code>data_catalogs</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.data_indices","title":"<code>data_indices</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.documents","title":"<code>documents</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.elastic","title":"<code>elastic</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.knowledge_graphs","title":"<code>knowledge_graphs</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.projects","title":"<code>projects</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.queries","title":"<code>queries</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.tasks","title":"<code>tasks</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.uploader","title":"<code>uploader</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.__init__","title":"<code>__init__(client)</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.from_env","title":"<code>from_env(profile_name=None)</code>  <code>classmethod</code>","text":"<p>Create an API object resolving the required settings from the environment if possible, otherwise from a stored profile.</p> <p>Parameters:</p> Name Type Description Default <code>profile_name</code> <code>Optional[str]</code> <p>profile to use if resolution from environment not possible. Defaults to None (active profile).</p> <code>None</code> <p>Returns:</p> Name Type Description <code>CpsApi</code> <code>CpsApi</code> <p>the created API object</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.from_settings","title":"<code>from_settings(settings)</code>  <code>classmethod</code>","text":"<p>Create an API object from the provided settings.</p> <p>Parameters:</p> Name Type Description Default <code>settings</code> <code>ProfileSettings</code> <p>the settings to use.</p> required <p>Returns:</p> Name Type Description <code>CpsApi</code> <code>CpsApi</code> <p>the created API object</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApi.refresh_token","title":"<code>refresh_token(admin=False)</code>","text":"<p>Refresh access token</p> <p>Parameters:</p> Name Type Description Default <code>admin</code> <code>bool</code> <p>controls whether an admin token should be requested. Defaults to False.</p> <code>False</code> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>raised in case API Key or User is invalid</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApiClient","title":"<code>CpsApiClient</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApiClient.bearer_token_auth","title":"<code>bearer_token_auth = DeepSearchBearerTokenAuth(bearer_token=self._authenticate_with_api_key(self.config.host, self.config.auth.username, self.config.auth.api_key))</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApiClient.config","title":"<code>config = config</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApiClient.session","title":"<code>session = requests.Session()</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.api.CpsApiClient.__init__","title":"<code>__init__(config)</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules","title":"<code>molecules</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.CHEMVECDB_COLLECTIONS","title":"<code>CHEMVECDB_COLLECTIONS = {MolQueryType.SIMILARITY: 'patcid_tanimoto', MolQueryType.SUBSTRUCTURE: 'patcid_substructure'}</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolId","title":"<code>MolId</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolId.type","title":"<code>type</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolId.value","title":"<code>value</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolIdType","title":"<code>MolIdType</code>","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolIdType.INCHI","title":"<code>INCHI = 'inchi'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolIdType.INCHIKEY","title":"<code>INCHIKEY = 'inchikey'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolIdType.SMARTS","title":"<code>SMARTS = 'smarts'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolIdType.SMILES","title":"<code>SMILES = 'smiles'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolQueryLang","title":"<code>MolQueryLang</code>","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolQueryLang.SMARTS","title":"<code>SMARTS = 'smarts'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolQueryLang.SMILES","title":"<code>SMILES = 'smiles'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolQueryType","title":"<code>MolQueryType</code>","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolQueryType.SIMILARITY","title":"<code>SIMILARITY = 'similarity'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MolQueryType.SUBSTRUCTURE","title":"<code>SUBSTRUCTURE = 'substructure'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MoleculeQuery","title":"<code>MoleculeQuery(query, query_type, query_lang=MolQueryLang.SMILES, num_items=10)</code>","text":"<p>Use the knowledge database in Deep Search for querying molecules by substructure or similarity. The result is contained in the <code>molecules</code> output of the response.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.MoleculesInPatentsQuery","title":"<code>MoleculesInPatentsQuery(patents, num_items=10, partial_lookup=False)</code>","text":"<p>List all molecules contained in a list of patents. The result is contained in the <code>molecules</code> output of the response.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.molecules.PatentsWithMoleculesQuery","title":"<code>PatentsWithMoleculesQuery(molecules, num_items=10)</code>","text":"<p>List all patents containing any of the input molecules. The result is contained in the <code>patents</code> output of the response.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries","title":"<code>queries</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.ChemistryQuery","title":"<code>ChemistryQuery</code>","text":"<p>               Bases: <code>BaseModel</code>, <code>ABC</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsByIds","title":"<code>CompoundsByIds</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that have any of the given identifiers.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsByIds.inchikeys","title":"<code>inchikeys = []</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsByIds.persistent_ids","title":"<code>persistent_ids = []</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsBySimilarity","title":"<code>CompoundsBySimilarity</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that are similar to the given SMILES code.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsBySimilarity.structure","title":"<code>structure</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsBySimilarity.threshold","title":"<code>threshold = 0.9</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsBySmarts","title":"<code>CompoundsBySmarts</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that (exactly) match the given SMARTS code.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsBySmarts.structure","title":"<code>structure</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsBySmiles","title":"<code>CompoundsBySmiles</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that (exactly) match the given SMILES code.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsBySmiles.structure","title":"<code>structure</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsBySubstructure","title":"<code>CompoundsBySubstructure</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that contain a substructure with the given SMILES code.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsBySubstructure.structure","title":"<code>structure</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsIn","title":"<code>CompoundsIn</code>","text":"<p>               Bases: <code>CompoundsQuery</code></p> <p>Query compounds that occur in the given documents.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsIn.documents","title":"<code>documents</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.CompoundsQuery","title":"<code>CompoundsQuery</code>","text":"<p>               Bases: <code>ChemistryQuery</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.DocumentsByIds","title":"<code>DocumentsByIds</code>","text":"<p>               Bases: <code>DocumentsQuery</code></p> <p>Query documents that have any of the given identifiers.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.DocumentsByIds.application_ids","title":"<code>application_ids = []</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.DocumentsByIds.persistent_ids","title":"<code>persistent_ids = []</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.DocumentsByIds.publication_ids","title":"<code>publication_ids = []</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.DocumentsHaving","title":"<code>DocumentsHaving</code>","text":"<p>               Bases: <code>DocumentsQuery</code></p> <p>Query documents that contain compounds matching the given query.</p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.DocumentsHaving.compounds","title":"<code>compounds</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.queries.queries.DocumentsQuery","title":"<code>DocumentsQuery</code>","text":"<p>               Bases: <code>ChemistryQuery</code></p>"},{"location":"api-reference/#deepsearch.chemistry.queries.queries.query_chemistry","title":"<code>query_chemistry(api, query, offset=0, limit=10)</code>","text":"<pre><code>query_chemistry(\n    api: api.CpsApi,\n    query: CompoundsQuery,\n    offset: int = 0,\n    limit: int = 10,\n) -&gt; list[ChemistryCompound]\n</code></pre><pre><code>query_chemistry(\n    api: api.CpsApi,\n    query: DocumentsQuery,\n    offset: int = 0,\n    limit: int = 10,\n) -&gt; list[ChemistryDocument]\n</code></pre> <p>Perform a chemistry query on the knowledge base.</p>"},{"location":"api-reference/#deepsearch.chemistry.resources","title":"<code>resources</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.resources.ChemVecDbResource","title":"<code>ChemVecDbResource</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.resources.ChemVecDbResource.to_resource","title":"<code>to_resource()</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.resources.KnowledgeDbResource","title":"<code>KnowledgeDbResource</code>","text":""},{"location":"api-reference/#deepsearch.chemistry.resources.KnowledgeDbResource.to_resource","title":"<code>to_resource()</code>","text":""},{"location":"api-reference/#deepsearch.core","title":"<code>core</code>","text":""},{"location":"api-reference/#deepsearch.core.DeepSearchBearerTokenAuth","title":"<code>DeepSearchBearerTokenAuth</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.core.DeepSearchBearerTokenAuth.bearer_token","title":"<code>bearer_token</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.core.DeepSearchConfig","title":"<code>DeepSearchConfig</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.core.DeepSearchConfig.auth","title":"<code>auth</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.core.DeepSearchConfig.host","title":"<code>host</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.core.DeepSearchConfig.verify_ssl","title":"<code>verify_ssl = True</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.core.DeepSearchKeyAuth","title":"<code>DeepSearchKeyAuth</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.core.DeepSearchKeyAuth.api_key","title":"<code>api_key</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.core.DeepSearchKeyAuth.username","title":"<code>username</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.core.util","title":"<code>util</code>","text":""},{"location":"api-reference/#deepsearch.cps","title":"<code>cps</code>","text":""},{"location":"api-reference/#deepsearch.cps.__all__","title":"<code>__all__ = ['CpsApi', 'CpsApiClient']</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi","title":"<code>CpsApi</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.data_catalogs","title":"<code>data_catalogs</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.data_indices","title":"<code>data_indices</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.documents","title":"<code>documents</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.elastic","title":"<code>elastic</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.knowledge_graphs","title":"<code>knowledge_graphs</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.projects","title":"<code>projects</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.queries","title":"<code>queries</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.tasks","title":"<code>tasks</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.uploader","title":"<code>uploader</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.__init__","title":"<code>__init__(client)</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApi.from_env","title":"<code>from_env(profile_name=None)</code>  <code>classmethod</code>","text":"<p>Create an API object resolving the required settings from the environment if possible, otherwise from a stored profile.</p> <p>Parameters:</p> Name Type Description Default <code>profile_name</code> <code>Optional[str]</code> <p>profile to use if resolution from environment not possible. Defaults to None (active profile).</p> <code>None</code> <p>Returns:</p> Name Type Description <code>CpsApi</code> <code>CpsApi</code> <p>the created API object</p>"},{"location":"api-reference/#deepsearch.cps.CpsApi.from_settings","title":"<code>from_settings(settings)</code>  <code>classmethod</code>","text":"<p>Create an API object from the provided settings.</p> <p>Parameters:</p> Name Type Description Default <code>settings</code> <code>ProfileSettings</code> <p>the settings to use.</p> required <p>Returns:</p> Name Type Description <code>CpsApi</code> <code>CpsApi</code> <p>the created API object</p>"},{"location":"api-reference/#deepsearch.cps.CpsApi.refresh_token","title":"<code>refresh_token(admin=False)</code>","text":"<p>Refresh access token</p> <p>Parameters:</p> Name Type Description Default <code>admin</code> <code>bool</code> <p>controls whether an admin token should be requested. Defaults to False.</p> <code>False</code> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>raised in case API Key or User is invalid</p>"},{"location":"api-reference/#deepsearch.cps.CpsApiClient","title":"<code>CpsApiClient</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApiClient.bearer_token_auth","title":"<code>bearer_token_auth = DeepSearchBearerTokenAuth(bearer_token=self._authenticate_with_api_key(self.config.host, self.config.auth.username, self.config.auth.api_key))</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApiClient.config","title":"<code>config = config</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApiClient.session","title":"<code>session = requests.Session()</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.CpsApiClient.__init__","title":"<code>__init__(config)</code>","text":""},{"location":"api-reference/#deepsearch.cps.data_indices","title":"<code>data_indices</code>","text":""},{"location":"api-reference/#deepsearch.cps.data_indices.utils","title":"<code>utils</code>","text":""},{"location":"api-reference/#deepsearch.cps.data_indices.utils.logger","title":"<code>logger = logging.getLogger(__name__)</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.data_indices.utils.process_external_cos","title":"<code>process_external_cos(api, coords, s3_coordinates, progress_bar=False)</code>","text":"<p>Individual files are processed before upload.</p>"},{"location":"api-reference/#deepsearch.cps.data_indices.utils.process_local_file","title":"<code>process_local_file(api, coords, local_file, progress_bar=False, conv_settings=None, target_settings=None)</code>","text":"<p>Individual files are uploaded for conversion and storage in data index.</p>"},{"location":"api-reference/#deepsearch.cps.data_indices.utils.process_url_input","title":"<code>process_url_input(api, coords, urls, url_chunk_size, progress_bar=False)</code>","text":"<p>Individual urls are uploaded for conversion and storage in data index.</p>"},{"location":"api-reference/#deepsearch.cps.data_indices.utils.upload_files","title":"<code>upload_files(api, coords, url=None, local_file=None, s3_coordinates=None, conv_settings=None, target_settings=None, url_chunk_size=1)</code>","text":"<p>Orchestrate document conversion and upload to an index in a project</p>"},{"location":"api-reference/#deepsearch.cps.kg","title":"<code>kg</code>","text":""},{"location":"api-reference/#deepsearch.cps.kg.workflow","title":"<code>workflow</code>","text":""},{"location":"api-reference/#deepsearch.cps.kg.workflow.MultiLinkedList","title":"<code>MultiLinkedList</code>","text":""},{"location":"api-reference/#deepsearch.cps.kg.workflow.MultiLinkedList.MultiLinkedList","title":"<code>MultiLinkedList</code>","text":"<code>head = node</code> <code>instance-attribute</code> \u00b6 <code>tail = node</code> <code>instance-attribute</code> \u00b6 <code>__eq__(other)</code> \u00b6 <code>__init__(node=None)</code> \u00b6 <code>__ne__(other)</code> \u00b6 <code>append(value)</code> \u00b6 <code>append_child(child=None)</code> \u00b6 <code>flatten_list()</code> \u00b6 <code>print_list()</code> \u00b6"},{"location":"api-reference/#deepsearch.cps.kg.workflow.MultiLinkedList.Node","title":"<code>Node</code>","text":"<code>child = None</code> <code>instance-attribute</code> \u00b6 <code>data = data</code> <code>instance-attribute</code> \u00b6 <code>id = id or str(uuid4())</code> <code>instance-attribute</code> \u00b6 <code>next = None</code> <code>instance-attribute</code> \u00b6 <code>prev = None</code> <code>instance-attribute</code> \u00b6 <code>__init__(data, id=None)</code> \u00b6"},{"location":"api-reference/#deepsearch.cps.kg.workflow.wf_functions","title":"<code>wf_functions</code>","text":""},{"location":"api-reference/#deepsearch.cps.kg.workflow.wf_functions.run","title":"<code>run(wf, config)</code>","text":"<p>Run the workflow against the given KG :param workflow: Workflow object :type workflow: Workflow :param config: Knowledge Graph API Configuration :type config: Configuration :returns workflow results</p>"},{"location":"api-reference/#deepsearch.cps.kg.workflow.wf_functions.validate","title":"<code>validate(wf, config)</code>","text":"<p>Validate the workflow DAG :param workflow: Workflow object :type workflow: Workflow :param config: Knowledge Graph API Configuration :type config: Configuration</p>"},{"location":"api-reference/#deepsearch.cps.kg.workflow.workflow","title":"<code>workflow</code>","text":""},{"location":"api-reference/#deepsearch.cps.kg.workflow.workflow.Workflow","title":"<code>Workflow</code>","text":"<code>__add__(workflow)</code> \u00b6 <code>__and__(workflow)</code> \u00b6 <code>__init__(starting_node=None)</code> \u00b6 <code>__mul__(workflow)</code> \u00b6 <code>__or__(workflow)</code> \u00b6 <code>as_output(limit=None)</code> \u00b6 <p>Set node type as output :param limit: Response limit :type limit: int</p> <code>combine(*workflows)</code> \u00b6 <p>Combine result :param <code>*workflows</code>: Nodes to combine :type <code>*workflows</code>: List['Workflow']</p> <code>edge_traversal(edges=[], include=[])</code> \u00b6 <p>Traverse edges :param edges: The edges to traverse :type edges: List[str] :param include: Include nodes in operation :type include: List['Workflow']</p> <code>filter(filter_type='cut-off', field_operation='==', field_value='', include=[])</code> \u00b6 <p>Filter values :param filter_type: Filter type. Possible values \"cut-off\", \"field-value\" :type filter_type: str :param field_operation: The field operation to use if filter type is \"field-value\". Possible values \"&lt;\", \"==\", \"&gt;\" :type field_operation: str :param field_value: The field value to filter by :type field_value: str :param include: Include nodes in operation :type include: List['Workflow']</p> <code>filter_categories(*categories, include=[])</code> \u00b6 <p>Filter node type by category :param categories: the categories to filter :type categories: List[str] :param include: Include nodes in operation :type include: List['Workflow']</p> <code>get_operations()</code> \u00b6 <p>Return workflow operations</p> <code>intersect(*workflows)</code> \u00b6 <p>Intersect result :param <code>*workflows</code>: Nodes to intersect :type <code>*workflows</code>: List['Workflow']</p> <code>matrix_function(matrix_function='abs', include=[])</code> \u00b6 <p>Run result through matrix function :param matrix_function: Scalar function to use. Possible values \"e^A\", \"cosh\", \"sinh\" :type matrix_function: str :param include: Include nodes in operation :type include: List['Workflow']</p> <code>multiply(*workflows)</code> \u00b6 <p>Multiply result :param <code>*workflows</code>: Nodes to multiply :type <code>*workflows</code>: List['Workflow']</p> <code>negate(*workflows)</code> \u00b6 <p>Negate result :param <code>*workflows</code>: Nodes to negate :type <code>*workflows</code>: List['Workflow']</p> <code>normalize(normalize_type='RENORMALIZE_L2', include=[])</code> \u00b6 <p>Normalize result :param normalize_type: Normalize type to use. Possible values \"RENORMALIZE_L1\", \"RENORMALIZE_L2\", \"RENORMALIZE_LINF\" :type normalize_type: str :param include: Include nodes in operation :type include: List['Workflow']</p> <code>pearson_traversal(edges=[], include=[])</code> \u00b6 <p>Traverse edges using pearson traversal :param edges: The edges to traverse :type edges: List[str] :param include: Include nodes in operation :type include: List['Workflow']</p> <code>scalar_function(scalar_function='abs', include=[])</code> \u00b6 <p>Run result through scalar function :param scalar_function: Scalar function to use. Possible values \"uniform\", \"abs\", \"inv\", \"sigmoid\", \"softmax\" :type scalar_function: str :param include: Include nodes in operation :type include: List['Workflow']</p> <code>search_nodes_by_approximation(*args, tolerance=0.8, include=[])</code> \u00b6 <p>Search nodes where the arguments are approximate :param <code>*args</code>: the search arguments :type <code>*args</code>: List[str] :param tolerance: the tolerance :type tolerance: float :param include: Include nodes in operation :type include: List['Workflow']</p> <code>search_nodes_by_db_id_pair(*args, include=[])</code> \u00b6 <p>Search nodes that contain the db\\id pair :param <code>*args</code>: the db\\id pairs in format {\"_db\": \"db value\", \"_id\": \"id value\"} :type <code>*args</code>: List[str] :param include: Include nodes in operation :type include: List['Workflow']</p> <code>search_nodes_by_index(indices=[], weights=[], include=[])</code> \u00b6 <p>Search nodes by index :param indices: the indices to search :type indices: str :param weights: the weight to search :type weights: float :param include: Include nodes in operation :type include: List['Workflow']</p> <code>search_nodes_by_regex(*args, include=[])</code> \u00b6 <p>Search nodes by regex that match args :param <code>*args</code>: the search arguments :type <code>*args</code>: List[str] :param include: Include nodes in operation :type include: List['Workflow']</p> <code>search_nodes_containing(*args, include=[])</code> \u00b6 <p>Search nodes that contain the args :param <code>*args</code>: the search arguments :type <code>*args</code>: List[str] :param include: Include nodes in operation :type include: List['Workflow']</p> <code>search_nodes_equal(*args, include=[])</code> \u00b6 <p>Search nodes that equal the args :param <code>*args</code>: the search arguments :type <code>*args</code>: List[str] :param include: Include nodes in operation :type include: List['Workflow']</p> <code>search_nodes_in_category(*categories, include=[])</code> \u00b6 <p>Search nodes in categories :param categories: the categories to search :type categories: List[str] :param include: Include nodes in operation :type include: List['Workflow']</p> <code>set_to_field_value(field_name='', include=[])</code> \u00b6 <p>Set node to field value :param field_name: The field name :type field_name: str :param include: Include nodes in operation :type include: List['Workflow']</p> <code>split(times=1)</code> \u00b6 <p>Add children to node :param times: Number of children to add :type times: int :returns node childs</p> <code>sum(*workflows)</code> \u00b6 <p>Sum result :param <code>*workflows</code>: Nodes to sum :type <code>*workflows</code>: List['Workflow']</p> <code>to_json(indent=2)</code> \u00b6 <p>Return workflow as json string :param indent: result indentation :type indent: int</p>"},{"location":"api-reference/#deepsearch.cps.queries","title":"<code>queries</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.ConstrainedWeight","title":"<code>ConstrainedWeight = Annotated[float, Field(strict=True, ge=0.0, le=1.0, multiple_of=0.1)]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.DataQuery","title":"<code>DataQuery(search_query, *, source=None, aggregations=None, highlight=None, sort=None, limit=20, search_after=None, coordinates)</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.Fts","title":"<code>Fts(search_query, collection_name, kg)</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.RAGQuery","title":"<code>RAGQuery(question, *, project, data_source, retr_k=10, rerank=False, text_weight=0.1, model_id=None, prompt_template=None, gen_params=None, gen_ctx_extr_method='window', gen_ctx_window_size=5000, gen_ctx_window_lead_weight=0.5, return_prompt=False, chunk_refs=None, gen_timeout=None)</code>","text":"<p>Create a RAG query</p> <p>Parameters:</p> Name Type Description Default <code>question</code> <code>str</code> <p>the natural-language query</p> required <code>project</code> <code>Union[str, Project]</code> <p>project to use</p> required <code>data_source</code> <code>DataSource</code> <p>the data source to query</p> required <code>retr_k</code> <code>int</code> <p>num of items to retrieve; defaults to 10</p> <code>10</code> <code>rerank</code> <code>bool</code> <p>whether to rerank retrieval results; defaults to False</p> <code>False</code> <code>text_weight</code> <code>ConstrainedWeight</code> <p>lexical weight for hybrid search; allowed values: {0.0, 0.1, 0.2, ..., 1.0}; defaults to 0.1</p> <code>0.1</code> <code>model_id</code> <code>str</code> <p>the LLM to use for generation; defaults to None, i.e. determined by system</p> <code>None</code> <code>prompt_template</code> <code>str</code> <p>the prompt template to use; defaults to None, i.e. determined by system</p> <code>None</code> <code>gen_params</code> <code>dict</code> <p>the generation params to send to the Gen AI platforms; defaults to None, i.e. determined by system</p> <code>None</code> <code>gen_ctx_extr_method</code> <code>Literal['window', 'page']</code> <p>method for gen context extraction from document; defaults to \"window\"</p> <code>'window'</code> <code>gen_ctx_window_size</code> <code>int</code> <p>(relevant only if gen_ctx_extr_method==\"window\") max chars to use for extracted gen context (actual extraction quantized on doc item level); defaults to 5000</p> <code>5000</code> <code>gen_ctx_window_lead_weight</code> <code>float</code> <p>(relevant only if gen_ctx_extr_method==\"window\") weight of leading text for distributing remaining window size after extracting the <code>main_path</code>; defaults to 0.5 (centered around <code>main_path</code>)</p> <code>0.5</code> <code>return_prompt</code> <code>bool</code> <p>whether to return the instantiated prompt; defaults to False</p> <code>False</code> <code>chunk_refs</code> <code>Optional[List[ChunkRef]]</code> <p>list of explicit chunk references to use instead of performing retrieval; defaults to None (i.e. retrieval-mode)</p> <code>None</code> <code>gen_timeout</code> <code>float</code> <p>timeout for LLM generation; defaults to None, i.e. determined by system</p> <code>None</code>"},{"location":"api-reference/#deepsearch.cps.queries.SemanticQuery","title":"<code>SemanticQuery(question, *, project, data_source, retr_k=10, rerank=False, text_weight=0.1)</code>","text":"<p>Create a semantic retrieval query</p> <p>Parameters:</p> Name Type Description Default <code>question</code> <code>str</code> <p>the natural-language query</p> required <code>document_hash</code> <code>str</code> <p>hash of target document</p> required <code>project</code> <code>Union[str, Project]</code> <p>project to use</p> required <code>data_source</code> <code>DataSource</code> <p>the data source to query</p> required <code>retr_k</code> <code>int</code> <p>num of items to retrieve; defaults to 10</p> <code>10</code> <code>rerank</code> <code>bool</code> <p>whether to rerank retrieval results; defaults to False</p> <code>False</code> <code>text_weight</code> <code>ConstrainedWeight</code> <p>lexical weight for hybrid search; allowed values: {0.0, 0.1, 0.2, ..., 1.0}; defaults to 0.1</p> <code>0.1</code>"},{"location":"api-reference/#deepsearch.cps.queries.Wf","title":"<code>Wf(wf_query, kg)</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results","title":"<code>results</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.ChunkRef","title":"<code>ChunkRef</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.cps.queries.results.ChunkRef.doc_hash","title":"<code>doc_hash</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.ChunkRef.main_path","title":"<code>main_path</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.ChunkRef.path_group","title":"<code>path_group</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.GenerationError","title":"<code>GenerationError</code>","text":"<p>               Bases: <code>SemanticError</code></p>"},{"location":"api-reference/#deepsearch.cps.queries.results.GenerationError.__init__","title":"<code>__init__(msg='', *args, **kwargs)</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.NoSearchResultsError","title":"<code>NoSearchResultsError</code>","text":"<p>               Bases: <code>SemanticError</code></p>"},{"location":"api-reference/#deepsearch.cps.queries.results.NoSearchResultsError.__init__","title":"<code>__init__(msg='Search returned no results', *args, **kwargs)</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.RAGAnswerItem","title":"<code>RAGAnswerItem</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.cps.queries.results.RAGAnswerItem.answer","title":"<code>answer</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.RAGAnswerItem.grounding","title":"<code>grounding</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.RAGAnswerItem.prompt","title":"<code>prompt = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.RAGGroundingInfo","title":"<code>RAGGroundingInfo</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.cps.queries.results.RAGGroundingInfo.gen_ctx_paths","title":"<code>gen_ctx_paths</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.RAGGroundingInfo.retr_items","title":"<code>retr_items = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.RAGResult","title":"<code>RAGResult</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.cps.queries.results.RAGResult.answers","title":"<code>answers</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.RAGResult.search_result_items","title":"<code>search_result_items = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.RAGResult.from_api_output","title":"<code>from_api_output(data, raise_on_error=True)</code>  <code>classmethod</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.SearchResult","title":"<code>SearchResult</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.cps.queries.results.SearchResult.search_result_items","title":"<code>search_result_items</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.SearchResult.from_api_output","title":"<code>from_api_output(data, raise_on_error=True)</code>  <code>classmethod</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.SearchResultItem","title":"<code>SearchResultItem</code>","text":"<p>               Bases: <code>ChunkRef</code></p>"},{"location":"api-reference/#deepsearch.cps.queries.results.SearchResultItem.chunk","title":"<code>chunk</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.SearchResultItem.source_is_text","title":"<code>source_is_text</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.cps.queries.results.SemanticError","title":"<code>SemanticError</code>","text":"<p>               Bases: <code>Exception</code></p>"},{"location":"api-reference/#deepsearch.documents","title":"<code>documents</code>","text":""},{"location":"api-reference/#deepsearch.documents.core","title":"<code>core</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines","title":"<code>common_routines</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines.ERROR_MSG","title":"<code>ERROR_MSG = f'{dashes}Suggestion:(1) Check your input.(2) Contact Deep Search developers if problem persists.{dashes}'</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines.WELCOME","title":"<code>WELCOME = f'{dashes}{''}Welcome to the Deep Search Toolkit{dashes}'</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines.dashes","title":"<code>dashes = f'{'-' * 86}'</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines.progressbar","title":"<code>progressbar = ProgressBarParameters()</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines.progressbar_length","title":"<code>progressbar_length = 30</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines.ProgressBarParameters","title":"<code>ProgressBarParameters</code>  <code>dataclass</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines.ProgressBarParameters.bar_format","title":"<code>bar_format = '{l_bar}{bar:%d}{r_bar}{bar:-10b}' % progressbar_length</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines.ProgressBarParameters.colour","title":"<code>colour = '#0f62fe'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines.ProgressBarParameters.padding","title":"<code>padding = 22</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.common_routines.ProgressBarParameters.__init__","title":"<code>__init__()</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.convert","title":"<code>convert</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.convert.TASK_STOP_STATUS","title":"<code>TASK_STOP_STATUS = ['SUCCESS', 'FAILURE']</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.convert.logger","title":"<code>logger = logging.getLogger(__name__)</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.convert.check_cps_single_task_status","title":"<code>check_cps_single_task_status(sw_api, cps_proj_key, task_id, wait=2)</code>","text":"<p>Check cps status of individual tasks.</p>"},{"location":"api-reference/#deepsearch.documents.core.convert.check_cps_status_running_tasks","title":"<code>check_cps_status_running_tasks(api, cps_proj_key, task_ids, progress_bar=False)</code>","text":"<p>Check status of multiple running cps tasks and optionally display progress with progress bar.</p>"},{"location":"api-reference/#deepsearch.documents.core.convert.download_converted_documents","title":"<code>download_converted_documents(result_dir, download_urls, progress_bar=False)</code>","text":"<p>Download converted documents.</p>"},{"location":"api-reference/#deepsearch.documents.core.convert.download_converted_documents--input","title":"Input","text":"path <p>directory for saving converted json doc</p>"},{"location":"api-reference/#deepsearch.documents.core.convert.get_wait_task_result","title":"<code>get_wait_task_result(sw_api, cps_proj_key, task_id, wait=2)</code>","text":"<p>Wait and get task result that.</p>"},{"location":"api-reference/#deepsearch.documents.core.convert.make_payload","title":"<code>make_payload(url, conversion_settings)</code>","text":"<p>Create payload for requesting conversion</p>"},{"location":"api-reference/#deepsearch.documents.core.convert.send_file_for_conversion","title":"<code>send_file_for_conversion(api, cps_proj_key, source_path, conversion_settings, progress_bar=False)</code>","text":"<p>Send file for conversion.</p>"},{"location":"api-reference/#deepsearch.documents.core.convert.send_url_for_conversion","title":"<code>send_url_for_conversion(api, cps_proj_key, url, conversion_settings, progress_bar=False)</code>","text":"<p>Send online document for conversion.</p>"},{"location":"api-reference/#deepsearch.documents.core.convert.submit_conversion_payload","title":"<code>submit_conversion_payload(api, cps_proj_key, url, conversion_settings)</code>","text":"<p>Convert an online pdf using DeepSearch Technology.</p>"},{"location":"api-reference/#deepsearch.documents.core.create_report","title":"<code>create_report</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.create_report.logger","title":"<code>logger = logging.getLogger(__name__)</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.create_report.generate_report_csv","title":"<code>generate_report_csv(task_result, task_id, result_dir, progress_bar=False)</code>","text":"<p>Generate report of a document conversion task id and saves in a csv file</p>"},{"location":"api-reference/#deepsearch.documents.core.export","title":"<code>export</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML","title":"<code>JsonToHTML</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.__init__","title":"<code>__init__()</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.clean","title":"<code>clean(data, escape=True)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.enum_has_ids","title":"<code>enum_has_ids(enums)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.execute","title":"<code>execute(data)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.get_body_new","title":"<code>get_body_new(data)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.get_page","title":"<code>get_page(item)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.get_refs","title":"<code>get_refs(ref)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.get_style","title":"<code>get_style(item)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.get_tablecell_span","title":"<code>get_tablecell_span(cell, ix)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.get_title","title":"<code>get_title(data)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.make_bbox","title":"<code>make_bbox(page, bbox_rect)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.make_bbox_dict","title":"<code>make_bbox_dict(page, bbox_rect)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.split_item_in_boxes","title":"<code>split_item_in_boxes(item)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.template","title":"<code>template()</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.write_enum","title":"<code>write_enum(item)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.write_table","title":"<code>write_table(item)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.JsonToHTML.write_table_simple","title":"<code>write_table_simple(item)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.export_to_html","title":"<code>export_to_html(document)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.export.export_to_markdown","title":"<code>export_to_markdown(document)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.input_process","title":"<code>input_process</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.input_process.process_local_input","title":"<code>process_local_input(api, cps_proj_key, source_path, conversion_settings, progress_bar=False, export_md=False)</code>","text":"<p>Classify the user provided local input and take appropriate action.</p>"},{"location":"api-reference/#deepsearch.documents.core.input_process.process_url_input","title":"<code>process_url_input(api, cps_proj_key, url, conversion_settings, progress_bar=False, export_md=False)</code>","text":"<p>Classify user provided url(s) and take appropriate action.</p>"},{"location":"api-reference/#deepsearch.documents.core.lookup","title":"<code>lookup</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.lookup.EntitiesLookup","title":"<code>EntitiesLookup</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.lookup.EntitiesLookup.document","title":"<code>document = document</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.lookup.EntitiesLookup.__init__","title":"<code>__init__(document)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.lookup.EntitiesLookup.get","title":"<code>get(*, entity_type, entity)</code>","text":"<p>Lookup where a given entity is mentioned in a document.</p>"},{"location":"api-reference/#deepsearch.documents.core.main","title":"<code>main</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.main.convert_documents","title":"<code>convert_documents(proj_key, api, url=None, source_path=None, conversion_settings=None, progress_bar=False, export_md=False)</code>","text":"<p>Document conversion via Deep Search Technology. Function to orchestrate document conversion.</p>"},{"location":"api-reference/#deepsearch.documents.core.main.convert_documents--inputs","title":"Inputs","text":"<p>proj_key : string [REQUIRED] Your DeepSearch CPS Project Key. Contact DeepSearch Developers to request one.</p> <p>url : string [OPTIONAL] For converting documents from the web, please provide a single url.</p> <p>source_file : path [OPTIONAL] For converting local files, please provide absolute path to file or to directory containing multiple files.</p> <p>progress_bar : Boolean (default is False in code, True in CLI) Show progress bar for processing, submitting, converting input and downloading converted document.</p> <p>NOTE: Either url or source_path should be supplied.</p>"},{"location":"api-reference/#deepsearch.documents.core.models","title":"<code>models</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ExportTarget","title":"<code>ExportTarget = Union[ZipTarget, MongoS3Target, ElasticS3Target, COSTarget]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.COSTarget","title":"<code>COSTarget</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.COSTarget.add_annotations","title":"<code>add_annotations = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.COSTarget.add_raw_pages","title":"<code>add_raw_pages = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.COSTarget.coordinates","title":"<code>coordinates</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.COSTarget.type","title":"<code>type = 'cos'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ConversionSettings","title":"<code>ConversionSettings</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.ConversionSettings.ocr","title":"<code>ocr = OCROptions()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ConversionSettings.table_structure","title":"<code>table_structure = TableStructureOptions()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.DocumentExistsInTargetAction","title":"<code>DocumentExistsInTargetAction</code>","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>What to do if the document already exists on the target. - <code>replace</code> will replace the document, destroying any external modifications. - <code>skip</code> will not touch the document on the target, leaving it as-is. Using <code>skip</code> will incur in a performance increase, however, if the document is modified externally, CCS will not update it back to the original state.</p>"},{"location":"api-reference/#deepsearch.documents.core.models.DocumentExistsInTargetAction.REPLACE","title":"<code>REPLACE = 'replace'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.DocumentExistsInTargetAction.SKIP","title":"<code>SKIP = 'skip'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticIndexCoordinates","title":"<code>ElasticIndexCoordinates</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.ElasticIndexCoordinates.ca_certificate_base64","title":"<code>ca_certificate_base64 = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticIndexCoordinates.dangerously_disable_ssl_validation","title":"<code>dangerously_disable_ssl_validation = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticIndexCoordinates.hosts","title":"<code>hosts</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticIndexCoordinates.index","title":"<code>index</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3Target","title":"<code>ElasticS3Target</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3Target.add_annotations","title":"<code>add_annotations = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3Target.add_cells","title":"<code>add_cells = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3Target.add_raw_pages","title":"<code>add_raw_pages = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3Target.coordinates","title":"<code>coordinates</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3Target.escape_ref_fields","title":"<code>escape_ref_fields = Field(default=True, description='If true, `$ref` fields are renamed to `__ref`. This allows the data to then be written into a MongoDB collection.')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3Target.if_document_exists","title":"<code>if_document_exists = DocumentExistsInTargetAction.REPLACE</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3Target.type","title":"<code>type = 'elastic_s3'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3TargetCoordinates","title":"<code>ElasticS3TargetCoordinates</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3TargetCoordinates.elastic","title":"<code>elastic</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ElasticS3TargetCoordinates.s3","title":"<code>s3 = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.MongoCollectionCoordinates","title":"<code>MongoCollectionCoordinates</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.MongoCollectionCoordinates.collection","title":"<code>collection</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.MongoCollectionCoordinates.database","title":"<code>database</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.MongoCollectionCoordinates.uri","title":"<code>uri</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.MongoS3Target","title":"<code>MongoS3Target</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.MongoS3Target.coordinates","title":"<code>coordinates</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.MongoS3Target.if_document_exists","title":"<code>if_document_exists = DocumentExistsInTargetAction.REPLACE</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.MongoS3Target.type","title":"<code>type = 'mongo_s3'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.MongoS3TargetCoordinates","title":"<code>MongoS3TargetCoordinates</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Coordinates to a Mongo collection, and optionally, an S3 bucket</p>"},{"location":"api-reference/#deepsearch.documents.core.models.MongoS3TargetCoordinates.mongo","title":"<code>mongo</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.MongoS3TargetCoordinates.s3","title":"<code>s3 = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.OCROptions","title":"<code>OCROptions</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.OCROptions.do_ocr","title":"<code>do_ocr = True</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.OCROptions.kind","title":"<code>kind = 'easyocr'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates","title":"<code>S3Coordinates</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.access_key","title":"<code>access_key</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.bucket","title":"<code>bucket</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.external_endpoint","title":"<code>external_endpoint = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.host","title":"<code>host</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.key_infix_format","title":"<code>key_infix_format = Field('', description=dedent('\\n            Control the infix of the object keys that are saved on the document\\'s `_s3_data`, after `key_prefix`,\\n            and before `PDFDocuments/{document_hash}.pdf` or `PDFPages/{page_hash}.pdf`.\\n\\n            By default, the infix is empty.\\n            For using the name of the index in the coordinates, you can use `key_infix_format = \"{index_name}\"`.\\n\\n            For example, if:\\n\\n            ```\\n            key_prefix = \"my_prefix/\"\\n            key_infix_format = \"{index_name}\"\\n            index_name = \"my_elastic_index\"\\n\\n            document_hash = \"123\"\\n            ```\\n\\n            Then, the document above would be uploaded to: `my_prefix/my_elastic_index/PDFDocuments/123.pdf`.\\n\\n            If one were to set `key_infix_format = \"\"`, it would be uploaded to `my_prefix/PDFDocuments/123.pdf`.\\n\\n            If one were to set `key_infix_format = \"foo\"`, it would be uploaded to `my_prefix/foo/PDFDocuments/123.pdf`\\n\\n            Finally, one can combine `{index_name}` with constants and even path separators.\\n\\n            So, `{index_name}/test` would produce `my_prefix/my_elastic_index/test/PDFDocuments/123.pdf`\\n            '))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.key_prefix","title":"<code>key_prefix = ''</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.location","title":"<code>location</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.port","title":"<code>port</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.secret_key","title":"<code>secret_key</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.ssl","title":"<code>ssl</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.S3Coordinates.verify_ssl","title":"<code>verify_ssl</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.TableStructureOptions","title":"<code>TableStructureOptions</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.TableStructureOptions.do_table_structure","title":"<code>do_table_structure = True</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.TableStructureOptions.table_structure_mode","title":"<code>table_structure_mode = 'fast'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.TargetSettings","title":"<code>TargetSettings</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.documents.core.models.TargetSettings.add_annotations","title":"<code>add_annotations = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.TargetSettings.add_raw_pages","title":"<code>add_raw_pages = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.TargetSettings.check_raw_or_ann","title":"<code>check_raw_or_ann()</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ZipPackageContentType","title":"<code>ZipPackageContentType</code>","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <p>Specify the content type for the documents in the Zip file.</p>"},{"location":"api-reference/#deepsearch.documents.core.models.ZipPackageContentType.HTML","title":"<code>HTML = 'html'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ZipPackageContentType.JSON","title":"<code>JSON = 'json'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ZipTarget","title":"<code>ZipTarget</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Specify how the documents should be exported to a Zip file. If the [coordinates] are not specified, the project's coordinates will be used.</p>"},{"location":"api-reference/#deepsearch.documents.core.models.ZipTarget.add_cells","title":"<code>add_cells = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ZipTarget.content_type","title":"<code>content_type = ZipPackageContentType.JSON</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.models.ZipTarget.type","title":"<code>type = 'zip'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.render","title":"<code>render</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.render.get_figure_svg","title":"<code>get_figure_svg(document, figure)</code>","text":"<p>Generates a SVG which crops the figure from the image of the document page.</p>"},{"location":"api-reference/#deepsearch.documents.core.render.get_page_svg_with_item","title":"<code>get_page_svg_with_item(document, item)</code>","text":"<p>Generates a SVG which overlays the bounding-box of the item with the image of the page.</p>"},{"location":"api-reference/#deepsearch.documents.core.results","title":"<code>results</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.results.DocumentConversionResult","title":"<code>DocumentConversionResult</code>","text":"<p>An instance of DocumentConversionResult is generated when document conversion is requested.</p>"},{"location":"api-reference/#deepsearch.documents.core.results.DocumentConversionResult.export_md","title":"<code>export_md = export_md</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.results.DocumentConversionResult.proj_key","title":"<code>proj_key = proj_key</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.results.DocumentConversionResult.result","title":"<code>result = result</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.results.DocumentConversionResult.task_id","title":"<code>task_id = task_id</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.results.DocumentConversionResult.__init__","title":"<code>__init__(proj_key, task_id, result, api, source_path=None, source_url=None, batched_files=None, export_md=False)</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.results.DocumentConversionResult.download_all","title":"<code>download_all(result_dir, progress_bar=False)</code>","text":"<p>Download all converted documents.</p>"},{"location":"api-reference/#deepsearch.documents.core.results.DocumentConversionResult.download_all--input","title":"Input","text":"<p>result_dir : path     local directory where converted documents will be saved progress_bar: boolean, optional (default = False)     shows progress bar is True</p>"},{"location":"api-reference/#deepsearch.documents.core.results.DocumentConversionResult.generate_report","title":"<code>generate_report(result_dir, progress_bar=False)</code>","text":"<p>Saves a csv report file for detailed information about the document conversion job. Returns a dictionary object containing counts of files/urls converted.</p>"},{"location":"api-reference/#deepsearch.documents.core.utils","title":"<code>utils</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.utils.ALLOWED_FILE_EXTENSIONS","title":"<code>ALLOWED_FILE_EXTENSIONS = ['.pdf', '.jpg', '.jpeg', '.tiff', '.tif', '.png', '.gif']</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.documents.core.utils.batch_single_files","title":"<code>batch_single_files(source_path, root_dir, progress_bar=False)</code>","text":"<p>Batch individual input files into zip files.</p> <p>Output     bfiles: List[List[str]]     outer list corresponds to each batch     inner list corresponds to individual file in a batch</p>"},{"location":"api-reference/#deepsearch.documents.core.utils.cleanup","title":"<code>cleanup(root_dir)</code>","text":"<p>Clean temporarily created zip batches.</p>"},{"location":"api-reference/#deepsearch.documents.core.utils.create_root_dir","title":"<code>create_root_dir()</code>","text":"<p>Creates root directory labelled with timestamp</p>"},{"location":"api-reference/#deepsearch.documents.core.utils.download_url","title":"<code>download_url(url, save_path, chunk_size=128)</code>","text":"<p>Download contents from a url.</p>"},{"location":"api-reference/#deepsearch.documents.core.utils.read_lines","title":"<code>read_lines(file_path)</code>","text":"<p>Returns list of lines from input file.</p>"},{"location":"api-reference/#deepsearch.documents.core.utils.write_taskids","title":"<code>write_taskids(result_dir, list_to_write)</code>","text":"<p>Write lines in result_dir</p>"},{"location":"api-reference/#deepsearch.model","title":"<code>model</code>","text":""},{"location":"api-reference/#deepsearch.model.base","title":"<code>base</code>","text":""},{"location":"api-reference/#deepsearch.model.base.controller","title":"<code>controller</code>","text":""},{"location":"api-reference/#deepsearch.model.base.controller.BaseController","title":"<code>BaseController</code>","text":"<p>               Bases: <code>ABC</code></p>"},{"location":"api-reference/#deepsearch.model.base.controller.BaseController.dispatch_predict","title":"<code>dispatch_predict(spec)</code>  <code>abstractmethod</code>","text":""},{"location":"api-reference/#deepsearch.model.base.controller.BaseController.get_info","title":"<code>get_info()</code>  <code>abstractmethod</code>","text":""},{"location":"api-reference/#deepsearch.model.base.controller.BaseController.get_kind","title":"<code>get_kind()</code>  <code>abstractmethod</code>","text":""},{"location":"api-reference/#deepsearch.model.base.controller.BaseController.get_model_exec_time","title":"<code>get_model_exec_time()</code>","text":""},{"location":"api-reference/#deepsearch.model.base.controller.BaseController.get_model_kind","title":"<code>get_model_kind()</code>","text":""},{"location":"api-reference/#deepsearch.model.base.controller.BaseController.get_model_name","title":"<code>get_model_name()</code>","text":""},{"location":"api-reference/#deepsearch.model.base.model","title":"<code>model</code>","text":""},{"location":"api-reference/#deepsearch.model.base.model.BaseDSModel","title":"<code>BaseDSModel</code>","text":"<p>               Bases: <code>ABC</code></p>"},{"location":"api-reference/#deepsearch.model.base.model.BaseDSModel.get_config","title":"<code>get_config()</code>  <code>abstractmethod</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types","title":"<code>types</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.Annotations","title":"<code>Annotations</code>","text":"<p>               Bases: <code>StrictModel</code></p>"},{"location":"api-reference/#deepsearch.model.base.types.Annotations.deepsearch_res_ibm_com_x_attempt_number","title":"<code>deepsearch_res_ibm_com_x_attempt_number = Field(..., alias='deepsearch.res.ibm.com/x-attempt-number')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.Annotations.deepsearch_res_ibm_com_x_deadline","title":"<code>deepsearch_res_ibm_com_x_deadline = Field(..., alias='deepsearch.res.ibm.com/x-deadline')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.Annotations.deepsearch_res_ibm_com_x_max_attempts","title":"<code>deepsearch_res_ibm_com_x_max_attempts = Field(..., alias='deepsearch.res.ibm.com/x-max-attempts')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.Annotations.deepsearch_res_ibm_com_x_transaction_id","title":"<code>deepsearch_res_ibm_com_x_transaction_id = Field(..., alias='deepsearch.res.ibm.com/x-transaction-id')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseAppPredInput","title":"<code>BaseAppPredInput</code>","text":"<p>               Bases: <code>StrictModel</code></p>"},{"location":"api-reference/#deepsearch.model.base.types.BaseAppPredInput.apiVersion","title":"<code>apiVersion</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseAppPredInput.kind","title":"<code>kind</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseAppPredInput.metadata","title":"<code>metadata</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseAppPredInput.spec","title":"<code>spec</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseModelConfig","title":"<code>BaseModelConfig</code>","text":"<p>               Bases: <code>BaseModelMetadata</code></p>"},{"location":"api-reference/#deepsearch.model.base.types.BaseModelConfig.kind","title":"<code>kind</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseModelMetadata","title":"<code>BaseModelMetadata</code>","text":"<p>               Bases: <code>StrictModel</code></p>"},{"location":"api-reference/#deepsearch.model.base.types.BaseModelMetadata.author","title":"<code>author = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseModelMetadata.description","title":"<code>description = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseModelMetadata.expected_compute_time","title":"<code>expected_compute_time = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseModelMetadata.name","title":"<code>name</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseModelMetadata.url","title":"<code>url = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.BaseModelMetadata.version","title":"<code>version</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.CtrlInfoOutput","title":"<code>CtrlInfoOutput</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.model.base.types.CtrlInfoOutput.definitions","title":"<code>definitions</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.CtrlInfoOutputDefs","title":"<code>CtrlInfoOutputDefs</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.model.base.types.CtrlInfoOutputDefs.apiVersion","title":"<code>apiVersion</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.CtrlInfoOutputDefs.kind","title":"<code>kind</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.CtrlInfoOutputDefs.spec","title":"<code>spec</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.Kind","title":"<code>Kind</code>","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p>"},{"location":"api-reference/#deepsearch.model.base.types.Kind.NLPModel","title":"<code>NLPModel = 'NLPModel'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.Kind.QAGenModel","title":"<code>QAGenModel = 'QAGenModel'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.Metadata","title":"<code>Metadata</code>","text":"<p>               Bases: <code>StrictModel</code></p>"},{"location":"api-reference/#deepsearch.model.base.types.Metadata.annotations","title":"<code>annotations</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.ModelInfoOutputDefsSpec","title":"<code>ModelInfoOutputDefsSpec</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.model.base.types.ModelInfoOutputDefsSpec.definition","title":"<code>definition</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.ModelInfoOutputDefsSpec.metadata","title":"<code>metadata</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.base.types.StrictModel","title":"<code>StrictModel</code>","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"api-reference/#deepsearch.model.examples","title":"<code>examples</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.dummy_nlp_annotator","title":"<code>dummy_nlp_annotator</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.dummy_nlp_annotator.main","title":"<code>main</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.dummy_nlp_annotator.main.run","title":"<code>run()</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.dummy_nlp_annotator.model","title":"<code>model</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.dummy_nlp_annotator.model.DummyNLPAnnotator","title":"<code>DummyNLPAnnotator</code>","text":"<p>               Bases: <code>BaseNLPModel</code></p> <code>__init__()</code> \u00b6 <code>annotate_batched_entities(object_type, items, entity_names)</code> \u00b6 <code>annotate_batched_properties(object_type, items, entities, property_names)</code> \u00b6 <code>annotate_batched_relationships(object_type, items, entities, relationship_names)</code> \u00b6 <code>get_nlp_config()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.examples.dummy_qa_generator","title":"<code>dummy_qa_generator</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.dummy_qa_generator.main","title":"<code>main</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.dummy_qa_generator.main.run","title":"<code>run()</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.dummy_qa_generator.model","title":"<code>model</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.dummy_qa_generator.model.DummyQAGenerator","title":"<code>DummyQAGenerator</code>","text":"<p>               Bases: <code>BaseQAGenerator</code></p> <p>A dummy QA generator which answers a question with the question itself.</p> <code>generate_answers(texts, extras)</code> \u00b6 <p>Just answers with the question itself. Args:     texts: a list of context, question pairs.     extras: any extras to pass.</p> <code>get_qagen_config()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator","title":"<code>simple_geo_nlp_annotator</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.entities","title":"<code>entities</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.entities.cities_annotator","title":"<code>cities_annotator</code>","text":"<code>CitiesAnnotator</code> \u00b6 <p>               Bases: <code>DictionaryTextEntityAnnotator</code></p> <code>__init__()</code> \u00b6 <code>description()</code> \u00b6 <code>key()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.entities.common","title":"<code>common</code>","text":"<code>base_text_entity_annotator</code> \u00b6 <code>BaseTextEntityAnnotator</code> \u00b6 <code>annotate_entities_text(text)</code> <code>abstractmethod</code> \u00b6 <code>description()</code> <code>abstractmethod</code> \u00b6 <code>initialize()</code> \u00b6 <code>key()</code> <code>abstractmethod</code> \u00b6 <code>dictionary_text_entity_annotator</code> \u00b6 <code>logger = logging.getLogger('cps-nlp')</code> <code>module-attribute</code> \u00b6 <code>Config</code> <code>dataclass</code> \u00b6 <code>dictionary_filename</code> <code>instance-attribute</code> \u00b6 <code>__init__(dictionary_filename)</code> \u00b6 <code>DictionaryTextEntityAnnotator</code> \u00b6 <p>               Bases: <code>BaseTextEntityAnnotator</code></p> <code>config = config</code> <code>instance-attribute</code> \u00b6 <code>__init__(config)</code> \u00b6 <code>annotate_entities_text(text)</code> \u00b6 <code>initialize()</code> \u00b6 <code>utils</code> \u00b6 <code>resources_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../resources'))</code> <code>module-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.entities.countries_annotator","title":"<code>countries_annotator</code>","text":"<code>CountriesAnnotator</code> \u00b6 <p>               Bases: <code>DictionaryTextEntityAnnotator</code></p> <code>__init__()</code> \u00b6 <code>description()</code> \u00b6 <code>key()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.entities.provincies_annotator","title":"<code>provincies_annotator</code>","text":"<code>ProvinciesAnnotator</code> \u00b6 <p>               Bases: <code>DictionaryTextEntityAnnotator</code></p> <code>__init__()</code> \u00b6 <code>description()</code> \u00b6 <code>key()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.main","title":"<code>main</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.main.run","title":"<code>run()</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.model","title":"<code>model</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.model.logger","title":"<code>logger = logging.getLogger('cps-nlp')</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.model.SimpleGeoNLPAnnotator","title":"<code>SimpleGeoNLPAnnotator</code>","text":"<p>               Bases: <code>BaseNLPModel</code></p> <code>entity_names = list(self._ent_annots.keys())</code> <code>instance-attribute</code> \u00b6 <code>property_names = []</code> <code>instance-attribute</code> \u00b6 <code>relationship_names = list(self._rel_annots.keys())</code> <code>instance-attribute</code> \u00b6 <code>__init__()</code> \u00b6 <code>annotate_batched_entities(object_type, items, entity_names)</code> \u00b6 <code>annotate_batched_properties(object_type, items, entities, property_names)</code> \u00b6 <code>annotate_batched_relationships(object_type, items, entities, relationship_names)</code> \u00b6 <code>get_nlp_config()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.relationships","title":"<code>relationships</code>","text":""},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.relationships.cities_to_countries_annotator","title":"<code>cities_to_countries_annotator</code>","text":"<code>CitiesToCountriesAnnotator</code> \u00b6 <p>               Bases: <code>MultiEntitiesRelationshipAnnotator</code></p> <code>__init__()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.relationships.cities_to_provincies_annotator","title":"<code>cities_to_provincies_annotator</code>","text":"<code>CitiesToProvinciesAnnotator</code> \u00b6 <p>               Bases: <code>MultiEntitiesRelationshipAnnotator</code></p> <code>__init__()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.relationships.common","title":"<code>common</code>","text":"<code>base_text_relationship_annotator</code> \u00b6 <code>BaseTextRelationshipAnnotator</code> \u00b6 <code>annotate_relationships_text(text, entity_map, relationship_name)</code> <code>abstractmethod</code> \u00b6 <code>columns()</code> <code>abstractmethod</code> \u00b6 <code>description()</code> <code>abstractmethod</code> \u00b6 <code>key()</code> <code>abstractmethod</code> \u00b6 <code>multi_entities_relationship_annotator</code> \u00b6 <code>logger = logging.getLogger('cps-nlp')</code> <code>module-attribute</code> \u00b6 <code>Config</code> <code>dataclass</code> \u00b6 <code>entities</code> <code>instance-attribute</code> \u00b6 <code>__init__(entities)</code> \u00b6 <code>MultiEntitiesRelationshipAnnotator</code> \u00b6 <p>               Bases: <code>BaseTextRelationshipAnnotator</code></p> <p>Create a relationship if all entitiy types are in the given text input.</p> <code>__init__(config)</code> \u00b6 <code>annotate_relationships_text(text, entity_map, relationship_name)</code> \u00b6 <code>columns()</code> \u00b6 <code>description()</code> \u00b6 <code>key()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.examples.simple_geo_nlp_annotator.relationships.provincies_to_countries_annotator","title":"<code>provincies_to_countries_annotator</code>","text":"<code>ProvinciesToCountriesAnnotator</code> \u00b6 <p>               Bases: <code>MultiEntitiesRelationshipAnnotator</code></p> <code>__init__()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds","title":"<code>kinds</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.nlp","title":"<code>nlp</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.nlp.controller","title":"<code>controller</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.nlp.controller.NLPController","title":"<code>NLPController</code>","text":"<p>               Bases: <code>BaseController</code></p> <code>__init__(model)</code> \u00b6 <code>dispatch_predict(spec)</code> \u00b6 <code>get_info()</code> \u00b6 <code>get_kind()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.model","title":"<code>model</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.nlp.model.BaseNLPModel","title":"<code>BaseNLPModel</code>","text":"<p>               Bases: <code>BaseDSModel</code></p> <code>annotate_batched_entities(object_type, items, entity_names)</code> <code>abstractmethod</code> \u00b6 <code>annotate_batched_properties(object_type, items, entities, property_names)</code> <code>abstractmethod</code> \u00b6 <code>annotate_batched_relationships(object_type, items, entities, relationship_names)</code> <code>abstractmethod</code> \u00b6 <code>get_config()</code> \u00b6 <code>get_nlp_config()</code> <code>abstractmethod</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types","title":"<code>types</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.AnnotateEntitiesOutput","title":"<code>AnnotateEntitiesOutput = List[Dict[str, List[AnnotateEntitiesEntry]]]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.AnnotatePropertiesOutput","title":"<code>AnnotatePropertiesOutput = List[Dict]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.AnnotateRelationshipsOutput","title":"<code>AnnotateRelationshipsOutput = List[Dict[str, AnnotateRelationshipsEntry]]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPCtrlPredOutput","title":"<code>NLPCtrlPredOutput = Union[NLPEntsCtrlPredOuput, NLPRelsCtrlPredOutput, NLPPropsCtrlPredOutput]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPReqSpec","title":"<code>NLPReqSpec = Union[NLPEntitiesReqSpec, NLPRelationshipsReqSpec, NLPPropertiesReqSpec]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.AnnotateEntitiesEntry","title":"<code>AnnotateEntitiesEntry</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>match</code> <code>instance-attribute</code> \u00b6 <code>original</code> <code>instance-attribute</code> \u00b6 <code>range</code> <code>instance-attribute</code> \u00b6 <code>type</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.AnnotateRelationshipsEntry","title":"<code>AnnotateRelationshipsEntry</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>data</code> <code>instance-attribute</code> \u00b6 <code>header</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.AnnotationLabels","title":"<code>AnnotationLabels</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>entities</code> <code>instance-attribute</code> \u00b6 <code>properties</code> <code>instance-attribute</code> \u00b6 <code>relationships</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.EntityLabel","title":"<code>EntityLabel</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>description</code> <code>instance-attribute</code> \u00b6 <code>key</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.FindEntitiesText","title":"<code>FindEntitiesText</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>entityNames = None</code> <code>class-attribute</code> <code>instance-attribute</code> \u00b6 <code>objectType</code> <code>instance-attribute</code> \u00b6 <code>texts</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.FindPropertiesText","title":"<code>FindPropertiesText</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>entities = None</code> <code>class-attribute</code> <code>instance-attribute</code> \u00b6 <code>objectType</code> <code>instance-attribute</code> \u00b6 <code>propertyNames = None</code> <code>class-attribute</code> <code>instance-attribute</code> \u00b6 <code>texts</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.FindRelationshipsText","title":"<code>FindRelationshipsText</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>entities</code> <code>instance-attribute</code> \u00b6 <code>objectType</code> <code>instance-attribute</code> \u00b6 <code>relationshipNames = None</code> <code>class-attribute</code> <code>instance-attribute</code> \u00b6 <code>texts</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPAppPredInput","title":"<code>NLPAppPredInput</code>","text":"<p>               Bases: <code>BaseAppPredInput</code></p> <code>kind</code> <code>instance-attribute</code> \u00b6 <code>spec</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPConfig","title":"<code>NLPConfig</code>","text":"<p>               Bases: <code>BaseModelConfig</code></p> <code>kind</code> <code>instance-attribute</code> \u00b6 <code>labels</code> <code>instance-attribute</code> \u00b6 <code>supported_types</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPEntitiesReqSpec","title":"<code>NLPEntitiesReqSpec</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>findEntities</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPEntsCtrlPredOuput","title":"<code>NLPEntsCtrlPredOuput</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>entities</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPInfoOutput","title":"<code>NLPInfoOutput</code>","text":"<p>               Bases: <code>CtrlInfoOutput</code></p> <code>definitions</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPInfoOutputDefinitions","title":"<code>NLPInfoOutputDefinitions</code>","text":"<p>               Bases: <code>CtrlInfoOutputDefs</code></p> <code>kind</code> <code>instance-attribute</code> \u00b6 <code>spec</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPInfoOutputDefinitionsSpec","title":"<code>NLPInfoOutputDefinitionsSpec</code>","text":"<p>               Bases: <code>ModelInfoOutputDefsSpec</code></p> <code>metadata</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPModelMetadata","title":"<code>NLPModelMetadata</code>","text":"<p>               Bases: <code>BaseModelMetadata</code></p> <code>supported_object_types</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPPropertiesReqSpec","title":"<code>NLPPropertiesReqSpec</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>findProperties</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPPropsCtrlPredOutput","title":"<code>NLPPropsCtrlPredOutput</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>properties</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPRelationshipsReqSpec","title":"<code>NLPRelationshipsReqSpec</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>findRelationships</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPRelsCtrlPredOutput","title":"<code>NLPRelsCtrlPredOutput</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>relationships</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.NLPType","title":"<code>NLPType</code>","text":"<p>               Bases: <code>str</code>, <code>Enum</code></p> <code>text = 'text'</code> <code>class-attribute</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.PropertyLabel","title":"<code>PropertyLabel</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>description</code> <code>instance-attribute</code> \u00b6 <code>key</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.RelationshipColumn","title":"<code>RelationshipColumn</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>entities</code> <code>instance-attribute</code> \u00b6 <code>key</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.nlp.types.RelationshipLabel","title":"<code>RelationshipLabel</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>columns</code> <code>instance-attribute</code> \u00b6 <code>description</code> <code>instance-attribute</code> \u00b6 <code>key</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen","title":"<code>qagen</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.qagen.controller","title":"<code>controller</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.qagen.controller.QAGenController","title":"<code>QAGenController</code>","text":"<p>               Bases: <code>BaseController</code></p> <code>__init__(model)</code> \u00b6 <code>dispatch_predict(spec)</code> \u00b6 <code>get_info()</code> \u00b6 <code>get_kind()</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen.model","title":"<code>model</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.qagen.model.BaseQAGenerator","title":"<code>BaseQAGenerator</code>","text":"<p>               Bases: <code>BaseDSModel</code></p> <code>generate_answers(texts, extras)</code> <code>abstractmethod</code> \u00b6 <code>get_config()</code> \u00b6 <code>get_qagen_config()</code> <code>abstractmethod</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen.types","title":"<code>types</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.qagen.types.GenerateAnswersOutput","title":"<code>GenerateAnswersOutput = List[GenerateAnswersOutEntry]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.kinds.qagen.types.ContextEntry","title":"<code>ContextEntry</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>representation_type</code> <code>instance-attribute</code> \u00b6 <code>text</code> <code>instance-attribute</code> \u00b6 <code>type</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen.types.GenerateAnswers","title":"<code>GenerateAnswers</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>contexts</code> <code>instance-attribute</code> \u00b6 <code>extras = None</code> <code>class-attribute</code> <code>instance-attribute</code> \u00b6 <code>questions</code> <code>instance-attribute</code> \u00b6 <code>check_lengths_match(values)</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen.types.GenerateAnswersOutEntry","title":"<code>GenerateAnswersOutEntry</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>answer</code> <code>instance-attribute</code> \u00b6 <code>metadata</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen.types.QAGenAppPredInput","title":"<code>QAGenAppPredInput</code>","text":"<p>               Bases: <code>BaseAppPredInput</code></p> <code>kind</code> <code>instance-attribute</code> \u00b6 <code>spec</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen.types.QAGenConfig","title":"<code>QAGenConfig</code>","text":"<p>               Bases: <code>BaseModelConfig</code></p> <code>kind</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen.types.QAGenCtrlPredOutput","title":"<code>QAGenCtrlPredOutput</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>answers</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen.types.QAGenInfoOutput","title":"<code>QAGenInfoOutput</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>definitions</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen.types.QAGenInfoOutputDefinitions","title":"<code>QAGenInfoOutputDefinitions</code>","text":"<p>               Bases: <code>CtrlInfoOutputDefs</code></p> <code>kind</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.kinds.qagen.types.QAGenReqSpec","title":"<code>QAGenReqSpec</code>","text":"<p>               Bases: <code>StrictModel</code></p> <code>generateAnswers</code> <code>instance-attribute</code> \u00b6"},{"location":"api-reference/#deepsearch.model.server","title":"<code>server</code>","text":""},{"location":"api-reference/#deepsearch.model.server.config","title":"<code>config</code>","text":""},{"location":"api-reference/#deepsearch.model.server.config.Settings","title":"<code>Settings</code>","text":"<p>               Bases: <code>BaseSettings</code></p>"},{"location":"api-reference/#deepsearch.model.server.config.Settings.api_key","title":"<code>api_key</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.server.config.Settings.model_config","title":"<code>model_config = SettingsConfigDict(env_prefix='DS_MODEL_')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.server.controller_factory","title":"<code>controller_factory</code>","text":""},{"location":"api-reference/#deepsearch.model.server.controller_factory.ControllerFactory","title":"<code>ControllerFactory</code>","text":""},{"location":"api-reference/#deepsearch.model.server.controller_factory.ControllerFactory.create_controller","title":"<code>create_controller(model)</code>","text":""},{"location":"api-reference/#deepsearch.model.server.inference_types","title":"<code>inference_types</code>","text":""},{"location":"api-reference/#deepsearch.model.server.inference_types.AppModelInfoOutput","title":"<code>AppModelInfoOutput = Union[NLPInfoOutput, QAGenInfoOutput]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.server.inference_types.AppPredInput","title":"<code>AppPredInput = Union[NLPAppPredInput, QAGenAppPredInput]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.server.inference_types.CtrlPredInput","title":"<code>CtrlPredInput = Union[NLPReqSpec, QAGenReqSpec]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.server.inference_types.CtrlPredOutput","title":"<code>CtrlPredOutput = Union[NLPCtrlPredOutput, QAGenCtrlPredOutput]</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.server.model_app","title":"<code>model_app</code>","text":""},{"location":"api-reference/#deepsearch.model.server.model_app.logger","title":"<code>logger = logging.getLogger('cps-fastapi')</code>  <code>module-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.server.model_app.ModelApp","title":"<code>ModelApp</code>","text":""},{"location":"api-reference/#deepsearch.model.server.model_app.ModelApp.app","title":"<code>app = FastAPI()</code>  <code>instance-attribute</code>","text":""},{"location":"api-reference/#deepsearch.model.server.model_app.ModelApp.__init__","title":"<code>__init__(settings)</code>","text":""},{"location":"api-reference/#deepsearch.model.server.model_app.ModelApp.register_model","title":"<code>register_model(model, name=None, controller=None)</code>","text":"<p>Registers a model with the app.</p> <p>Parameters:</p> Name Type Description Default <code>model</code> <code>BaseDSModel</code> <p>the model to register.</p> required <code>name</code> <code>Optional[str]</code> <p>an optional name under which to register the model; if not set, the model's default name is used.</p> <code>None</code> <code>controller</code> <code>Optional[BaseController]</code> <p>an optional custom controller to use; if not set, the default controller for the kind is used.</p> <code>None</code>"},{"location":"api-reference/#deepsearch.model.server.model_app.ModelApp.run","title":"<code>run(host='127.0.0.1', port=8000, **kwargs)</code>","text":""},{"location":"api-reference/#deepsearch.plugins","title":"<code>plugins</code>","text":""},{"location":"api-reference/#deepsearch.query","title":"<code>query</code>","text":""},{"location":"cli-reference/","title":"CLI Reference","text":"<p>This page provides documentation for our command line tools.</p>"},{"location":"cli-reference/#app","title":"app","text":"<p>Usage:</p> <pre><code> [OPTIONS] COMMAND [ARGS]...\n</code></pre>"},{"location":"cli-reference/#artifacts","title":"artifacts","text":"<p>Manage artifacts</p> <p>Usage:</p> <pre><code> artifacts [OPTIONS] COMMAND [ARGS]...\n</code></pre>"},{"location":"cli-reference/#download","title":"download","text":"<p>Download an artifact to cache</p> <p>Usage:</p> <pre><code> artifacts download [OPTIONS] ARTIFACT_NAME\n</code></pre> <p>Options:</p> <pre><code>  ARTIFACT_NAME                   [required]\n  -i, --index TEXT                Artifact index path (default set via env var\n                                  DEEPSEARCH_ARTIFACT_INDEX, else current\n                                  working dir).\n  -c, --cache TEXT                Artifact cache path (default set via env var\n                                  DEEPSEARCH_ARTIFACT_CACHE, else platform-\n                                  specific).\n  -s, --hit-strategy [raise|pass|overwrite]\n                                  How to handle case of artifact being already\n                                  in cache.  [default: overwrite]\n  --unpack / --no-unpack          [default: unpack]\n  --progress-bar / --no-progress-bar\n                                  [default: progress-bar]\n</code></pre>"},{"location":"cli-reference/#download-all","title":"download-all","text":"<p>Download all artifacts to cache</p> <p>Usage:</p> <pre><code> artifacts download-all [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -i, --index TEXT                Artifact index path (default set via env var\n                                  DEEPSEARCH_ARTIFACT_INDEX, else current\n                                  working dir).\n  -c, --cache TEXT                Artifact cache path (default set via env var\n                                  DEEPSEARCH_ARTIFACT_CACHE, else platform-\n                                  specific).\n  -s, --hit-strategy [raise|pass|overwrite]\n                                  How to handle case of artifact being already\n                                  in cache.  [default: overwrite]\n  --unpack / --no-unpack          [default: unpack]\n  --progress-bar / --no-progress-bar\n                                  [default: progress-bar]\n</code></pre>"},{"location":"cli-reference/#list-cache","title":"list-cache","text":"<p>List artifacts in cache</p> <p>Usage:</p> <pre><code> artifacts list-cache [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -c, --cache TEXT  Artifact cache path (default set via env var\n                    DEEPSEARCH_ARTIFACT_CACHE, else platform-specific).\n</code></pre>"},{"location":"cli-reference/#list-index","title":"list-index","text":"<p>List artifacts in index</p> <p>Usage:</p> <pre><code> artifacts list-index [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -i, --index TEXT  Artifact index path (default set via env var\n                    DEEPSEARCH_ARTIFACT_INDEX, else current working dir).\n</code></pre>"},{"location":"cli-reference/#locate-cached-artifact","title":"locate-cached-artifact","text":"<p>Show path of a cached artifact</p> <p>Usage:</p> <pre><code> artifacts locate-cached-artifact [OPTIONS] ARTIFACT_NAME\n</code></pre> <p>Options:</p> <pre><code>  ARTIFACT_NAME     [required]\n  -c, --cache TEXT  Artifact cache path (default set via env var\n                    DEEPSEARCH_ARTIFACT_CACHE, else platform-specific).\n</code></pre>"},{"location":"cli-reference/#locate-default-cache","title":"locate-default-cache","text":"<p>Show cache path</p> <p>Usage:</p> <pre><code> artifacts locate-default-cache [OPTIONS]\n</code></pre>"},{"location":"cli-reference/#cps","title":"cps","text":"<p>Interact with DeepSearch CPS component</p> <p>Usage:</p> <pre><code> cps [OPTIONS] COMMAND [ARGS]...\n</code></pre>"},{"location":"cli-reference/#data-indices","title":"data-indices","text":"<p>Manage CPS data indices</p> <p>Usage:</p> <pre><code> cps data-indices [OPTIONS] COMMAND [ARGS]...\n</code></pre>"},{"location":"cli-reference/#add-attachment","title":"add-attachment","text":"<p>Add attachment to a index item</p> <p>Usage:</p> <pre><code> cps data-indices add-attachment [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT         Provide project key  [required]\n  -x, --index-key TEXT        index_key of data index  [required]\n  -d, --index_item_id TEXT    Index item ID  [required]\n  -i, --attachment-file PATH  Provide absolute path to local file.  [required]\n  -k, --attachment_key TEXT   Attachment key to put in index item  [default:\n                              usr_attachments]\n</code></pre>"},{"location":"cli-reference/#create","title":"create","text":"<p>Create data index in project</p> <p>Usage:</p> <pre><code> cps data-indices create [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT             Provide project key  [required]\n  -n, --name TEXT                 Name of data index  [required]\n  -d, -desc TEXT                  Describe your data index\n  --type [Document|DB Record|Generic|Experiment]\n                                  Type of Data Index  [default: Document]\n</code></pre>"},{"location":"cli-reference/#delete","title":"delete","text":"<p>Delete data index in a project</p> <p>Usage:</p> <pre><code> cps data-indices delete [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT   Provide project key  [required]\n  -x, --index-key TEXT  index_key of data index  [required]\n</code></pre>"},{"location":"cli-reference/#list","title":"list","text":"<p>List data indices in project</p> <p>Usage:</p> <pre><code> cps data-indices list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT        Provide project key  [required]\n  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#upload","title":"upload","text":"<p>Upload files/urls to index</p> <p>Usage:</p> <pre><code> cps data-indices upload [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT          Provide project key  [required]\n  -u, --url TEXT               Provide single url\n  -i, --input-file PATH        Provide absolute path to local file or\n                               directory containing pdf documents, zip files,\n                               or both.\n  -x, --index-key TEXT         index_key of data index  [required]\n  -c, --coordinates-file PATH  Provide absolute path to local json file\n                               containing coordinates of COS.\n  --conv-settings TEXT         Provide conversion settings to be used on local\n                               file upload\n  --target-settings TEXT       Provide target conversion settings to be used\n                               on local file upload\n</code></pre>"},{"location":"cli-reference/#elastic-data","title":"elastic-data","text":"<p>Manage Elastic data collections</p> <p>Usage:</p> <pre><code> cps elastic-data [OPTIONS] COMMAND [ARGS]...\n</code></pre>"},{"location":"cli-reference/#list_1","title":"list","text":"<p>List Elastic Data Collections</p> <p>Usage:</p> <pre><code> cps elastic-data list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --domain TEXT              [default: all]\n  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#kgs","title":"kgs","text":"<p>Manage CPS KGs</p> <p>Usage:</p> <pre><code> cps kgs [OPTIONS] COMMAND [ARGS]...\n</code></pre>"},{"location":"cli-reference/#download_1","title":"download","text":"<p>Download KG</p> <p>Usage:</p> <pre><code> cps kgs download [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT        Provide project key  [required]\n  -k, --kg-key TEXT          Knowledge Graph  [required]\n  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#list_2","title":"list","text":"<p>List KGs</p> <p>Usage:</p> <pre><code> cps kgs list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT        Provide project key  [required]\n  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#list-flavours","title":"list-flavours","text":"<p>List KG flavours for a project</p> <p>Usage:</p> <pre><code> cps kgs list-flavours [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT        Provide project key  [required]\n  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#save-snapshot","title":"save-snapshot","text":"<p>Save a snapshot from an assembled Data Set</p> <p>Usage:</p> <pre><code> cps kgs save-snapshot [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT     Provide project key  [required]\n  -k, --kg-key TEXT       Knowledge Graph  [required]\n  -w, --wait              Wait for the operation to finish\n  --flavour TEXT          Name of the Flavour/Capacity of the snapshot. Use\n                          'list-flavours' to get a list  [required]\n  --load-after-assembled  [default: True]\n  --snapshot-name TEXT\n</code></pre>"},{"location":"cli-reference/#projects","title":"projects","text":"<p>Manage CPS projects</p> <p>Usage:</p> <pre><code> cps projects [OPTIONS] COMMAND [ARGS]...\n</code></pre>"},{"location":"cli-reference/#assign","title":"assign","text":"<p>Assign a user to a project</p> <p>Usage:</p> <pre><code> cps projects assign [OPTIONS] PROJ_KEY USERNAME [ROLE]:[viewer|editor|owner]\n</code></pre> <p>Options:</p> <pre><code>  PROJ_KEY                      [required]\n  USERNAME                      [required]\n  [ROLE]:[viewer|editor|owner]  [default: viewer]\n</code></pre>"},{"location":"cli-reference/#create_1","title":"create","text":"<p>Create a project</p> <p>Usage:</p> <pre><code> cps projects create [OPTIONS] PROJ_NAME\n</code></pre> <p>Options:</p> <pre><code>  PROJ_NAME                  [required]\n  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#list_3","title":"list","text":"<p>List projects</p> <p>Usage:</p> <pre><code> cps projects list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#remove","title":"remove","text":"<p>Remove a project</p> <p>Usage:</p> <pre><code> cps projects remove [OPTIONS] PROJ_KEY\n</code></pre> <p>Options:</p> <pre><code>  PROJ_KEY  [required]\n</code></pre>"},{"location":"cli-reference/#documents","title":"documents","text":"<p>Interact with DeepSearch Document Conversion component</p> <p>Usage:</p> <pre><code> documents [OPTIONS] COMMAND [ARGS]...\n</code></pre>"},{"location":"cli-reference/#convert","title":"convert","text":"<p>Convert pdf documents using Deep Search Technology</p> <p>Usage:</p> <pre><code> documents convert [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT    Provide project key  [required]\n  -u, --url TEXT         Provide single url\n  -i, --input-file PATH  Provide absolute path to local file or directory\n                         containing pdf documents, zip files, or both.\n  -pbar, --progress-bar  Show progress bar  [default: True]\n  -r, --report           Generate report after document conversion\n  -md, --export-md       Download MD file after document conversion\n</code></pre>"},{"location":"cli-reference/#get-report","title":"get-report","text":"<p>Generate report of document conversion</p> <p>Usage:</p> <pre><code> documents get-report [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -p, --proj-key TEXT  Provide project key  [required]\n  -t, --task-ids PATH  Provide path to file containing task ids generated\n                       during document conversion.\n</code></pre>"},{"location":"cli-reference/#login","title":"login","text":"<p>Authentication is now done via profiles; to set up one check <code>deepsearch profile config --help</code></p> <p>Usage:</p> <pre><code> login [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --host TEXT\n  --email TEXT\n  --api-key TEXT\n  --verify-ssl / --no-verify-ssl  [default: verify-ssl]\n  --output TEXT\n</code></pre>"},{"location":"cli-reference/#profile","title":"profile","text":"<p>Manage profile configuration</p> <p>Usage:</p> <pre><code> profile [OPTIONS] COMMAND [ARGS]...\n</code></pre>"},{"location":"cli-reference/#config","title":"config","text":"<p>Add or update a profile.</p> <p>Usage:</p> <pre><code> profile config [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --host TEXT                     [required]\n  --username TEXT                 [required]\n  --api-key TEXT                  [required]\n  --verify-ssl / --no-verify-ssl  [default: verify-ssl]\n  --profile-name TEXT             If not set, the active profile will be\n                                  updated or, if no profile available, a new\n                                  profile with a predetermined name will be\n                                  created.\n  --activate-profile / --no-activate-profile\n                                  [default: activate-profile]\n</code></pre>"},{"location":"cli-reference/#list_4","title":"list","text":"<p>List all profiles.</p> <p>Usage:</p> <pre><code> profile list [OPTIONS]\n</code></pre>"},{"location":"cli-reference/#remove_1","title":"remove","text":"<p>Remove a profile.</p> <p>Usage:</p> <pre><code> profile remove [OPTIONS] PROFILE_NAME\n</code></pre> <p>Options:</p> <pre><code>  PROFILE_NAME  [required]\n</code></pre>"},{"location":"cli-reference/#show","title":"show","text":"<p>Display a profile.</p> <p>Usage:</p> <pre><code> profile show [OPTIONS] [PROFILE_NAME]\n</code></pre> <p>Options:</p> <pre><code>  [PROFILE_NAME]  If not set, the active profile will be displayed.\n</code></pre>"},{"location":"cli-reference/#use","title":"use","text":"<p>Activate a profile.</p> <p>Usage:</p> <pre><code> profile use [OPTIONS] PROFILE_NAME\n</code></pre> <p>Options:</p> <pre><code>  PROFILE_NAME  [required]\n</code></pre>"},{"location":"cli-reference/#query","title":"query","text":"<p>Interact with DeepSearch Query component</p> <p>Usage:</p> <pre><code> query [OPTIONS] COMMAND [ARGS]...\n</code></pre>"},{"location":"cli-reference/#data-query","title":"data-query","text":"<p>Launch a DeepSearch data query</p> <p>Usage:</p> <pre><code> query data-query [OPTIONS] SEARCH_QUERY\n</code></pre> <p>Options:</p> <pre><code>  SEARCH_QUERY               [required]\n  -s, --source TEXT\n  -p, --proj-key TEXT        Provide project key  [required]\n  -e, --instance TEXT\n  -x, --index-key TEXT       index_key of data index  [required]\n  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#kg-fts","title":"kg-fts","text":"<p>Launch a KG Full Text Search</p> <p>Usage:</p> <pre><code> query kg-fts [OPTIONS] SEARCH_QUERY\n</code></pre> <p>Options:</p> <pre><code>  SEARCH_QUERY               [required]\n  -p, --proj-key TEXT        Provide project key  [required]\n  -k, --kg-key TEXT          [required]\n  -c, --collection TEXT      [required]\n  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#query-flow","title":"query-flow","text":"<p>Launch a raw flow query</p> <p>Usage:</p> <pre><code> query query-flow [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -i, --input-file PATH      [required]\n  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#wf","title":"wf","text":"<p>Launch a CPS KG Worflow query</p> <p>Usage:</p> <pre><code> query wf [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -i, --input-file PATH      JSON Workflow file, as generated by the CPS KG UI\n                             [required]\n  -p, --proj-key TEXT        Provide project key  [required]\n  -k, --kg-key TEXT          [required]\n  -o, --output [table|json]  Output format  [default: table]\n</code></pre>"},{"location":"cli-reference/#version","title":"version","text":"<p>Print the client and server version</p> <p>Usage:</p> <pre><code> version [OPTIONS]\n</code></pre>"},{"location":"apis/","title":"WARNING: Generated Code","text":"<p>This code was generated by a tool. Do not modify these files.</p>"},{"location":"apis/public_v2/","title":"ds-public","text":"<p>API for Deep Search.</p> <p>WARNING: This API is subject to change without warning!</p> <p>This Python package is automatically generated by the OpenAPI Generator project:</p> <ul> <li>API version: 3.0.0</li> <li>Package version: 2.0.0</li> <li>Generator version: 7.4.0</li> <li>Build package: org.openapitools.codegen.languages.PythonClientCodegen</li> </ul>"},{"location":"apis/public_v2/#requirements","title":"Requirements.","text":"<p>Python 3.7+</p>"},{"location":"apis/public_v2/#installation-usage","title":"Installation &amp; Usage","text":""},{"location":"apis/public_v2/#pip-install","title":"pip install","text":"<p>If the python package is hosted on a repository, you can install directly using:</p> <p><pre><code>pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n</code></pre> (you may need to run <code>pip</code> with root permission: <code>sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git</code>)</p> <p>Then import the package: <pre><code>import deepsearch.cps.apis.public_v2\n</code></pre></p>"},{"location":"apis/public_v2/#setuptools","title":"Setuptools","text":"<p>Install via Setuptools.</p> <p><pre><code>python setup.py install --user\n</code></pre> (or <code>sudo python setup.py install</code> to install the package for all users)</p> <p>Then import the package: <pre><code>import deepsearch.cps.apis.public_v2\n</code></pre></p>"},{"location":"apis/public_v2/#tests","title":"Tests","text":"<p>Execute <code>pytest</code> to run the tests.</p>"},{"location":"apis/public_v2/#getting-started","title":"Getting Started","text":"<p>Please follow the installation procedure and then run the following:</p> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    document_hash = 'document_hash_example' # str | \n    proj_key = 'proj_key_example' # str | \n    document_meta = deepsearch.cps.apis.public_v2.DocumentMeta() # DocumentMeta | \n\n    try:\n        # Add Project Data Index Document Metadata\n        api_instance.add_project_data_index_document_metadata(index_key, document_hash, proj_key, document_meta)\n    except ApiException as e:\n        print(\"Exception when calling ContentManagerApi-&gt;add_project_data_index_document_metadata: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/#documentation-for-api-endpoints","title":"Documentation for API Endpoints","text":"<p>All URIs are relative to /api/cps/public/v2</p> Class Method HTTP request Description ContentManagerApi add_project_data_index_document_metadata POST /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/metadata Add Project Data Index Document Metadata ContentManagerApi get_all_project_data_index_documents GET /project/{proj_key}/data_indices/{index_key}/documents/ Get All Project Data Index Documents ContentManagerApi get_project_agents GET /project/{proj_key}/data_indices/documents/agents Get Project Agents ContentManagerApi get_project_conversion_statistics GET /project/{proj_key}/data_indices/{index_key}/documents/statistics Get Project Conversion Statistics ContentManagerApi get_project_data_index_document_artifacts GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/artifacts Get Project Data Index Document Artifacts ContentManagerApi get_project_data_index_document_events GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/doc_events Get Project Data Index Document Events ContentManagerApi get_project_data_index_document_markdown GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/Markdown Get Project Data Index Document Markdown ContentManagerApi get_project_data_index_document_metadata GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/metadata Get Project Data Index Document Metadata ContentManagerApi get_project_data_index_documents GET /project/{proj_key}/data_indices/{index_key}/documents/agent/{agent_name} Get Project Data Index Documents ContentManagerApi get_project_data_index_grouped_documents GET /project/{proj_key}/data_indices/{index_key}/documents/agent/{agent_name}/grouped Get Project Data Index Grouped Documents ContentManagerApi get_project_data_index_json_document GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/JSON Get Project Data Index Json Document ContentManagerApi get_project_data_index_pdf_document GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/PDF Get Project Data Index Pdf Document ContentManagerApi get_project_documents_by_transaction GET /project/{proj_key}/data_indices/{index_key}/documents/transactions/{transaction_id} Get Project Documents By Transaction ContentManagerApi get_project_index_upload_jobs GET /project/{proj_key}/data_indices/{index_key}/documents/upload_jobs Get Project Index Upload Jobs DataIndicesApi create_project_data_index POST /project/{proj_key}/data_indices Create Project Data Index DataIndicesApi create_project_data_index_delete_token POST /project/{proj_key}/data_indices/{index_key}/delete_token Create Project Data Index Delete Token DataIndicesApi delete_project_data_index DELETE /project/{proj_key}/data_indices/{index_key} Delete Project Data Index DataIndicesApi get_project_data_index GET /project/{proj_key}/data_indices/{index_key} Get Project Data Index DataIndicesApi get_project_data_index_conversion_settings GET /project/{proj_key}/data_indices/{index_key}/conversion_settings Get Project Data Index Conversion Settings DataIndicesApi get_project_data_indices GET /project/{proj_key}/data_indices Get Project Data Indices DataIndicesApi update_project_data_index PATCH /project/{proj_key}/data_indices/{index_key} Update Project Data Index DataIndicesApi update_project_data_index_conversion_settings PATCH /project/{proj_key}/data_indices/{index_key}/conversion_settings Update Project Data Index Conversion Settings DataIndicesUploadApi ccs_convert_file_project_data_index POST /project/{proj_key}/data_indices/{index_key}/actions/ccs_convert Ccs Convert File Project Data Index DataIndicesUploadApi ccs_convert_upload_file_project_data_index POST /project/{proj_key}/data_indices/{index_key}/actions/ccs_convert_upload Ccs Convert Upload File Project Data Index DataIndicesUploadApi get_attachment_upload_data GET /project/{proj_key}/data_indices/{index_key}/documents/{index_item_id}/attachment_url/{filename} Get Attachment Upload Data DataIndicesUploadApi html_print_convert_upload POST /project/{proj_key}/data_indices/{index_key}/actions/html_print_convert_upload Html Print Convert Upload DataIndicesUploadApi load_project_data_index_files_elastic POST /project/{proj_key}/data_indices/{index_key}/actions/load_elastic Load Project Data Index Files Elastic DataIndicesUploadApi register_attachment POST /project/{proj_key}/data_indices/{index_key}/documents/{index_item_id}/attachment Register Attachment DataIndicesUploadApi upload_project_data_index_file POST /project/{proj_key}/data_indices/{index_key}/actions/upload Upload Project Data Index File DataIndicesUploadApi upload_register_project_documents POST /project/{proj_key}/data_indices/{index_key}/actions/upload_register_documents Upload Register Project Documents KnowledgeGraphsApi backend_list_project_kgs GET /backend/project/{proj_key}/bags Backend List Project Kgs KnowledgeGraphsApi create_project_knowledge_graph POST /backend/project/{proj_key}/bags Create Project Knowledge Graph KnowledgeGraphsApi list_public_knowledge_graphs GET /project/public/bags List Public Knowledge Graphs KnowledgeGraphsApi update_project_knowledge_graph_metadata PATCH /backend/project/{proj_key}/bags/{bag_key} Update Project Knowledge Graph Metadata ProjectApi convert_document POST /project/{proj_key}/convert Convert Document ProjectApi delete_project_integration_config_genai DELETE /project/{proj_key}/integrations/genai Delete Project Integration Config Genai ProjectApi get_convert_task GET /project/{proj_key}/convert_tasks/{task_id} Get Convert Task ProjectApi get_project_default_values GET /project/{proj_key}/default_values Get Project Default Values ProjectApi get_project_integration_config_genai GET /project/{proj_key}/integrations/genai Get Project Integration Config Genai ProjectApi provision_project_packages POST /project/{proj_key}/packages Provision Project Packages ProjectApi update_project_default_values POST /project/{proj_key}/default_values Update Project Default Values ProjectApi update_project_integration_config_genai POST /project/{proj_key}/integrations/genai Update Project Integration Config Genai SemanticApi ingest POST /project/{proj_key}/semantic/ingest Ingest SystemApi get_system_information GET /system/info Get System Information SystemApi get_system_modules_configuration GET /system/modules/configuration Get System Modules Configuration SystemApi get_system_modules_tasks GET /system/modules/tasks Get System Modules Tasks SystemApi list_packages GET /system/packages List Packages SystemApi list_system_knowledge_graphs GET /system/kgs List System Knowledge Graphs SystemApi system_get_all_dcs_admin GET /system/admin/get_all_dcs System Get All Dcs Admin SystemApi system_get_all_kgs_admin GET /system/admin/get_all_kgs System Get All Kgs Admin SystemFlavoursApi delete_flavour DELETE /system/admin/delete_flavour/{flavour_name} Delete Flavour SystemFlavoursApi get_flavour GET /system/admin/get_flavour/{flavour_name} Get Flavour SystemFlavoursApi list_all_flavours GET /system/admin/list_all_flavours List All Flavours SystemFlavoursApi list_flavours_by_project GET /system/admin/get_project_flavours/{proj_key} List Flavours By Project SystemFlavoursApi list_projects_flavours GET /system/admin/list_projects_flavours List Projects Flavours SystemFlavoursApi save_flavour PUT /system/admin/save_flavour Save Flavour SystemFlavoursApi save_project_flavours PUT /system/admin/save_project_flavours Save Project Flavours SystemQuotasApi get_flavours_default_quotas GET /system/admin/get_flavours_default_quota Get Flavours Default Quotas SystemQuotasApi get_project_flavour_total_kgs GET /system/admin/get_project_flavour_total_kgs/{proj_key}/{flavour_name} Get Project Flavour Total Kgs SystemQuotasApi get_project_flavours_quota GET /system/admin/get_project_flavours_quota/{proj_key} Get Project Flavours Quota SystemQuotasApi get_projects_flavours_quota GET /system/admin/get_projects_flavours_quota Get Projects Flavours Quota SystemQuotasApi save_flavours_default_quotas PUT /system/admin/save_flavours_default_quota Save Flavours Default Quotas SystemQuotasApi save_project_flavours_quota PUT /system/admin/save_project_flavours_quota Save Project Flavours Quota SystemSummaryApi system_get_cps_summary GET /system/admin/summary System Get Cps Summary SystemSummaryApi system_get_dc_storage_summary_async GET /system/admin/dc_storage_summary/{dc_key} System Get Dc Storage Summary Async SystemSummaryApi system_get_kg_storage_summary_async GET /system/admin/kg_storage_summary/{kg_key} System Get Kg Storage Summary Async TasksApi abort_project_task POST /project/{proj_key}/tasks/{task_id}/actions/abort Abort Project Task TasksApi get_project_celery_task GET /project/{proj_key}/celery_tasks/{task_id} Get Project Celery Task TasksApi get_project_task GET /project/{proj_key}/tasks/{task_id} Get Project Task TasksApi list_project_tasks GET /project/{proj_key}/tasks List Project Tasks UploadApi create_project_scratch_file POST /project/{proj_key}/scratch/files/upload/{filename} Create Project Scratch File UploadApi list_project_scratch_files GET /project/{proj_key}/scratch/files List Project Scratch Files UploadApi list_project_scratch_files_paginated GET /project/{proj_key}/scratch/files_paginated List Project Scratch Files Paginated"},{"location":"apis/public_v2/#documentation-for-models","title":"Documentation For Models","text":"<ul> <li>Abstract</li> <li>Acquisition</li> <li>AddAnnotations</li> <li>AddRawPages</li> <li>Affiliation</li> <li>Affiliations</li> <li>AgentName</li> <li>Aggs</li> <li>Alias</li> <li>Aliases</li> <li>AlternateNames</li> <li>ApiServerFastapiServerPublicModelsDataIndicesUploadModelsHttpSource</li> <li>ApiServerFastapiServerPublicModelsDataIndicesUploadModelsIdentifier</li> <li>ApiServerFastapiServerPublicModelsProjectModelsHttpSource</li> <li>AssembleMode</li> <li>AssembleSettings</li> <li>AttachmentUploadData</li> <li>AttachmentUploadRequestBody</li> <li>Author</li> <li>Authors</li> <li>Backend</li> <li>BackendSettings</li> <li>BagFlavourFullData</li> <li>BeginDate</li> <li>CCSProject</li> <li>CPSPackage</li> <li>CPSSummary</li> <li>CitationCount</li> <li>CitationCountDate</li> <li>Code</li> <li>CollectionDocumentInfoStr</li> <li>CollectionMetadataSettings</li> <li>Comment</li> <li>CompletedAt</li> <li>Config</li> <li>ConversionSettings</li> <li>ConvertDocumentRequest</li> <li>ConvertDocumentRequestFileSource</li> <li>ConvertDocumentRequestHttpSource</li> <li>ConvertDocumentRequestImageUrls</li> <li>ConvertDocumentRequestSettings</li> <li>ConvertDocumentsRequestBody</li> <li>ConvertDocumentsRequestBodyTargetSettings</li> <li>ConvertDocumentsSources</li> <li>ConvertDocumentsSourcesS3Source</li> <li>ConvertUploadDocumentsRequestBody</li> <li>ConvertUploadDocumentsRequestBodyMeta</li> <li>CpsTask</li> <li>Created</li> <li>Data</li> <li>DataFlow</li> <li>DataIndexUploadFileSource</li> <li>DcKey</li> <li>DecodeSecrets</li> <li>DefaultValues</li> <li>DefaultValuesDataflow</li> <li>Deployment</li> <li>Description</li> <li>DescriptionLicense</li> <li>DirectModelConfig</li> <li>DisplayName</li> <li>DoclingCoreTypesBaseIdentifier</li> <li>DocumentArtifacts</li> <li>DocumentArtifactsDocumentMetaJson</li> <li>DocumentArtifactsItem</li> <li>DocumentArtifactsPageItem</li> <li>DocumentDescription</li> <li>DocumentDescriptionAcquisition</li> <li>DocumentDescriptionAdvanced</li> <li>DocumentDescriptionLicense</li> <li>DocumentHashes</li> <li>DocumentMeta</li> <li>DocumentMetaDescription</li> <li>DocumentStatistics</li> <li>Domain</li> <li>ElasticIndexPropertyObject</li> <li>ElasticIndexPropertyPrimitive</li> <li>ElasticIndexSearchQueryOptions</li> <li>ElasticIndexSource</li> <li>ElasticInstanceDataIndex</li> <li>ElasticMetadata</li> <li>Enabled</li> <li>EndDate</li> <li>ErrorReason</li> <li>FileSource</li> <li>FileUri</li> <li>FileUrl</li> <li>Filename</li> <li>Flavour</li> <li>FlavoursDefaultQuota</li> <li>FlavoursQuota</li> <li>GenAIAWSBedrock</li> <li>GenAIAWSBedrockConfig</li> <li>GenAIAWSBedrockProjParams</li> <li>GenAIBAM</li> <li>GenAIBAMConfig</li> <li>GenAICPD</li> <li>GenAICPDConfig</li> <li>GenAIHFInferenceApi</li> <li>GenAIHFInferenceApiConfig</li> <li>GenAIOpenai</li> <li>GenAIOpenaiConfig</li> <li>GenAIParams</li> <li>GenAIPartialParams</li> <li>GenAIWatsonx</li> <li>GenAIWatsonxConfig</li> <li>GenaiCpdApiKey</li> <li>GenaiCpdPassword</li> <li>GroupedProjectDocuments</li> <li>HTTPValidationError</li> <li>HeadUrl</li> <li>Headers</li> <li>HttpSource</li> <li>Id</li> <li>Identifiers</li> <li>Identifiers1</li> <li>IgnoreAbove</li> <li>ImageUrlsInfo</li> <li>Issue</li> <li>JsonUploadRequestBody</li> <li>KeyPrefix</li> <li>Keywords</li> <li>KgKey</li> <li>Languages</li> <li>License</li> <li>Link</li> <li>ListProjectFlavours</li> <li>Log</li> <li>MergeMode</li> <li>ModelDate</li> <li>ModelFrom</li> <li>ModelId</li> <li>ModelPipelineSettings</li> <li>ModelPipelineSettingsClustersInner</li> <li>ModulesConfig</li> <li>Name</li> <li>NumberPages</li> <li>OCROptions</li> <li>ObjectKeys</li> <li>OcrSettings</li> <li>Package</li> <li>Page</li> <li>PageLabels</li> <li>Pages</li> <li>Params</li> <li>PartialDirectConversionParameters</li> <li>PartialDirectConversionParametersAssemble</li> <li>PartialDirectConversionParametersMetadata</li> <li>PartialDirectConversionParametersModelPipeline</li> <li>PartialDirectConversionParametersOcr</li> <li>ProjKey</li> <li>ProjectAgent</li> <li>ProjectAgents</li> <li>ProjectDataIndexConversionSettingsInput</li> <li>ProjectDataIndexConversionSettingsOutput</li> <li>ProjectDataIndexNonView</li> <li>ProjectDataIndexSource</li> <li>ProjectDataIndexView</li> <li>ProjectDataIndexWithStatus</li> <li>ProjectDataIndexWithStatusMetadata</li> <li>ProjectDocument</li> <li>ProjectDocumentURL</li> <li>ProjectDocuments</li> <li>ProjectFlavourTotalKgs</li> <li>ProjectFlavoursQuota</li> <li>ProjectPackageInstalationManifest</li> <li>ProjectScratchFiles</li> <li>ProjectScratchFilesPaginated</li> <li>ProjectSourceDataIndex</li> <li>ProjectsFlavours</li> <li>PromptTemplate</li> <li>Properties</li> <li>Provenance</li> <li>Publication</li> <li>Publication1</li> <li>PublicationDate</li> <li>Publishers</li> <li>Query</li> <li>RecordProperties</li> <li>RefUri</li> <li>ReferenceCount</li> <li>ReferenceToModel</li> <li>References</li> <li>RelatedTasks</li> <li>ResponseDocumentArtifacts</li> <li>ResponseGetProjectDataIndexConversionSettings</li> <li>ResponseGetProjectIntegrationConfigGenai</li> <li>ResponseGroupedDocuments</li> <li>ResponseUpdateProjectDataIndexConversionSettings</li> <li>ResponseUploadJobs</li> <li>S3Coordinates</li> <li>S3DocumentSource</li> <li>SchemaKey</li> <li>ScratchIds</li> <li>SearchString</li> <li>SemanticIngestReqParams</li> <li>SemanticIngestRequest</li> <li>SemanticIngestSourcePrivateDataCollection</li> <li>SemanticIngestSourcePrivateDataDocument</li> <li>SemanticIngestSourcePublicDataDocument</li> <li>SemanticIngestSourceUrl</li> <li>Size</li> <li>Size1</li> <li>Sort</li> <li>Source</li> <li>Source1</li> <li>Source2</li> <li>Source3</li> <li>Source4</li> <li>StartCount</li> <li>StartedAt</li> <li>Status</li> <li>StatusFilter</li> <li>Storage</li> <li>StorageSummaryTask</li> <li>Subjects</li> <li>SystemInfo</li> <li>TableFormerMode</li> <li>TableStructureOptions</li> <li>TargetConversionParameters</li> <li>Task</li> <li>TaskContext</li> <li>TaskResult</li> <li>TaskType</li> <li>TemporaryUploadFileResult</li> <li>TemporaryUrl</li> <li>TemporaryUrlFields</li> <li>Term</li> <li>Text</li> <li>Timeout</li> <li>Title</li> <li>TokenResponse</li> <li>TruncatePages</li> <li>Type</li> <li>Type1</li> <li>UploadDate</li> <li>UploadElasticRequestBody</li> <li>UploadJob</li> <li>UploadToElastic</li> <li>Url</li> <li>UrlRefs</li> <li>Urls</li> <li>ValidationError</li> <li>ValidationErrorLocInner</li> <li>Version</li> <li>Version1</li> <li>ViewOf</li> <li>ViewOf1</li> <li>Volume</li> <li>Wait</li> <li>Wait1</li> <li>WithOperations</li> <li>WithoutOperations</li> </ul>"},{"location":"apis/public_v2/#documentation-for-authorization","title":"Documentation For Authorization","text":"<p>Authentication schemes defined for the API: </p>"},{"location":"apis/public_v2/#bearer","title":"Bearer","text":"<ul> <li>Type: API key</li> <li>API key parameter name: Authorization</li> <li>Location: HTTP header</li> </ul>"},{"location":"apis/public_v2/#author","title":"Author","text":""},{"location":"apis/public_v2/docs/Abstract/","title":"Abstract","text":""},{"location":"apis/public_v2/docs/Abstract/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Abstract/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.abstract import Abstract\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Abstract from a JSON string\nabstract_instance = Abstract.from_json(json)\n# print the JSON string representation of the object\nprint(Abstract.to_json())\n\n# convert the object into a dict\nabstract_dict = abstract_instance.to_dict()\n# create an instance of Abstract from a dict\nabstract_form_dict = abstract.from_dict(abstract_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Acquisition/","title":"Acquisition","text":"<p>Information on how the data was obtained.</p>"},{"location":"apis/public_v2/docs/Acquisition/#properties","title":"Properties","text":"Name Type Description Notes type str The method to obtain the data. var_date ModelDate [optional] link Link [optional] size Size [optional]"},{"location":"apis/public_v2/docs/Acquisition/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.acquisition import Acquisition\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Acquisition from a JSON string\nacquisition_instance = Acquisition.from_json(json)\n# print the JSON string representation of the object\nprint(Acquisition.to_json())\n\n# convert the object into a dict\nacquisition_dict = acquisition_instance.to_dict()\n# create an instance of Acquisition from a dict\nacquisition_form_dict = acquisition.from_dict(acquisition_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/AddAnnotations/","title":"AddAnnotations","text":""},{"location":"apis/public_v2/docs/AddAnnotations/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/AddAnnotations/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.add_annotations import AddAnnotations\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of AddAnnotations from a JSON string\nadd_annotations_instance = AddAnnotations.from_json(json)\n# print the JSON string representation of the object\nprint(AddAnnotations.to_json())\n\n# convert the object into a dict\nadd_annotations_dict = add_annotations_instance.to_dict()\n# create an instance of AddAnnotations from a dict\nadd_annotations_form_dict = add_annotations.from_dict(add_annotations_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/AddRawPages/","title":"AddRawPages","text":""},{"location":"apis/public_v2/docs/AddRawPages/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/AddRawPages/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.add_raw_pages import AddRawPages\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of AddRawPages from a JSON string\nadd_raw_pages_instance = AddRawPages.from_json(json)\n# print the JSON string representation of the object\nprint(AddRawPages.to_json())\n\n# convert the object into a dict\nadd_raw_pages_dict = add_raw_pages_instance.to_dict()\n# create an instance of AddRawPages from a dict\nadd_raw_pages_form_dict = add_raw_pages.from_dict(add_raw_pages_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Affiliation/","title":"Affiliation","text":"<p>Affiliation.</p>"},{"location":"apis/public_v2/docs/Affiliation/#properties","title":"Properties","text":"Name Type Description Notes name str id Id [optional] source Source [optional]"},{"location":"apis/public_v2/docs/Affiliation/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.affiliation import Affiliation\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Affiliation from a JSON string\naffiliation_instance = Affiliation.from_json(json)\n# print the JSON string representation of the object\nprint(Affiliation.to_json())\n\n# convert the object into a dict\naffiliation_dict = affiliation_instance.to_dict()\n# create an instance of Affiliation from a dict\naffiliation_form_dict = affiliation.from_dict(affiliation_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Affiliations/","title":"Affiliations","text":""},{"location":"apis/public_v2/docs/Affiliations/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Affiliations/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.affiliations import Affiliations\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Affiliations from a JSON string\naffiliations_instance = Affiliations.from_json(json)\n# print the JSON string representation of the object\nprint(Affiliations.to_json())\n\n# convert the object into a dict\naffiliations_dict = affiliations_instance.to_dict()\n# create an instance of Affiliations from a dict\naffiliations_form_dict = affiliations.from_dict(affiliations_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/AgentName/","title":"AgentName","text":""},{"location":"apis/public_v2/docs/AgentName/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/AgentName/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.agent_name import AgentName\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of AgentName from a JSON string\nagent_name_instance = AgentName.from_json(json)\n# print the JSON string representation of the object\nprint(AgentName.to_json())\n\n# convert the object into a dict\nagent_name_dict = agent_name_instance.to_dict()\n# create an instance of AgentName from a dict\nagent_name_form_dict = agent_name.from_dict(agent_name_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Aggs/","title":"Aggs","text":""},{"location":"apis/public_v2/docs/Aggs/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Aggs/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.aggs import Aggs\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Aggs from a JSON string\naggs_instance = Aggs.from_json(json)\n# print the JSON string representation of the object\nprint(Aggs.to_json())\n\n# convert the object into a dict\naggs_dict = aggs_instance.to_dict()\n# create an instance of Aggs from a dict\naggs_form_dict = aggs.from_dict(aggs_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Alias/","title":"Alias","text":"<p>A list of tags (aliases) for the collection.</p>"},{"location":"apis/public_v2/docs/Alias/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Alias/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.alias import Alias\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Alias from a JSON string\nalias_instance = Alias.from_json(json)\n# print the JSON string representation of the object\nprint(Alias.to_json())\n\n# convert the object into a dict\nalias_dict = alias_instance.to_dict()\n# create an instance of Alias from a dict\nalias_form_dict = alias.from_dict(alias_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Aliases/","title":"Aliases","text":""},{"location":"apis/public_v2/docs/Aliases/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Aliases/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.aliases import Aliases\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Aliases from a JSON string\naliases_instance = Aliases.from_json(json)\n# print the JSON string representation of the object\nprint(Aliases.to_json())\n\n# convert the object into a dict\naliases_dict = aliases_instance.to_dict()\n# create an instance of Aliases from a dict\naliases_form_dict = aliases.from_dict(aliases_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/AlternateNames/","title":"AlternateNames","text":"<p>Other names or abbreviations of this publication.</p>"},{"location":"apis/public_v2/docs/AlternateNames/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/AlternateNames/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.alternate_names import AlternateNames\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of AlternateNames from a JSON string\nalternate_names_instance = AlternateNames.from_json(json)\n# print the JSON string representation of the object\nprint(AlternateNames.to_json())\n\n# convert the object into a dict\nalternate_names_dict = alternate_names_instance.to_dict()\n# create an instance of AlternateNames from a dict\nalternate_names_form_dict = alternate_names.from_dict(alternate_names_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ApiServerFastapiServerPublicModelsDataIndicesUploadModelsHttpSource/","title":"ApiServerFastapiServerPublicModelsDataIndicesUploadModelsHttpSource","text":""},{"location":"apis/public_v2/docs/ApiServerFastapiServerPublicModelsDataIndicesUploadModelsHttpSource/#properties","title":"Properties","text":"Name Type Description Notes download_url str head_url HeadUrl [optional] headers object [optional]"},{"location":"apis/public_v2/docs/ApiServerFastapiServerPublicModelsDataIndicesUploadModelsHttpSource/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.api_server_fastapi_server_public_models_data_indices_upload_models_http_source import ApiServerFastapiServerPublicModelsDataIndicesUploadModelsHttpSource\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ApiServerFastapiServerPublicModelsDataIndicesUploadModelsHttpSource from a JSON string\napi_server_fastapi_server_public_models_data_indices_upload_models_http_source_instance = ApiServerFastapiServerPublicModelsDataIndicesUploadModelsHttpSource.from_json(json)\n# print the JSON string representation of the object\nprint(ApiServerFastapiServerPublicModelsDataIndicesUploadModelsHttpSource.to_json())\n\n# convert the object into a dict\napi_server_fastapi_server_public_models_data_indices_upload_models_http_source_dict = api_server_fastapi_server_public_models_data_indices_upload_models_http_source_instance.to_dict()\n# create an instance of ApiServerFastapiServerPublicModelsDataIndicesUploadModelsHttpSource from a dict\napi_server_fastapi_server_public_models_data_indices_upload_models_http_source_form_dict = api_server_fastapi_server_public_models_data_indices_upload_models_http_source.from_dict(api_server_fastapi_server_public_models_data_indices_upload_models_http_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ApiServerFastapiServerPublicModelsDataIndicesUploadModelsIdentifier/","title":"ApiServerFastapiServerPublicModelsDataIndicesUploadModelsIdentifier","text":""},{"location":"apis/public_v2/docs/ApiServerFastapiServerPublicModelsDataIndicesUploadModelsIdentifier/#properties","title":"Properties","text":"Name Type Description Notes type str name str value str"},{"location":"apis/public_v2/docs/ApiServerFastapiServerPublicModelsDataIndicesUploadModelsIdentifier/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.api_server_fastapi_server_public_models_data_indices_upload_models_identifier import ApiServerFastapiServerPublicModelsDataIndicesUploadModelsIdentifier\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ApiServerFastapiServerPublicModelsDataIndicesUploadModelsIdentifier from a JSON string\napi_server_fastapi_server_public_models_data_indices_upload_models_identifier_instance = ApiServerFastapiServerPublicModelsDataIndicesUploadModelsIdentifier.from_json(json)\n# print the JSON string representation of the object\nprint(ApiServerFastapiServerPublicModelsDataIndicesUploadModelsIdentifier.to_json())\n\n# convert the object into a dict\napi_server_fastapi_server_public_models_data_indices_upload_models_identifier_dict = api_server_fastapi_server_public_models_data_indices_upload_models_identifier_instance.to_dict()\n# create an instance of ApiServerFastapiServerPublicModelsDataIndicesUploadModelsIdentifier from a dict\napi_server_fastapi_server_public_models_data_indices_upload_models_identifier_form_dict = api_server_fastapi_server_public_models_data_indices_upload_models_identifier.from_dict(api_server_fastapi_server_public_models_data_indices_upload_models_identifier_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ApiServerFastapiServerPublicModelsProjectModelsHttpSource/","title":"ApiServerFastapiServerPublicModelsProjectModelsHttpSource","text":""},{"location":"apis/public_v2/docs/ApiServerFastapiServerPublicModelsProjectModelsHttpSource/#properties","title":"Properties","text":"Name Type Description Notes url str headers object"},{"location":"apis/public_v2/docs/ApiServerFastapiServerPublicModelsProjectModelsHttpSource/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.api_server_fastapi_server_public_models_project_models_http_source import ApiServerFastapiServerPublicModelsProjectModelsHttpSource\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ApiServerFastapiServerPublicModelsProjectModelsHttpSource from a JSON string\napi_server_fastapi_server_public_models_project_models_http_source_instance = ApiServerFastapiServerPublicModelsProjectModelsHttpSource.from_json(json)\n# print the JSON string representation of the object\nprint(ApiServerFastapiServerPublicModelsProjectModelsHttpSource.to_json())\n\n# convert the object into a dict\napi_server_fastapi_server_public_models_project_models_http_source_dict = api_server_fastapi_server_public_models_project_models_http_source_instance.to_dict()\n# create an instance of ApiServerFastapiServerPublicModelsProjectModelsHttpSource from a dict\napi_server_fastapi_server_public_models_project_models_http_source_form_dict = api_server_fastapi_server_public_models_project_models_http_source.from_dict(api_server_fastapi_server_public_models_project_models_http_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/AssembleMode/","title":"AssembleMode","text":""},{"location":"apis/public_v2/docs/AssembleMode/#properties","title":"Properties","text":"Name Type Description Notes page_elements List[str] tables List[str]"},{"location":"apis/public_v2/docs/AssembleMode/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.assemble_mode import AssembleMode\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of AssembleMode from a JSON string\nassemble_mode_instance = AssembleMode.from_json(json)\n# print the JSON string representation of the object\nprint(AssembleMode.to_json())\n\n# convert the object into a dict\nassemble_mode_dict = assemble_mode_instance.to_dict()\n# create an instance of AssembleMode from a dict\nassemble_mode_form_dict = assemble_mode.from_dict(assemble_mode_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/AssembleSettings/","title":"AssembleSettings","text":""},{"location":"apis/public_v2/docs/AssembleSettings/#properties","title":"Properties","text":"Name Type Description Notes mode AssembleMode include_incomplete_documents bool"},{"location":"apis/public_v2/docs/AssembleSettings/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.assemble_settings import AssembleSettings\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of AssembleSettings from a JSON string\nassemble_settings_instance = AssembleSettings.from_json(json)\n# print the JSON string representation of the object\nprint(AssembleSettings.to_json())\n\n# convert the object into a dict\nassemble_settings_dict = assemble_settings_instance.to_dict()\n# create an instance of AssembleSettings from a dict\nassemble_settings_form_dict = assemble_settings.from_dict(assemble_settings_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/AttachmentUploadData/","title":"AttachmentUploadData","text":""},{"location":"apis/public_v2/docs/AttachmentUploadData/#properties","title":"Properties","text":"Name Type Description Notes attachment_path str upload_data str"},{"location":"apis/public_v2/docs/AttachmentUploadData/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.attachment_upload_data import AttachmentUploadData\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of AttachmentUploadData from a JSON string\nattachment_upload_data_instance = AttachmentUploadData.from_json(json)\n# print the JSON string representation of the object\nprint(AttachmentUploadData.to_json())\n\n# convert the object into a dict\nattachment_upload_data_dict = attachment_upload_data_instance.to_dict()\n# create an instance of AttachmentUploadData from a dict\nattachment_upload_data_form_dict = attachment_upload_data.from_dict(attachment_upload_data_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/AttachmentUploadRequestBody/","title":"AttachmentUploadRequestBody","text":""},{"location":"apis/public_v2/docs/AttachmentUploadRequestBody/#properties","title":"Properties","text":"Name Type Description Notes attachment_path str attachment_key str optional"},{"location":"apis/public_v2/docs/AttachmentUploadRequestBody/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.attachment_upload_request_body import AttachmentUploadRequestBody\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of AttachmentUploadRequestBody from a JSON string\nattachment_upload_request_body_instance = AttachmentUploadRequestBody.from_json(json)\n# print the JSON string representation of the object\nprint(AttachmentUploadRequestBody.to_json())\n\n# convert the object into a dict\nattachment_upload_request_body_dict = attachment_upload_request_body_instance.to_dict()\n# create an instance of AttachmentUploadRequestBody from a dict\nattachment_upload_request_body_form_dict = attachment_upload_request_body.from_dict(attachment_upload_request_body_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Author/","title":"Author","text":"<p>Author.</p>"},{"location":"apis/public_v2/docs/Author/#properties","title":"Properties","text":"Name Type Description Notes name str id Id [optional] source Source [optional] affiliations Affiliations [optional]"},{"location":"apis/public_v2/docs/Author/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.author import Author\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Author from a JSON string\nauthor_instance = Author.from_json(json)\n# print the JSON string representation of the object\nprint(Author.to_json())\n\n# convert the object into a dict\nauthor_dict = author_instance.to_dict()\n# create an instance of Author from a dict\nauthor_form_dict = author.from_dict(author_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Authors/","title":"Authors","text":""},{"location":"apis/public_v2/docs/Authors/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Authors/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.authors import Authors\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Authors from a JSON string\nauthors_instance = Authors.from_json(json)\n# print the JSON string representation of the object\nprint(Authors.to_json())\n\n# convert the object into a dict\nauthors_dict = authors_instance.to_dict()\n# create an instance of Authors from a dict\nauthors_form_dict = authors.from_dict(authors_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Backend/","title":"Backend","text":""},{"location":"apis/public_v2/docs/Backend/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Backend/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.backend import Backend\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Backend from a JSON string\nbackend_instance = Backend.from_json(json)\n# print the JSON string representation of the object\nprint(Backend.to_json())\n\n# convert the object into a dict\nbackend_dict = backend_instance.to_dict()\n# create an instance of Backend from a dict\nbackend_form_dict = backend.from_dict(backend_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/BackendSettings/","title":"BackendSettings","text":""},{"location":"apis/public_v2/docs/BackendSettings/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/BackendSettings/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.backend_settings import BackendSettings\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of BackendSettings from a JSON string\nbackend_settings_instance = BackendSettings.from_json(json)\n# print the JSON string representation of the object\nprint(BackendSettings.to_json())\n\n# convert the object into a dict\nbackend_settings_dict = backend_settings_instance.to_dict()\n# create an instance of BackendSettings from a dict\nbackend_settings_form_dict = backend_settings.from_dict(backend_settings_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/BagFlavourFullData/","title":"BagFlavourFullData","text":""},{"location":"apis/public_v2/docs/BagFlavourFullData/#properties","title":"Properties","text":"Name Type Description Notes backend str config object default_quota int optional description str display_name str is_from_deployment bool optional name str order int optional project_specific bool"},{"location":"apis/public_v2/docs/BagFlavourFullData/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.bag_flavour_full_data import BagFlavourFullData\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of BagFlavourFullData from a JSON string\nbag_flavour_full_data_instance = BagFlavourFullData.from_json(json)\n# print the JSON string representation of the object\nprint(BagFlavourFullData.to_json())\n\n# convert the object into a dict\nbag_flavour_full_data_dict = bag_flavour_full_data_instance.to_dict()\n# create an instance of BagFlavourFullData from a dict\nbag_flavour_full_data_form_dict = bag_flavour_full_data.from_dict(bag_flavour_full_data_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/BeginDate/","title":"BeginDate","text":""},{"location":"apis/public_v2/docs/BeginDate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/BeginDate/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.begin_date import BeginDate\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of BeginDate from a JSON string\nbegin_date_instance = BeginDate.from_json(json)\n# print the JSON string representation of the object\nprint(BeginDate.to_json())\n\n# convert the object into a dict\nbegin_date_dict = begin_date_instance.to_dict()\n# create an instance of BeginDate from a dict\nbegin_date_form_dict = begin_date.from_dict(begin_date_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/CCSProject/","title":"CCSProject","text":""},{"location":"apis/public_v2/docs/CCSProject/#properties","title":"Properties","text":"Name Type Description Notes name str proj_key str collection_name str"},{"location":"apis/public_v2/docs/CCSProject/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.ccs_project import CCSProject\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CCSProject from a JSON string\nccs_project_instance = CCSProject.from_json(json)\n# print the JSON string representation of the object\nprint(CCSProject.to_json())\n\n# convert the object into a dict\nccs_project_dict = ccs_project_instance.to_dict()\n# create an instance of CCSProject from a dict\nccs_project_form_dict = ccs_project.from_dict(ccs_project_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/CPSPackage/","title":"CPSPackage","text":""},{"location":"apis/public_v2/docs/CPSPackage/#properties","title":"Properties","text":"Name Type Description Notes name str description str package_id str type str"},{"location":"apis/public_v2/docs/CPSPackage/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.cps_package import CPSPackage\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CPSPackage from a JSON string\ncps_package_instance = CPSPackage.from_json(json)\n# print the JSON string representation of the object\nprint(CPSPackage.to_json())\n\n# convert the object into a dict\ncps_package_dict = cps_package_instance.to_dict()\n# create an instance of CPSPackage from a dict\ncps_package_form_dict = cps_package.from_dict(cps_package_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/CPSSummary/","title":"CPSSummary","text":""},{"location":"apis/public_v2/docs/CPSSummary/#properties","title":"Properties","text":"Name Type Description Notes avail_cpu_slots int avail_mem_slots int avail_slots int name str num_nodes int number_kgs int running_kgs int workers_pool str"},{"location":"apis/public_v2/docs/CPSSummary/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.cps_summary import CPSSummary\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CPSSummary from a JSON string\ncps_summary_instance = CPSSummary.from_json(json)\n# print the JSON string representation of the object\nprint(CPSSummary.to_json())\n\n# convert the object into a dict\ncps_summary_dict = cps_summary_instance.to_dict()\n# create an instance of CPSSummary from a dict\ncps_summary_form_dict = cps_summary.from_dict(cps_summary_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/CitationCount/","title":"CitationCount","text":"<p>Total number of citations that this document has received (number of documents in whose bibliography this document appears).</p>"},{"location":"apis/public_v2/docs/CitationCount/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/CitationCount/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.citation_count import CitationCount\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CitationCount from a JSON string\ncitation_count_instance = CitationCount.from_json(json)\n# print the JSON string representation of the object\nprint(CitationCount.to_json())\n\n# convert the object into a dict\ncitation_count_dict = citation_count_instance.to_dict()\n# create an instance of CitationCount from a dict\ncitation_count_form_dict = citation_count.from_dict(citation_count_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/CitationCountDate/","title":"CitationCountDate","text":"<p>Last update date of the citation count.</p>"},{"location":"apis/public_v2/docs/CitationCountDate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/CitationCountDate/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.citation_count_date import CitationCountDate\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CitationCountDate from a JSON string\ncitation_count_date_instance = CitationCountDate.from_json(json)\n# print the JSON string representation of the object\nprint(CitationCountDate.to_json())\n\n# convert the object into a dict\ncitation_count_date_dict = citation_count_date_instance.to_dict()\n# create an instance of CitationCountDate from a dict\ncitation_count_date_form_dict = citation_count_date.from_dict(citation_count_date_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Code/","title":"Code","text":""},{"location":"apis/public_v2/docs/Code/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Code/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.code import Code\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Code from a JSON string\ncode_instance = Code.from_json(json)\n# print the JSON string representation of the object\nprint(Code.to_json())\n\n# convert the object into a dict\ncode_dict = code_instance.to_dict()\n# create an instance of Code from a dict\ncode_form_dict = code.from_dict(code_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/CollectionDocumentInfoStr/","title":"CollectionDocumentInfoStr","text":""},{"location":"apis/public_v2/docs/CollectionDocumentInfoStr/#properties","title":"Properties","text":"Name Type Description Notes name Name [optional] type object The collection type. version Version [optional] alias Alias [optional]"},{"location":"apis/public_v2/docs/CollectionDocumentInfoStr/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.collection_document_info_str import CollectionDocumentInfoStr\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CollectionDocumentInfoStr from a JSON string\ncollection_document_info_str_instance = CollectionDocumentInfoStr.from_json(json)\n# print the JSON string representation of the object\nprint(CollectionDocumentInfoStr.to_json())\n\n# convert the object into a dict\ncollection_document_info_str_dict = collection_document_info_str_instance.to_dict()\n# create an instance of CollectionDocumentInfoStr from a dict\ncollection_document_info_str_form_dict = collection_document_info_str.from_dict(collection_document_info_str_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/CollectionMetadataSettings/","title":"CollectionMetadataSettings","text":""},{"location":"apis/public_v2/docs/CollectionMetadataSettings/#properties","title":"Properties","text":"Name Type Description Notes description Description [optional] display_name DisplayName [optional] license License [optional] source Source1 [optional] version Version1 [optional]"},{"location":"apis/public_v2/docs/CollectionMetadataSettings/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.collection_metadata_settings import CollectionMetadataSettings\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CollectionMetadataSettings from a JSON string\ncollection_metadata_settings_instance = CollectionMetadataSettings.from_json(json)\n# print the JSON string representation of the object\nprint(CollectionMetadataSettings.to_json())\n\n# convert the object into a dict\ncollection_metadata_settings_dict = collection_metadata_settings_instance.to_dict()\n# create an instance of CollectionMetadataSettings from a dict\ncollection_metadata_settings_form_dict = collection_metadata_settings.from_dict(collection_metadata_settings_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Comment/","title":"Comment","text":"<p>A description of the task or any comments in natural language.</p>"},{"location":"apis/public_v2/docs/Comment/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Comment/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.comment import Comment\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Comment from a JSON string\ncomment_instance = Comment.from_json(json)\n# print the JSON string representation of the object\nprint(Comment.to_json())\n\n# convert the object into a dict\ncomment_dict = comment_instance.to_dict()\n# create an instance of Comment from a dict\ncomment_form_dict = comment.from_dict(comment_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/CompletedAt/","title":"CompletedAt","text":""},{"location":"apis/public_v2/docs/CompletedAt/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/CompletedAt/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.completed_at import CompletedAt\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CompletedAt from a JSON string\ncompleted_at_instance = CompletedAt.from_json(json)\n# print the JSON string representation of the object\nprint(CompletedAt.to_json())\n\n# convert the object into a dict\ncompleted_at_dict = completed_at_instance.to_dict()\n# create an instance of CompletedAt from a dict\ncompleted_at_form_dict = completed_at.from_dict(completed_at_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Config/","title":"Config","text":""},{"location":"apis/public_v2/docs/Config/#properties","title":"Properties","text":"Name Type Description Notes kind object [optional] config GenAIAWSBedrockConfig proj_params GenAIAWSBedrockProjParams [optional]"},{"location":"apis/public_v2/docs/Config/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.config import Config\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Config from a JSON string\nconfig_instance = Config.from_json(json)\n# print the JSON string representation of the object\nprint(Config.to_json())\n\n# convert the object into a dict\nconfig_dict = config_instance.to_dict()\n# create an instance of Config from a dict\nconfig_form_dict = config.from_dict(config_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/","title":"deepsearch.cps.apis.public_v2.ContentManagerApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description add_project_data_index_document_metadata POST /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/metadata Add Project Data Index Document Metadata get_all_project_data_index_documents GET /project/{proj_key}/data_indices/{index_key}/documents/ Get All Project Data Index Documents get_project_agents GET /project/{proj_key}/data_indices/documents/agents Get Project Agents get_project_conversion_statistics GET /project/{proj_key}/data_indices/{index_key}/documents/statistics Get Project Conversion Statistics get_project_data_index_document_artifacts GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/artifacts Get Project Data Index Document Artifacts get_project_data_index_document_events GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/doc_events Get Project Data Index Document Events get_project_data_index_document_markdown GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/Markdown Get Project Data Index Document Markdown get_project_data_index_document_metadata GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/metadata Get Project Data Index Document Metadata get_project_data_index_documents GET /project/{proj_key}/data_indices/{index_key}/documents/agent/{agent_name} Get Project Data Index Documents get_project_data_index_grouped_documents GET /project/{proj_key}/data_indices/{index_key}/documents/agent/{agent_name}/grouped Get Project Data Index Grouped Documents get_project_data_index_json_document GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/JSON Get Project Data Index Json Document get_project_data_index_pdf_document GET /project/{proj_key}/data_indices/{index_key}/documents/{document_hash}/PDF Get Project Data Index Pdf Document get_project_documents_by_transaction GET /project/{proj_key}/data_indices/{index_key}/documents/transactions/{transaction_id} Get Project Documents By Transaction get_project_index_upload_jobs GET /project/{proj_key}/data_indices/{index_key}/documents/upload_jobs Get Project Index Upload Jobs"},{"location":"apis/public_v2/docs/ContentManagerApi/#add_project_data_index_document_metadata","title":"add_project_data_index_document_metadata","text":"<p>add_project_data_index_document_metadata(index_key, document_hash, proj_key, document_meta)</p> <p>Add Project Data Index Document Metadata</p> <p>Insert project document metadata.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.document_meta import DocumentMeta\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    document_hash = 'document_hash_example' # str | \n    proj_key = 'proj_key_example' # str | \n    document_meta = deepsearch.cps.apis.public_v2.DocumentMeta() # DocumentMeta | \n\n    try:\n        # Add Project Data Index Document Metadata\n        api_instance.add_project_data_index_document_metadata(index_key, document_hash, proj_key, document_meta)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;add_project_data_index_document_metadata: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters","title":"Parameters","text":"Name Type Description Notes index_key str document_hash str proj_key str document_meta DocumentMeta"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 204 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_all_project_data_index_documents","title":"get_all_project_data_index_documents","text":"<p>ProjectDocuments get_all_project_data_index_documents(index_key, proj_key, page=page, page_size=page_size)</p> <p>Get All Project Data Index Documents</p> <p>Get all project documents</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_documents import ProjectDocuments\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n    page = 1 # int |  (optional) (default to 1)\n    page_size = 25 # int |  (optional) (default to 25)\n\n    try:\n        # Get All Project Data Index Documents\n        api_response = api_instance.get_all_project_data_index_documents(index_key, proj_key, page=page, page_size=page_size)\n        print(\"The response of ContentManagerApi-&gt;get_all_project_data_index_documents:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_all_project_data_index_documents: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str page int optional page_size int optional"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_1","title":"Return type","text":"<p>ProjectDocuments</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_1","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_agents","title":"get_project_agents","text":"<p>ProjectAgents get_project_agents(proj_key)</p> <p>Get Project Agents</p> <p>Get project agents.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_agents import ProjectAgents\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Agents\n        api_response = api_instance.get_project_agents(proj_key)\n        print(\"The response of ContentManagerApi-&gt;get_project_agents:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_agents: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes proj_key str"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_2","title":"Return type","text":"<p>ProjectAgents</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_2","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_conversion_statistics","title":"get_project_conversion_statistics","text":"<p>DocumentStatistics get_project_conversion_statistics(index_key, proj_key)</p> <p>Get Project Conversion Statistics</p> <p>Get project conversion statistics.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.document_statistics import DocumentStatistics\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Conversion Statistics\n        api_response = api_instance.get_project_conversion_statistics(index_key, proj_key)\n        print(\"The response of ContentManagerApi-&gt;get_project_conversion_statistics:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_conversion_statistics: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_3","title":"Return type","text":"<p>DocumentStatistics</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_3","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_data_index_document_artifacts","title":"get_project_data_index_document_artifacts","text":"<p>ResponseDocumentArtifacts get_project_data_index_document_artifacts(index_key, document_hash, proj_key)</p> <p>Get Project Data Index Document Artifacts</p> <p>Get project document artifacts.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.response_document_artifacts import ResponseDocumentArtifacts\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    document_hash = 'document_hash_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Data Index Document Artifacts\n        api_response = api_instance.get_project_data_index_document_artifacts(index_key, document_hash, proj_key)\n        print(\"The response of ContentManagerApi-&gt;get_project_data_index_document_artifacts:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_data_index_document_artifacts: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes index_key str document_hash str proj_key str"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_4","title":"Return type","text":"<p>ResponseDocumentArtifacts</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_4","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_data_index_document_events","title":"get_project_data_index_document_events","text":"<p>object get_project_data_index_document_events(index_key, document_hash, proj_key, agent_name=agent_name, status=status)</p> <p>Get Project Data Index Document Events</p> <p>Get events of a project document.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.status_filter import StatusFilter\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    document_hash = 'document_hash_example' # str | \n    proj_key = 'proj_key_example' # str | \n    agent_name = deepsearch.cps.apis.public_v2.AgentName() # AgentName |  (optional)\n    status = deepsearch.cps.apis.public_v2.StatusFilter() # StatusFilter |  (optional)\n\n    try:\n        # Get Project Data Index Document Events\n        api_response = api_instance.get_project_data_index_document_events(index_key, document_hash, proj_key, agent_name=agent_name, status=status)\n        print(\"The response of ContentManagerApi-&gt;get_project_data_index_document_events:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_data_index_document_events: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes index_key str document_hash str proj_key str agent_name AgentName [optional] status StatusFilter [optional]"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_5","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_data_index_document_markdown","title":"get_project_data_index_document_markdown","text":"<p>ProjectDocumentURL get_project_data_index_document_markdown(index_key, document_hash, proj_key)</p> <p>Get Project Data Index Document Markdown</p> <p>Get project document Markdown.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_6","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_document_url import ProjectDocumentURL\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    document_hash = 'document_hash_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Data Index Document Markdown\n        api_response = api_instance.get_project_data_index_document_markdown(index_key, document_hash, proj_key)\n        print(\"The response of ContentManagerApi-&gt;get_project_data_index_document_markdown:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_data_index_document_markdown: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes index_key str document_hash str proj_key str"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_6","title":"Return type","text":"<p>ProjectDocumentURL</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_6","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_6","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_6","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_data_index_document_metadata","title":"get_project_data_index_document_metadata","text":"<p>ProjectDocument get_project_data_index_document_metadata(index_key, document_hash, proj_key)</p> <p>Get Project Data Index Document Metadata</p> <p>Get project document metadata.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_7","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_document import ProjectDocument\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    document_hash = 'document_hash_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Data Index Document Metadata\n        api_response = api_instance.get_project_data_index_document_metadata(index_key, document_hash, proj_key)\n        print(\"The response of ContentManagerApi-&gt;get_project_data_index_document_metadata:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_data_index_document_metadata: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes index_key str document_hash str proj_key str"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_7","title":"Return type","text":"<p>ProjectDocument</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_7","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_7","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_7","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_data_index_documents","title":"get_project_data_index_documents","text":"<p>ProjectDocuments get_project_data_index_documents(index_key, agent_name, proj_key, status=status, page=page, page_size=page_size)</p> <p>Get Project Data Index Documents</p> <p>Get project documents, can be filter by status.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_8","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_documents import ProjectDocuments\nfrom deepsearch.cps.apis.public_v2.models.status_filter import StatusFilter\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    agent_name = 'agent_name_example' # str | \n    proj_key = 'proj_key_example' # str | \n    status = deepsearch.cps.apis.public_v2.StatusFilter() # StatusFilter |  (optional)\n    page = 1 # int |  (optional) (default to 1)\n    page_size = 25 # int |  (optional) (default to 25)\n\n    try:\n        # Get Project Data Index Documents\n        api_response = api_instance.get_project_data_index_documents(index_key, agent_name, proj_key, status=status, page=page, page_size=page_size)\n        print(\"The response of ContentManagerApi-&gt;get_project_data_index_documents:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_data_index_documents: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_8","title":"Parameters","text":"Name Type Description Notes index_key str agent_name str proj_key str status StatusFilter [optional] page int optional page_size int optional"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_8","title":"Return type","text":"<p>ProjectDocuments</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_8","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_8","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_8","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_data_index_grouped_documents","title":"get_project_data_index_grouped_documents","text":"<p>ResponseGroupedDocuments get_project_data_index_grouped_documents(index_key, agent_name, proj_key, status=status, page=page, page_size=page_size)</p> <p>Get Project Data Index Grouped Documents</p> <p>Get project documents grouped by upload.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_9","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.response_grouped_documents import ResponseGroupedDocuments\nfrom deepsearch.cps.apis.public_v2.models.status_filter import StatusFilter\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    agent_name = 'agent_name_example' # str | \n    proj_key = 'proj_key_example' # str | \n    status = deepsearch.cps.apis.public_v2.StatusFilter() # StatusFilter |  (optional)\n    page = 1 # int |  (optional) (default to 1)\n    page_size = 25 # int |  (optional) (default to 25)\n\n    try:\n        # Get Project Data Index Grouped Documents\n        api_response = api_instance.get_project_data_index_grouped_documents(index_key, agent_name, proj_key, status=status, page=page, page_size=page_size)\n        print(\"The response of ContentManagerApi-&gt;get_project_data_index_grouped_documents:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_data_index_grouped_documents: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_9","title":"Parameters","text":"Name Type Description Notes index_key str agent_name str proj_key str status StatusFilter [optional] page int optional page_size int optional"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_9","title":"Return type","text":"<p>ResponseGroupedDocuments</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_9","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_9","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_9","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_data_index_json_document","title":"get_project_data_index_json_document","text":"<p>object get_project_data_index_json_document(index_key, document_hash, proj_key)</p> <p>Get Project Data Index Json Document</p> <p>Get project JSON document.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_10","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    document_hash = 'document_hash_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Data Index Json Document\n        api_response = api_instance.get_project_data_index_json_document(index_key, document_hash, proj_key)\n        print(\"The response of ContentManagerApi-&gt;get_project_data_index_json_document:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_data_index_json_document: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_10","title":"Parameters","text":"Name Type Description Notes index_key str document_hash str proj_key str"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_10","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_10","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_10","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_10","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_data_index_pdf_document","title":"get_project_data_index_pdf_document","text":"<p>ProjectDocumentURL get_project_data_index_pdf_document(index_key, document_hash, proj_key)</p> <p>Get Project Data Index Pdf Document</p> <p>Get project PDF document.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_11","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_document_url import ProjectDocumentURL\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    document_hash = 'document_hash_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Data Index Pdf Document\n        api_response = api_instance.get_project_data_index_pdf_document(index_key, document_hash, proj_key)\n        print(\"The response of ContentManagerApi-&gt;get_project_data_index_pdf_document:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_data_index_pdf_document: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_11","title":"Parameters","text":"Name Type Description Notes index_key str document_hash str proj_key str"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_11","title":"Return type","text":"<p>ProjectDocumentURL</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_11","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_11","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_11","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_documents_by_transaction","title":"get_project_documents_by_transaction","text":"<p>ProjectDocuments get_project_documents_by_transaction(index_key, transaction_id, proj_key)</p> <p>Get Project Documents By Transaction</p> <p>Get project documents by transaction ID.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_12","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_documents import ProjectDocuments\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    transaction_id = 'transaction_id_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Documents By Transaction\n        api_response = api_instance.get_project_documents_by_transaction(index_key, transaction_id, proj_key)\n        print(\"The response of ContentManagerApi-&gt;get_project_documents_by_transaction:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_documents_by_transaction: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_12","title":"Parameters","text":"Name Type Description Notes index_key str transaction_id str proj_key str"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_12","title":"Return type","text":"<p>ProjectDocuments</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_12","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_12","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_12","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#get_project_index_upload_jobs","title":"get_project_index_upload_jobs","text":"<p>ResponseUploadJobs get_project_index_upload_jobs(index_key, proj_key)</p> <p>Get Project Index Upload Jobs</p> <p>Get project upload jobs.</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#example_13","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.response_upload_jobs import ResponseUploadJobs\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ContentManagerApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Index Upload Jobs\n        api_response = api_instance.get_project_index_upload_jobs(index_key, proj_key)\n        print(\"The response of ContentManagerApi-&gt;get_project_index_upload_jobs:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ContentManagerApi-&gt;get_project_index_upload_jobs: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ContentManagerApi/#parameters_13","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str"},{"location":"apis/public_v2/docs/ContentManagerApi/#return-type_13","title":"Return type","text":"<p>ResponseUploadJobs</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#authorization_13","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-request-headers_13","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ContentManagerApi/#http-response-details_13","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConversionSettings/","title":"ConversionSettings","text":"<p>Specify the conversion settings to use.</p>"},{"location":"apis/public_v2/docs/ConversionSettings/#properties","title":"Properties","text":"Name Type Description Notes ocr PartialDirectConversionParametersOcr [optional] table_structure TableStructureOptions [optional] generate_page_images object [optional] type object [optional] assemble PartialDirectConversionParametersAssemble [optional] metadata PartialDirectConversionParametersMetadata [optional] page_labels PageLabels [optional] model_pipeline PartialDirectConversionParametersModelPipeline [optional]"},{"location":"apis/public_v2/docs/ConversionSettings/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.conversion_settings import ConversionSettings\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConversionSettings from a JSON string\nconversion_settings_instance = ConversionSettings.from_json(json)\n# print the JSON string representation of the object\nprint(ConversionSettings.to_json())\n\n# convert the object into a dict\nconversion_settings_dict = conversion_settings_instance.to_dict()\n# create an instance of ConversionSettings from a dict\nconversion_settings_form_dict = conversion_settings.from_dict(conversion_settings_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertDocumentRequest/","title":"ConvertDocumentRequest","text":""},{"location":"apis/public_v2/docs/ConvertDocumentRequest/#properties","title":"Properties","text":"Name Type Description Notes http_source ConvertDocumentRequestHttpSource [optional] file_source ConvertDocumentRequestFileSource [optional] settings ConvertDocumentRequestSettings [optional] image_urls ConvertDocumentRequestImageUrls [optional] truncate_pages TruncatePages [optional]"},{"location":"apis/public_v2/docs/ConvertDocumentRequest/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_document_request import ConvertDocumentRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertDocumentRequest from a JSON string\nconvert_document_request_instance = ConvertDocumentRequest.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertDocumentRequest.to_json())\n\n# convert the object into a dict\nconvert_document_request_dict = convert_document_request_instance.to_dict()\n# create an instance of ConvertDocumentRequest from a dict\nconvert_document_request_form_dict = convert_document_request.from_dict(convert_document_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertDocumentRequestFileSource/","title":"ConvertDocumentRequestFileSource","text":""},{"location":"apis/public_v2/docs/ConvertDocumentRequestFileSource/#properties","title":"Properties","text":"Name Type Description Notes base64_string object filename object"},{"location":"apis/public_v2/docs/ConvertDocumentRequestFileSource/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_document_request_file_source import ConvertDocumentRequestFileSource\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertDocumentRequestFileSource from a JSON string\nconvert_document_request_file_source_instance = ConvertDocumentRequestFileSource.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertDocumentRequestFileSource.to_json())\n\n# convert the object into a dict\nconvert_document_request_file_source_dict = convert_document_request_file_source_instance.to_dict()\n# create an instance of ConvertDocumentRequestFileSource from a dict\nconvert_document_request_file_source_form_dict = convert_document_request_file_source.from_dict(convert_document_request_file_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertDocumentRequestHttpSource/","title":"ConvertDocumentRequestHttpSource","text":""},{"location":"apis/public_v2/docs/ConvertDocumentRequestHttpSource/#properties","title":"Properties","text":"Name Type Description Notes url object headers object"},{"location":"apis/public_v2/docs/ConvertDocumentRequestHttpSource/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_document_request_http_source import ConvertDocumentRequestHttpSource\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertDocumentRequestHttpSource from a JSON string\nconvert_document_request_http_source_instance = ConvertDocumentRequestHttpSource.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertDocumentRequestHttpSource.to_json())\n\n# convert the object into a dict\nconvert_document_request_http_source_dict = convert_document_request_http_source_instance.to_dict()\n# create an instance of ConvertDocumentRequestHttpSource from a dict\nconvert_document_request_http_source_form_dict = convert_document_request_http_source.from_dict(convert_document_request_http_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertDocumentRequestImageUrls/","title":"ConvertDocumentRequestImageUrls","text":""},{"location":"apis/public_v2/docs/ConvertDocumentRequestImageUrls/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/ConvertDocumentRequestImageUrls/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_document_request_image_urls import ConvertDocumentRequestImageUrls\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertDocumentRequestImageUrls from a JSON string\nconvert_document_request_image_urls_instance = ConvertDocumentRequestImageUrls.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertDocumentRequestImageUrls.to_json())\n\n# convert the object into a dict\nconvert_document_request_image_urls_dict = convert_document_request_image_urls_instance.to_dict()\n# create an instance of ConvertDocumentRequestImageUrls from a dict\nconvert_document_request_image_urls_form_dict = convert_document_request_image_urls.from_dict(convert_document_request_image_urls_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertDocumentRequestSettings/","title":"ConvertDocumentRequestSettings","text":""},{"location":"apis/public_v2/docs/ConvertDocumentRequestSettings/#properties","title":"Properties","text":"Name Type Description Notes ocr OCROptions [optional] table_structure TableStructureOptions [optional] generate_page_images object [optional]"},{"location":"apis/public_v2/docs/ConvertDocumentRequestSettings/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_document_request_settings import ConvertDocumentRequestSettings\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertDocumentRequestSettings from a JSON string\nconvert_document_request_settings_instance = ConvertDocumentRequestSettings.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertDocumentRequestSettings.to_json())\n\n# convert the object into a dict\nconvert_document_request_settings_dict = convert_document_request_settings_instance.to_dict()\n# create an instance of ConvertDocumentRequestSettings from a dict\nconvert_document_request_settings_form_dict = convert_document_request_settings.from_dict(convert_document_request_settings_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertDocumentsRequestBody/","title":"ConvertDocumentsRequestBody","text":""},{"location":"apis/public_v2/docs/ConvertDocumentsRequestBody/#properties","title":"Properties","text":"Name Type Description Notes conversion_settings ConversionSettings [optional] target_settings ConvertDocumentsRequestBodyTargetSettings [optional] document_hashes DocumentHashes [optional] without_operations WithoutOperations [optional] upload_to_elastic UploadToElastic [optional]"},{"location":"apis/public_v2/docs/ConvertDocumentsRequestBody/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_documents_request_body import ConvertDocumentsRequestBody\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertDocumentsRequestBody from a JSON string\nconvert_documents_request_body_instance = ConvertDocumentsRequestBody.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertDocumentsRequestBody.to_json())\n\n# convert the object into a dict\nconvert_documents_request_body_dict = convert_documents_request_body_instance.to_dict()\n# create an instance of ConvertDocumentsRequestBody from a dict\nconvert_documents_request_body_form_dict = convert_documents_request_body.from_dict(convert_documents_request_body_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertDocumentsRequestBodyTargetSettings/","title":"ConvertDocumentsRequestBodyTargetSettings","text":"<p>Specify the target settings to use.</p>"},{"location":"apis/public_v2/docs/ConvertDocumentsRequestBodyTargetSettings/#properties","title":"Properties","text":"Name Type Description Notes add_raw_pages AddRawPages [optional] add_annotations AddAnnotations [optional]"},{"location":"apis/public_v2/docs/ConvertDocumentsRequestBodyTargetSettings/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_documents_request_body_target_settings import ConvertDocumentsRequestBodyTargetSettings\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertDocumentsRequestBodyTargetSettings from a JSON string\nconvert_documents_request_body_target_settings_instance = ConvertDocumentsRequestBodyTargetSettings.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertDocumentsRequestBodyTargetSettings.to_json())\n\n# convert the object into a dict\nconvert_documents_request_body_target_settings_dict = convert_documents_request_body_target_settings_instance.to_dict()\n# create an instance of ConvertDocumentsRequestBodyTargetSettings from a dict\nconvert_documents_request_body_target_settings_form_dict = convert_documents_request_body_target_settings.from_dict(convert_documents_request_body_target_settings_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertDocumentsSources/","title":"ConvertDocumentsSources","text":""},{"location":"apis/public_v2/docs/ConvertDocumentsSources/#properties","title":"Properties","text":"Name Type Description Notes file_url FileUrl [optional] http_source HttpSource [optional] s3_source ConvertDocumentsSourcesS3Source [optional]"},{"location":"apis/public_v2/docs/ConvertDocumentsSources/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_documents_sources import ConvertDocumentsSources\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertDocumentsSources from a JSON string\nconvert_documents_sources_instance = ConvertDocumentsSources.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertDocumentsSources.to_json())\n\n# convert the object into a dict\nconvert_documents_sources_dict = convert_documents_sources_instance.to_dict()\n# create an instance of ConvertDocumentsSources from a dict\nconvert_documents_sources_form_dict = convert_documents_sources.from_dict(convert_documents_sources_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertDocumentsSourcesS3Source/","title":"ConvertDocumentsSourcesS3Source","text":"<p>Coordinates to object store to get files to convert. Can specify which files with object keys.</p>"},{"location":"apis/public_v2/docs/ConvertDocumentsSourcesS3Source/#properties","title":"Properties","text":"Name Type Description Notes coordinates S3Coordinates object_keys ObjectKeys [optional]"},{"location":"apis/public_v2/docs/ConvertDocumentsSourcesS3Source/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_documents_sources_s3_source import ConvertDocumentsSourcesS3Source\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertDocumentsSourcesS3Source from a JSON string\nconvert_documents_sources_s3_source_instance = ConvertDocumentsSourcesS3Source.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertDocumentsSourcesS3Source.to_json())\n\n# convert the object into a dict\nconvert_documents_sources_s3_source_dict = convert_documents_sources_s3_source_instance.to_dict()\n# create an instance of ConvertDocumentsSourcesS3Source from a dict\nconvert_documents_sources_s3_source_form_dict = convert_documents_sources_s3_source.from_dict(convert_documents_sources_s3_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertUploadDocumentsRequestBody/","title":"ConvertUploadDocumentsRequestBody","text":""},{"location":"apis/public_v2/docs/ConvertUploadDocumentsRequestBody/#properties","title":"Properties","text":"Name Type Description Notes file_url FileUrl [optional] http_source HttpSource [optional] s3_source ConvertDocumentsSourcesS3Source [optional] upload_to_elastic UploadToElastic [optional] meta ConvertUploadDocumentsRequestBodyMeta [optional] conversion_settings ConversionSettings [optional] target_settings ConvertDocumentsRequestBodyTargetSettings [optional]"},{"location":"apis/public_v2/docs/ConvertUploadDocumentsRequestBody/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_upload_documents_request_body import ConvertUploadDocumentsRequestBody\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertUploadDocumentsRequestBody from a JSON string\nconvert_upload_documents_request_body_instance = ConvertUploadDocumentsRequestBody.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertUploadDocumentsRequestBody.to_json())\n\n# convert the object into a dict\nconvert_upload_documents_request_body_dict = convert_upload_documents_request_body_instance.to_dict()\n# create an instance of ConvertUploadDocumentsRequestBody from a dict\nconvert_upload_documents_request_body_form_dict = convert_upload_documents_request_body.from_dict(convert_upload_documents_request_body_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ConvertUploadDocumentsRequestBodyMeta/","title":"ConvertUploadDocumentsRequestBodyMeta","text":""},{"location":"apis/public_v2/docs/ConvertUploadDocumentsRequestBodyMeta/#properties","title":"Properties","text":"Name Type Description Notes filename Filename [optional] description DocumentMetaDescription [optional] identifiers Identifiers [optional]"},{"location":"apis/public_v2/docs/ConvertUploadDocumentsRequestBodyMeta/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.convert_upload_documents_request_body_meta import ConvertUploadDocumentsRequestBodyMeta\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ConvertUploadDocumentsRequestBodyMeta from a JSON string\nconvert_upload_documents_request_body_meta_instance = ConvertUploadDocumentsRequestBodyMeta.from_json(json)\n# print the JSON string representation of the object\nprint(ConvertUploadDocumentsRequestBodyMeta.to_json())\n\n# convert the object into a dict\nconvert_upload_documents_request_body_meta_dict = convert_upload_documents_request_body_meta_instance.to_dict()\n# create an instance of ConvertUploadDocumentsRequestBodyMeta from a dict\nconvert_upload_documents_request_body_meta_form_dict = convert_upload_documents_request_body_meta.from_dict(convert_upload_documents_request_body_meta_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/CpsTask/","title":"CpsTask","text":""},{"location":"apis/public_v2/docs/CpsTask/#properties","title":"Properties","text":"Name Type Description Notes task_id str task_type str task_status str"},{"location":"apis/public_v2/docs/CpsTask/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.cps_task import CpsTask\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of CpsTask from a JSON string\ncps_task_instance = CpsTask.from_json(json)\n# print the JSON string representation of the object\nprint(CpsTask.to_json())\n\n# convert the object into a dict\ncps_task_dict = cps_task_instance.to_dict()\n# create an instance of CpsTask from a dict\ncps_task_form_dict = cps_task.from_dict(cps_task_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Created/","title":"Created","text":""},{"location":"apis/public_v2/docs/Created/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Created/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.created import Created\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Created from a JSON string\ncreated_instance = Created.from_json(json)\n# print the JSON string representation of the object\nprint(Created.to_json())\n\n# convert the object into a dict\ncreated_dict = created_instance.to_dict()\n# create an instance of Created from a dict\ncreated_form_dict = created.from_dict(created_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Data/","title":"Data","text":""},{"location":"apis/public_v2/docs/Data/#properties","title":"Properties","text":"Name Type Description Notes name object description Description [optional] view_of ViewOf schema_key object [optional]"},{"location":"apis/public_v2/docs/Data/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.data import Data\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Data from a JSON string\ndata_instance = Data.from_json(json)\n# print the JSON string representation of the object\nprint(Data.to_json())\n\n# convert the object into a dict\ndata_dict = data_instance.to_dict()\n# create an instance of Data from a dict\ndata_form_dict = data.from_dict(data_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataFlow/","title":"DataFlow","text":""},{"location":"apis/public_v2/docs/DataFlow/#properties","title":"Properties","text":"Name Type Description Notes df_tpl_key str name str"},{"location":"apis/public_v2/docs/DataFlow/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.data_flow import DataFlow\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DataFlow from a JSON string\ndata_flow_instance = DataFlow.from_json(json)\n# print the JSON string representation of the object\nprint(DataFlow.to_json())\n\n# convert the object into a dict\ndata_flow_dict = data_flow_instance.to_dict()\n# create an instance of DataFlow from a dict\ndata_flow_form_dict = data_flow.from_dict(data_flow_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndexUploadFileSource/","title":"DataIndexUploadFileSource","text":""},{"location":"apis/public_v2/docs/DataIndexUploadFileSource/#properties","title":"Properties","text":"Name Type Description Notes conversion_settings ConversionSettings [optional] target_settings ConvertDocumentsRequestBodyTargetSettings [optional] urls Urls headers Headers [optional]"},{"location":"apis/public_v2/docs/DataIndexUploadFileSource/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.data_index_upload_file_source import DataIndexUploadFileSource\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DataIndexUploadFileSource from a JSON string\ndata_index_upload_file_source_instance = DataIndexUploadFileSource.from_json(json)\n# print the JSON string representation of the object\nprint(DataIndexUploadFileSource.to_json())\n\n# convert the object into a dict\ndata_index_upload_file_source_dict = data_index_upload_file_source_instance.to_dict()\n# create an instance of DataIndexUploadFileSource from a dict\ndata_index_upload_file_source_form_dict = data_index_upload_file_source.from_dict(data_index_upload_file_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/","title":"deepsearch.cps.apis.public_v2.DataIndicesApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description create_project_data_index POST /project/{proj_key}/data_indices Create Project Data Index create_project_data_index_delete_token POST /project/{proj_key}/data_indices/{index_key}/delete_token Create Project Data Index Delete Token delete_project_data_index DELETE /project/{proj_key}/data_indices/{index_key} Delete Project Data Index get_project_data_index GET /project/{proj_key}/data_indices/{index_key} Get Project Data Index get_project_data_index_conversion_settings GET /project/{proj_key}/data_indices/{index_key}/conversion_settings Get Project Data Index Conversion Settings get_project_data_indices GET /project/{proj_key}/data_indices Get Project Data Indices update_project_data_index PATCH /project/{proj_key}/data_indices/{index_key} Update Project Data Index update_project_data_index_conversion_settings PATCH /project/{proj_key}/data_indices/{index_key}/conversion_settings Update Project Data Index Conversion Settings"},{"location":"apis/public_v2/docs/DataIndicesApi/#create_project_data_index","title":"create_project_data_index","text":"<p>ProjectDataIndexWithStatus create_project_data_index(proj_key, data)</p> <p>Create Project Data Index</p> <p>Create a project data index.</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.data import Data\nfrom deepsearch.cps.apis.public_v2.models.project_data_index_with_status import ProjectDataIndexWithStatus\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    data = deepsearch.cps.apis.public_v2.Data() # Data | \n\n    try:\n        # Create Project Data Index\n        api_response = api_instance.create_project_data_index(proj_key, data)\n        print(\"The response of DataIndicesApi-&gt;create_project_data_index:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesApi-&gt;create_project_data_index: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesApi/#parameters","title":"Parameters","text":"Name Type Description Notes proj_key str data Data"},{"location":"apis/public_v2/docs/DataIndicesApi/#return-type","title":"Return type","text":"<p>ProjectDataIndexWithStatus</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#create_project_data_index_delete_token","title":"create_project_data_index_delete_token","text":"<p>TokenResponse create_project_data_index_delete_token(index_key, proj_key)</p> <p>Create Project Data Index Delete Token</p> <p>Get a token used to confirm the deletion of a project data index.</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.token_response import TokenResponse\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Create Project Data Index Delete Token\n        api_response = api_instance.create_project_data_index_delete_token(index_key, proj_key)\n        print(\"The response of DataIndicesApi-&gt;create_project_data_index_delete_token:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesApi-&gt;create_project_data_index_delete_token: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str"},{"location":"apis/public_v2/docs/DataIndicesApi/#return-type_1","title":"Return type","text":"<p>TokenResponse</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#authorization_1","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#delete_project_data_index","title":"delete_project_data_index","text":"<p>object delete_project_data_index(index_key, proj_key, confirmation_token)</p> <p>Delete Project Data Index</p> <p>Delete a project index data.</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n    confirmation_token = 'confirmation_token_example' # str | \n\n    try:\n        # Delete Project Data Index\n        api_response = api_instance.delete_project_data_index(index_key, proj_key, confirmation_token)\n        print(\"The response of DataIndicesApi-&gt;delete_project_data_index:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesApi-&gt;delete_project_data_index: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str confirmation_token str"},{"location":"apis/public_v2/docs/DataIndicesApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#authorization_2","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#get_project_data_index","title":"get_project_data_index","text":"<p>ProjectDataIndexWithStatus get_project_data_index(index_key, proj_key)</p> <p>Get Project Data Index</p> <p>Get project data index.</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_data_index_with_status import ProjectDataIndexWithStatus\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Data Index\n        api_response = api_instance.get_project_data_index(index_key, proj_key)\n        print(\"The response of DataIndicesApi-&gt;get_project_data_index:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesApi-&gt;get_project_data_index: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str"},{"location":"apis/public_v2/docs/DataIndicesApi/#return-type_3","title":"Return type","text":"<p>ProjectDataIndexWithStatus</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#authorization_3","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#get_project_data_index_conversion_settings","title":"get_project_data_index_conversion_settings","text":"<p>ResponseGetProjectDataIndexConversionSettings get_project_data_index_conversion_settings(index_key, proj_key)</p> <p>Get Project Data Index Conversion Settings</p> <p>Get project data index conversion settings.</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.response_get_project_data_index_conversion_settings import ResponseGetProjectDataIndexConversionSettings\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Data Index Conversion Settings\n        api_response = api_instance.get_project_data_index_conversion_settings(index_key, proj_key)\n        print(\"The response of DataIndicesApi-&gt;get_project_data_index_conversion_settings:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesApi-&gt;get_project_data_index_conversion_settings: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str"},{"location":"apis/public_v2/docs/DataIndicesApi/#return-type_4","title":"Return type","text":"<p>ResponseGetProjectDataIndexConversionSettings</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#authorization_4","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#get_project_data_indices","title":"get_project_data_indices","text":"<p>List[ProjectDataIndexWithStatus] get_project_data_indices(proj_key)</p> <p>Get Project Data Indices</p> <p>Get project data indices.</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_data_index_with_status import ProjectDataIndexWithStatus\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesApi(api_client)\n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Data Indices\n        api_response = api_instance.get_project_data_indices(proj_key)\n        print(\"The response of DataIndicesApi-&gt;get_project_data_indices:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesApi-&gt;get_project_data_indices: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes proj_key str"},{"location":"apis/public_v2/docs/DataIndicesApi/#return-type_5","title":"Return type","text":"<p>List[ProjectDataIndexWithStatus]</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#authorization_5","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#update_project_data_index","title":"update_project_data_index","text":"<p>ProjectDataIndexWithStatus update_project_data_index(index_key, proj_key, data)</p> <p>Update Project Data Index</p> <p>Update a project data index.</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#example_6","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.data import Data\nfrom deepsearch.cps.apis.public_v2.models.project_data_index_with_status import ProjectDataIndexWithStatus\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n    data = deepsearch.cps.apis.public_v2.Data() # Data | \n\n    try:\n        # Update Project Data Index\n        api_response = api_instance.update_project_data_index(index_key, proj_key, data)\n        print(\"The response of DataIndicesApi-&gt;update_project_data_index:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesApi-&gt;update_project_data_index: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str data Data"},{"location":"apis/public_v2/docs/DataIndicesApi/#return-type_6","title":"Return type","text":"<p>ProjectDataIndexWithStatus</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#authorization_6","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-request-headers_6","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-response-details_6","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#update_project_data_index_conversion_settings","title":"update_project_data_index_conversion_settings","text":"<p>ResponseUpdateProjectDataIndexConversionSettings update_project_data_index_conversion_settings(index_key, proj_key, project_data_index_conversion_settings_input)</p> <p>Update Project Data Index Conversion Settings</p> <p>Update a project data index conversion settings.</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#example_7","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_data_index_conversion_settings_input import ProjectDataIndexConversionSettingsInput\nfrom deepsearch.cps.apis.public_v2.models.response_update_project_data_index_conversion_settings import ResponseUpdateProjectDataIndexConversionSettings\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n    project_data_index_conversion_settings_input = deepsearch.cps.apis.public_v2.ProjectDataIndexConversionSettingsInput() # ProjectDataIndexConversionSettingsInput | \n\n    try:\n        # Update Project Data Index Conversion Settings\n        api_response = api_instance.update_project_data_index_conversion_settings(index_key, proj_key, project_data_index_conversion_settings_input)\n        print(\"The response of DataIndicesApi-&gt;update_project_data_index_conversion_settings:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesApi-&gt;update_project_data_index_conversion_settings: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str project_data_index_conversion_settings_input ProjectDataIndexConversionSettingsInput"},{"location":"apis/public_v2/docs/DataIndicesApi/#return-type_7","title":"Return type","text":"<p>ResponseUpdateProjectDataIndexConversionSettings</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#authorization_7","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-request-headers_7","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesApi/#http-response-details_7","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/","title":"deepsearch.cps.apis.public_v2.DataIndicesUploadApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description ccs_convert_file_project_data_index POST /project/{proj_key}/data_indices/{index_key}/actions/ccs_convert Ccs Convert File Project Data Index ccs_convert_upload_file_project_data_index POST /project/{proj_key}/data_indices/{index_key}/actions/ccs_convert_upload Ccs Convert Upload File Project Data Index get_attachment_upload_data GET /project/{proj_key}/data_indices/{index_key}/documents/{index_item_id}/attachment_url/{filename} Get Attachment Upload Data html_print_convert_upload POST /project/{proj_key}/data_indices/{index_key}/actions/html_print_convert_upload Html Print Convert Upload load_project_data_index_files_elastic POST /project/{proj_key}/data_indices/{index_key}/actions/load_elastic Load Project Data Index Files Elastic register_attachment POST /project/{proj_key}/data_indices/{index_key}/documents/{index_item_id}/attachment Register Attachment upload_project_data_index_file POST /project/{proj_key}/data_indices/{index_key}/actions/upload Upload Project Data Index File upload_register_project_documents POST /project/{proj_key}/data_indices/{index_key}/actions/upload_register_documents Upload Register Project Documents"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#ccs_convert_file_project_data_index","title":"ccs_convert_file_project_data_index","text":"<p>CpsTask ccs_convert_file_project_data_index(index_key, proj_key, convert_documents_request_body)</p> <p>Ccs Convert File Project Data Index</p> <p>Convert files via CCS previously registered and in a project data index.</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.convert_documents_request_body import ConvertDocumentsRequestBody\nfrom deepsearch.cps.apis.public_v2.models.cps_task import CpsTask\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesUploadApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n    convert_documents_request_body = deepsearch.cps.apis.public_v2.ConvertDocumentsRequestBody() # ConvertDocumentsRequestBody | \n\n    try:\n        # Ccs Convert File Project Data Index\n        api_response = api_instance.ccs_convert_file_project_data_index(index_key, proj_key, convert_documents_request_body)\n        print(\"The response of DataIndicesUploadApi-&gt;ccs_convert_file_project_data_index:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesUploadApi-&gt;ccs_convert_file_project_data_index: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#parameters","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str convert_documents_request_body ConvertDocumentsRequestBody"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#return-type","title":"Return type","text":"<p>CpsTask</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#ccs_convert_upload_file_project_data_index","title":"ccs_convert_upload_file_project_data_index","text":"<p>CpsTask ccs_convert_upload_file_project_data_index(index_key, proj_key, convert_upload_documents_request_body)</p> <p>Ccs Convert Upload File Project Data Index</p> <p>Convert files via CCS and upload to a project data index (only for indices with 'deepsearch-doc' schema).</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.convert_upload_documents_request_body import ConvertUploadDocumentsRequestBody\nfrom deepsearch.cps.apis.public_v2.models.cps_task import CpsTask\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesUploadApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n    convert_upload_documents_request_body = deepsearch.cps.apis.public_v2.ConvertUploadDocumentsRequestBody() # ConvertUploadDocumentsRequestBody | \n\n    try:\n        # Ccs Convert Upload File Project Data Index\n        api_response = api_instance.ccs_convert_upload_file_project_data_index(index_key, proj_key, convert_upload_documents_request_body)\n        print(\"The response of DataIndicesUploadApi-&gt;ccs_convert_upload_file_project_data_index:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesUploadApi-&gt;ccs_convert_upload_file_project_data_index: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str convert_upload_documents_request_body ConvertUploadDocumentsRequestBody"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#return-type_1","title":"Return type","text":"<p>CpsTask</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#authorization_1","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#get_attachment_upload_data","title":"get_attachment_upload_data","text":"<p>AttachmentUploadData get_attachment_upload_data(index_key, index_item_id, filename, proj_key)</p> <p>Get Attachment Upload Data</p> <p>Get url and path to upload an attachment to a project data index.</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.attachment_upload_data import AttachmentUploadData\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesUploadApi(api_client)\n    index_key = 'index_key_example' # str | \n    index_item_id = 'index_item_id_example' # str | \n    filename = 'filename_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Attachment Upload Data\n        api_response = api_instance.get_attachment_upload_data(index_key, index_item_id, filename, proj_key)\n        print(\"The response of DataIndicesUploadApi-&gt;get_attachment_upload_data:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesUploadApi-&gt;get_attachment_upload_data: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes index_key str index_item_id str filename str proj_key str"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#return-type_2","title":"Return type","text":"<p>AttachmentUploadData</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#authorization_2","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#html_print_convert_upload","title":"html_print_convert_upload","text":"<p>CpsTask html_print_convert_upload(index_key, proj_key, data_index_upload_file_source)</p> <p>Html Print Convert Upload</p> <p>Convert a list of HTML pages to PDF, convert them via CCS and upload to a project data index (only for indices with 'deepsearch-doc' schema).</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.cps_task import CpsTask\nfrom deepsearch.cps.apis.public_v2.models.data_index_upload_file_source import DataIndexUploadFileSource\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesUploadApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n    data_index_upload_file_source = deepsearch.cps.apis.public_v2.DataIndexUploadFileSource() # DataIndexUploadFileSource | \n\n    try:\n        # Html Print Convert Upload\n        api_response = api_instance.html_print_convert_upload(index_key, proj_key, data_index_upload_file_source)\n        print(\"The response of DataIndicesUploadApi-&gt;html_print_convert_upload:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesUploadApi-&gt;html_print_convert_upload: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str data_index_upload_file_source DataIndexUploadFileSource"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#return-type_3","title":"Return type","text":"<p>CpsTask</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#authorization_3","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#load_project_data_index_files_elastic","title":"load_project_data_index_files_elastic","text":"<p>CpsTask load_project_data_index_files_elastic(index_key, proj_key, upload_elastic_request_body)</p> <p>Load Project Data Index Files Elastic</p> <p>Load file(s) in a project data index to elastic.</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.cps_task import CpsTask\nfrom deepsearch.cps.apis.public_v2.models.upload_elastic_request_body import UploadElasticRequestBody\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesUploadApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n    upload_elastic_request_body = deepsearch.cps.apis.public_v2.UploadElasticRequestBody() # UploadElasticRequestBody | \n\n    try:\n        # Load Project Data Index Files Elastic\n        api_response = api_instance.load_project_data_index_files_elastic(index_key, proj_key, upload_elastic_request_body)\n        print(\"The response of DataIndicesUploadApi-&gt;load_project_data_index_files_elastic:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesUploadApi-&gt;load_project_data_index_files_elastic: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str upload_elastic_request_body UploadElasticRequestBody"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#return-type_4","title":"Return type","text":"<p>CpsTask</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#authorization_4","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#register_attachment","title":"register_attachment","text":"<p>register_attachment(index_key, index_item_id, proj_key, attachment_upload_request_body)</p> <p>Register Attachment</p> <p>Notify upload completion of an attachment to a project data index.</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.attachment_upload_request_body import AttachmentUploadRequestBody\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesUploadApi(api_client)\n    index_key = 'index_key_example' # str | \n    index_item_id = 'index_item_id_example' # str | \n    proj_key = 'proj_key_example' # str | \n    attachment_upload_request_body = deepsearch.cps.apis.public_v2.AttachmentUploadRequestBody() # AttachmentUploadRequestBody | \n\n    try:\n        # Register Attachment\n        api_instance.register_attachment(index_key, index_item_id, proj_key, attachment_upload_request_body)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesUploadApi-&gt;register_attachment: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes index_key str index_item_id str proj_key str attachment_upload_request_body AttachmentUploadRequestBody"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#return-type_5","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#authorization_5","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 204 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#upload_project_data_index_file","title":"upload_project_data_index_file","text":"<p>CpsTask upload_project_data_index_file(index_key, proj_key, json_upload_request_body)</p> <p>Upload Project Data Index File</p> <p>Upload a file to a project data index.</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#example_6","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.cps_task import CpsTask\nfrom deepsearch.cps.apis.public_v2.models.json_upload_request_body import JsonUploadRequestBody\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesUploadApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n    json_upload_request_body = deepsearch.cps.apis.public_v2.JsonUploadRequestBody() # JsonUploadRequestBody | \n\n    try:\n        # Upload Project Data Index File\n        api_response = api_instance.upload_project_data_index_file(index_key, proj_key, json_upload_request_body)\n        print(\"The response of DataIndicesUploadApi-&gt;upload_project_data_index_file:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesUploadApi-&gt;upload_project_data_index_file: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str json_upload_request_body JsonUploadRequestBody"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#return-type_6","title":"Return type","text":"<p>CpsTask</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#authorization_6","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-request-headers_6","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-response-details_6","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#upload_register_project_documents","title":"upload_register_project_documents","text":"<p>CpsTask upload_register_project_documents(index_key, proj_key, convert_documents_sources)</p> <p>Upload Register Project Documents</p> <p>Upload and register documents to be converted later.</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#example_7","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.convert_documents_sources import ConvertDocumentsSources\nfrom deepsearch.cps.apis.public_v2.models.cps_task import CpsTask\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.DataIndicesUploadApi(api_client)\n    index_key = 'index_key_example' # str | \n    proj_key = 'proj_key_example' # str | \n    convert_documents_sources = deepsearch.cps.apis.public_v2.ConvertDocumentsSources() # ConvertDocumentsSources | \n\n    try:\n        # Upload Register Project Documents\n        api_response = api_instance.upload_register_project_documents(index_key, proj_key, convert_documents_sources)\n        print(\"The response of DataIndicesUploadApi-&gt;upload_register_project_documents:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling DataIndicesUploadApi-&gt;upload_register_project_documents: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes index_key str proj_key str convert_documents_sources ConvertDocumentsSources"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#return-type_7","title":"Return type","text":"<p>CpsTask</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#authorization_7","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-request-headers_7","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/DataIndicesUploadApi/#http-response-details_7","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DcKey/","title":"DcKey","text":""},{"location":"apis/public_v2/docs/DcKey/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/DcKey/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.dc_key import DcKey\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DcKey from a JSON string\ndc_key_instance = DcKey.from_json(json)\n# print the JSON string representation of the object\nprint(DcKey.to_json())\n\n# convert the object into a dict\ndc_key_dict = dc_key_instance.to_dict()\n# create an instance of DcKey from a dict\ndc_key_form_dict = dc_key.from_dict(dc_key_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DecodeSecrets/","title":"DecodeSecrets","text":""},{"location":"apis/public_v2/docs/DecodeSecrets/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/DecodeSecrets/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.decode_secrets import DecodeSecrets\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DecodeSecrets from a JSON string\ndecode_secrets_instance = DecodeSecrets.from_json(json)\n# print the JSON string representation of the object\nprint(DecodeSecrets.to_json())\n\n# convert the object into a dict\ndecode_secrets_dict = decode_secrets_instance.to_dict()\n# create an instance of DecodeSecrets from a dict\ndecode_secrets_form_dict = decode_secrets.from_dict(decode_secrets_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DefaultValues/","title":"DefaultValues","text":""},{"location":"apis/public_v2/docs/DefaultValues/#properties","title":"Properties","text":"Name Type Description Notes ccs_project CCSProject dataflow DefaultValuesDataflow [optional]"},{"location":"apis/public_v2/docs/DefaultValues/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.default_values import DefaultValues\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DefaultValues from a JSON string\ndefault_values_instance = DefaultValues.from_json(json)\n# print the JSON string representation of the object\nprint(DefaultValues.to_json())\n\n# convert the object into a dict\ndefault_values_dict = default_values_instance.to_dict()\n# create an instance of DefaultValues from a dict\ndefault_values_form_dict = default_values.from_dict(default_values_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DefaultValuesDataflow/","title":"DefaultValuesDataflow","text":""},{"location":"apis/public_v2/docs/DefaultValuesDataflow/#properties","title":"Properties","text":"Name Type Description Notes df_tpl_key object name object"},{"location":"apis/public_v2/docs/DefaultValuesDataflow/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.default_values_dataflow import DefaultValuesDataflow\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DefaultValuesDataflow from a JSON string\ndefault_values_dataflow_instance = DefaultValuesDataflow.from_json(json)\n# print the JSON string representation of the object\nprint(DefaultValuesDataflow.to_json())\n\n# convert the object into a dict\ndefault_values_dataflow_dict = default_values_dataflow_instance.to_dict()\n# create an instance of DefaultValuesDataflow from a dict\ndefault_values_dataflow_form_dict = default_values_dataflow.from_dict(default_values_dataflow_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Deployment/","title":"Deployment","text":""},{"location":"apis/public_v2/docs/Deployment/#properties","title":"Properties","text":"Name Type Description Notes name str disclaimer str should_show_warning bool disable_kg_actions bool linked_ccs_api object"},{"location":"apis/public_v2/docs/Deployment/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.deployment import Deployment\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Deployment from a JSON string\ndeployment_instance = Deployment.from_json(json)\n# print the JSON string representation of the object\nprint(Deployment.to_json())\n\n# convert the object into a dict\ndeployment_dict = deployment_instance.to_dict()\n# create an instance of Deployment from a dict\ndeployment_form_dict = deployment.from_dict(deployment_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Description/","title":"Description","text":""},{"location":"apis/public_v2/docs/Description/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Description/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.description import Description\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Description from a JSON string\ndescription_instance = Description.from_json(json)\n# print the JSON string representation of the object\nprint(Description.to_json())\n\n# convert the object into a dict\ndescription_dict = description_instance.to_dict()\n# create an instance of Description from a dict\ndescription_form_dict = description.from_dict(description_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DescriptionLicense/","title":"DescriptionLicense","text":"<p>Licence in document description.</p>"},{"location":"apis/public_v2/docs/DescriptionLicense/#properties","title":"Properties","text":"Name Type Description Notes code Code [optional] text Text [optional]"},{"location":"apis/public_v2/docs/DescriptionLicense/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.description_license import DescriptionLicense\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DescriptionLicense from a JSON string\ndescription_license_instance = DescriptionLicense.from_json(json)\n# print the JSON string representation of the object\nprint(DescriptionLicense.to_json())\n\n# convert the object into a dict\ndescription_license_dict = description_license_instance.to_dict()\n# create an instance of DescriptionLicense from a dict\ndescription_license_form_dict = description_license.from_dict(description_license_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DirectModelConfig/","title":"DirectModelConfig","text":"<p>Direct configuration of a model.</p>"},{"location":"apis/public_v2/docs/DirectModelConfig/#properties","title":"Properties","text":"Name Type Description Notes type str config object"},{"location":"apis/public_v2/docs/DirectModelConfig/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.direct_model_config import DirectModelConfig\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DirectModelConfig from a JSON string\ndirect_model_config_instance = DirectModelConfig.from_json(json)\n# print the JSON string representation of the object\nprint(DirectModelConfig.to_json())\n\n# convert the object into a dict\ndirect_model_config_dict = direct_model_config_instance.to_dict()\n# create an instance of DirectModelConfig from a dict\ndirect_model_config_form_dict = direct_model_config.from_dict(direct_model_config_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DisplayName/","title":"DisplayName","text":""},{"location":"apis/public_v2/docs/DisplayName/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/DisplayName/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.display_name import DisplayName\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DisplayName from a JSON string\ndisplay_name_instance = DisplayName.from_json(json)\n# print the JSON string representation of the object\nprint(DisplayName.to_json())\n\n# convert the object into a dict\ndisplay_name_dict = display_name_instance.to_dict()\n# create an instance of DisplayName from a dict\ndisplay_name_form_dict = display_name.from_dict(display_name_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DoclingCoreTypesBaseIdentifier/","title":"DoclingCoreTypesBaseIdentifier","text":"<p>Unique identifier of a Docling data object.</p>"},{"location":"apis/public_v2/docs/DoclingCoreTypesBaseIdentifier/#properties","title":"Properties","text":"Name Type Description Notes type str A string representing a collection or database that contains this data object. value str The identifier value of the data object within a collection or database. name str A unique identifier of the data object across Docling, consisting of the concatenation of type and value in lower case, separated by hash (#)."},{"location":"apis/public_v2/docs/DoclingCoreTypesBaseIdentifier/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.docling_core_types_base_identifier import DoclingCoreTypesBaseIdentifier\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DoclingCoreTypesBaseIdentifier from a JSON string\ndocling_core_types_base_identifier_instance = DoclingCoreTypesBaseIdentifier.from_json(json)\n# print the JSON string representation of the object\nprint(DoclingCoreTypesBaseIdentifier.to_json())\n\n# convert the object into a dict\ndocling_core_types_base_identifier_dict = docling_core_types_base_identifier_instance.to_dict()\n# create an instance of DoclingCoreTypesBaseIdentifier from a dict\ndocling_core_types_base_identifier_form_dict = docling_core_types_base_identifier.from_dict(docling_core_types_base_identifier_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentArtifacts/","title":"DocumentArtifacts","text":""},{"location":"apis/public_v2/docs/DocumentArtifacts/#properties","title":"Properties","text":"Name Type Description Notes document_meta_json DocumentArtifactsDocumentMetaJson [optional] document_pdf DocumentArtifactsDocumentMetaJson [optional] document_json DocumentArtifactsDocumentMetaJson [optional] document_legacy_json DocumentArtifactsDocumentMetaJson [optional] document_md DocumentArtifactsDocumentMetaJson [optional] page_pdfs List[DocumentArtifactsPageItem] optional] page_images List[DocumentArtifactsPageItem] optional]"},{"location":"apis/public_v2/docs/DocumentArtifacts/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_artifacts import DocumentArtifacts\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentArtifacts from a JSON string\ndocument_artifacts_instance = DocumentArtifacts.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentArtifacts.to_json())\n\n# convert the object into a dict\ndocument_artifacts_dict = document_artifacts_instance.to_dict()\n# create an instance of DocumentArtifacts from a dict\ndocument_artifacts_form_dict = document_artifacts.from_dict(document_artifacts_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentArtifactsDocumentMetaJson/","title":"DocumentArtifactsDocumentMetaJson","text":""},{"location":"apis/public_v2/docs/DocumentArtifactsDocumentMetaJson/#properties","title":"Properties","text":"Name Type Description Notes mime object path object url object"},{"location":"apis/public_v2/docs/DocumentArtifactsDocumentMetaJson/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_artifacts_document_meta_json import DocumentArtifactsDocumentMetaJson\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentArtifactsDocumentMetaJson from a JSON string\ndocument_artifacts_document_meta_json_instance = DocumentArtifactsDocumentMetaJson.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentArtifactsDocumentMetaJson.to_json())\n\n# convert the object into a dict\ndocument_artifacts_document_meta_json_dict = document_artifacts_document_meta_json_instance.to_dict()\n# create an instance of DocumentArtifactsDocumentMetaJson from a dict\ndocument_artifacts_document_meta_json_form_dict = document_artifacts_document_meta_json.from_dict(document_artifacts_document_meta_json_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentArtifactsItem/","title":"DocumentArtifactsItem","text":""},{"location":"apis/public_v2/docs/DocumentArtifactsItem/#properties","title":"Properties","text":"Name Type Description Notes mime str path str url str"},{"location":"apis/public_v2/docs/DocumentArtifactsItem/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_artifacts_item import DocumentArtifactsItem\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentArtifactsItem from a JSON string\ndocument_artifacts_item_instance = DocumentArtifactsItem.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentArtifactsItem.to_json())\n\n# convert the object into a dict\ndocument_artifacts_item_dict = document_artifacts_item_instance.to_dict()\n# create an instance of DocumentArtifactsItem from a dict\ndocument_artifacts_item_form_dict = document_artifacts_item.from_dict(document_artifacts_item_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentArtifactsPageItem/","title":"DocumentArtifactsPageItem","text":""},{"location":"apis/public_v2/docs/DocumentArtifactsPageItem/#properties","title":"Properties","text":"Name Type Description Notes mime str path str url str page int Page number starting at 1."},{"location":"apis/public_v2/docs/DocumentArtifactsPageItem/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_artifacts_page_item import DocumentArtifactsPageItem\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentArtifactsPageItem from a JSON string\ndocument_artifacts_page_item_instance = DocumentArtifactsPageItem.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentArtifactsPageItem.to_json())\n\n# convert the object into a dict\ndocument_artifacts_page_item_dict = document_artifacts_page_item_instance.to_dict()\n# create an instance of DocumentArtifactsPageItem from a dict\ndocument_artifacts_page_item_form_dict = document_artifacts_page_item.from_dict(document_artifacts_page_item_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentDescription/","title":"DocumentDescription","text":""},{"location":"apis/public_v2/docs/DocumentDescription/#properties","title":"Properties","text":"Name Type Description Notes title Title [optional] abstract Abstract [optional] authors Authors [optional] affiliations Affiliations [optional] subjects Subjects [optional] keywords Keywords [optional] publication_date PublicationDate [optional] languages Languages [optional] license DocumentDescriptionLicense [optional] publishers Publishers [optional] url_refs UrlRefs [optional] references References [optional] publication Publication1 [optional] reference_count ReferenceCount [optional] citation_count CitationCount [optional] citation_date CitationCountDate [optional] advanced DocumentDescriptionAdvanced [optional] analytics DocumentDescriptionAdvanced [optional] acquisition DocumentDescriptionAcquisition [optional]"},{"location":"apis/public_v2/docs/DocumentDescription/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_description import DocumentDescription\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentDescription from a JSON string\ndocument_description_instance = DocumentDescription.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentDescription.to_json())\n\n# convert the object into a dict\ndocument_description_dict = document_description_instance.to_dict()\n# create an instance of DocumentDescription from a dict\ndocument_description_form_dict = document_description.from_dict(document_description_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentDescriptionAcquisition/","title":"DocumentDescriptionAcquisition","text":"<p>Information on how the document was obtained, for data governance purposes.</p>"},{"location":"apis/public_v2/docs/DocumentDescriptionAcquisition/#properties","title":"Properties","text":"Name Type Description Notes type object The method to obtain the data. var_date ModelDate [optional] link Link [optional] size Size [optional]"},{"location":"apis/public_v2/docs/DocumentDescriptionAcquisition/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_description_acquisition import DocumentDescriptionAcquisition\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentDescriptionAcquisition from a JSON string\ndocument_description_acquisition_instance = DocumentDescriptionAcquisition.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentDescriptionAcquisition.to_json())\n\n# convert the object into a dict\ndocument_description_acquisition_dict = document_description_acquisition_instance.to_dict()\n# create an instance of DocumentDescriptionAcquisition from a dict\ndocument_description_acquisition_form_dict = document_description_acquisition.from_dict(document_description_acquisition_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentDescriptionAdvanced/","title":"DocumentDescriptionAdvanced","text":""},{"location":"apis/public_v2/docs/DocumentDescriptionAdvanced/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/DocumentDescriptionAdvanced/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_description_advanced import DocumentDescriptionAdvanced\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentDescriptionAdvanced from a JSON string\ndocument_description_advanced_instance = DocumentDescriptionAdvanced.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentDescriptionAdvanced.to_json())\n\n# convert the object into a dict\ndocument_description_advanced_dict = document_description_advanced_instance.to_dict()\n# create an instance of DocumentDescriptionAdvanced from a dict\ndocument_description_advanced_form_dict = document_description_advanced.from_dict(document_description_advanced_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentDescriptionLicense/","title":"DocumentDescriptionLicense","text":""},{"location":"apis/public_v2/docs/DocumentDescriptionLicense/#properties","title":"Properties","text":"Name Type Description Notes code Code [optional] text Text [optional]"},{"location":"apis/public_v2/docs/DocumentDescriptionLicense/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_description_license import DocumentDescriptionLicense\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentDescriptionLicense from a JSON string\ndocument_description_license_instance = DocumentDescriptionLicense.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentDescriptionLicense.to_json())\n\n# convert the object into a dict\ndocument_description_license_dict = document_description_license_instance.to_dict()\n# create an instance of DocumentDescriptionLicense from a dict\ndocument_description_license_form_dict = document_description_license.from_dict(document_description_license_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentHashes/","title":"DocumentHashes","text":"<p>List of document hashes to be used as filter.</p>"},{"location":"apis/public_v2/docs/DocumentHashes/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/DocumentHashes/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_hashes import DocumentHashes\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentHashes from a JSON string\ndocument_hashes_instance = DocumentHashes.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentHashes.to_json())\n\n# convert the object into a dict\ndocument_hashes_dict = document_hashes_instance.to_dict()\n# create an instance of DocumentHashes from a dict\ndocument_hashes_form_dict = document_hashes.from_dict(document_hashes_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentMeta/","title":"DocumentMeta","text":""},{"location":"apis/public_v2/docs/DocumentMeta/#properties","title":"Properties","text":"Name Type Description Notes filename Filename [optional] description DocumentMetaDescription [optional] identifiers Identifiers [optional]"},{"location":"apis/public_v2/docs/DocumentMeta/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_meta import DocumentMeta\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentMeta from a JSON string\ndocument_meta_instance = DocumentMeta.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentMeta.to_json())\n\n# convert the object into a dict\ndocument_meta_dict = document_meta_instance.to_dict()\n# create an instance of DocumentMeta from a dict\ndocument_meta_form_dict = document_meta.from_dict(document_meta_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentMetaDescription/","title":"DocumentMetaDescription","text":""},{"location":"apis/public_v2/docs/DocumentMetaDescription/#properties","title":"Properties","text":"Name Type Description Notes title Title [optional] abstract Abstract [optional] authors Authors [optional] affiliations Affiliations [optional] subjects Subjects [optional] keywords Keywords [optional] publication_date PublicationDate [optional] languages Languages [optional] license DocumentDescriptionLicense [optional] publishers Publishers [optional] url_refs UrlRefs [optional] references References [optional] publication Publication1 [optional] reference_count ReferenceCount [optional] citation_count CitationCount [optional] citation_date CitationCountDate [optional] advanced DocumentDescriptionAdvanced [optional] analytics DocumentDescriptionAdvanced [optional] acquisition DocumentDescriptionAcquisition [optional]"},{"location":"apis/public_v2/docs/DocumentMetaDescription/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_meta_description import DocumentMetaDescription\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentMetaDescription from a JSON string\ndocument_meta_description_instance = DocumentMetaDescription.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentMetaDescription.to_json())\n\n# convert the object into a dict\ndocument_meta_description_dict = document_meta_description_instance.to_dict()\n# create an instance of DocumentMetaDescription from a dict\ndocument_meta_description_form_dict = document_meta_description.from_dict(document_meta_description_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/DocumentStatistics/","title":"DocumentStatistics","text":""},{"location":"apis/public_v2/docs/DocumentStatistics/#properties","title":"Properties","text":"Name Type Description Notes total_documents int documents_pending int documents_failed int documents_converted int"},{"location":"apis/public_v2/docs/DocumentStatistics/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.document_statistics import DocumentStatistics\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of DocumentStatistics from a JSON string\ndocument_statistics_instance = DocumentStatistics.from_json(json)\n# print the JSON string representation of the object\nprint(DocumentStatistics.to_json())\n\n# convert the object into a dict\ndocument_statistics_dict = document_statistics_instance.to_dict()\n# create an instance of DocumentStatistics from a dict\ndocument_statistics_form_dict = document_statistics.from_dict(document_statistics_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Domain/","title":"Domain","text":""},{"location":"apis/public_v2/docs/Domain/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Domain/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.domain import Domain\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Domain from a JSON string\ndomain_instance = Domain.from_json(json)\n# print the JSON string representation of the object\nprint(Domain.to_json())\n\n# convert the object into a dict\ndomain_dict = domain_instance.to_dict()\n# create an instance of Domain from a dict\ndomain_form_dict = domain.from_dict(domain_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ElasticIndexPropertyObject/","title":"ElasticIndexPropertyObject","text":""},{"location":"apis/public_v2/docs/ElasticIndexPropertyObject/#properties","title":"Properties","text":"Name Type Description Notes type str enabled Enabled [optional] ignore_above IgnoreAbove [optional]"},{"location":"apis/public_v2/docs/ElasticIndexPropertyObject/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.elastic_index_property_object import ElasticIndexPropertyObject\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ElasticIndexPropertyObject from a JSON string\nelastic_index_property_object_instance = ElasticIndexPropertyObject.from_json(json)\n# print the JSON string representation of the object\nprint(ElasticIndexPropertyObject.to_json())\n\n# convert the object into a dict\nelastic_index_property_object_dict = elastic_index_property_object_instance.to_dict()\n# create an instance of ElasticIndexPropertyObject from a dict\nelastic_index_property_object_form_dict = elastic_index_property_object.from_dict(elastic_index_property_object_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ElasticIndexPropertyPrimitive/","title":"ElasticIndexPropertyPrimitive","text":""},{"location":"apis/public_v2/docs/ElasticIndexPropertyPrimitive/#properties","title":"Properties","text":"Name Type Description Notes properties object"},{"location":"apis/public_v2/docs/ElasticIndexPropertyPrimitive/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.elastic_index_property_primitive import ElasticIndexPropertyPrimitive\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ElasticIndexPropertyPrimitive from a JSON string\nelastic_index_property_primitive_instance = ElasticIndexPropertyPrimitive.from_json(json)\n# print the JSON string representation of the object\nprint(ElasticIndexPropertyPrimitive.to_json())\n\n# convert the object into a dict\nelastic_index_property_primitive_dict = elastic_index_property_primitive_instance.to_dict()\n# create an instance of ElasticIndexPropertyPrimitive from a dict\nelastic_index_property_primitive_form_dict = elastic_index_property_primitive.from_dict(elastic_index_property_primitive_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ElasticIndexSearchQueryOptions/","title":"ElasticIndexSearchQueryOptions","text":""},{"location":"apis/public_v2/docs/ElasticIndexSearchQueryOptions/#properties","title":"Properties","text":"Name Type Description Notes source Source2 [optional] from_ ModelFrom [optional] size Size1 [optional] query Query [optional] aggs Aggs [optional] sort Sort [optional]"},{"location":"apis/public_v2/docs/ElasticIndexSearchQueryOptions/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.elastic_index_search_query_options import ElasticIndexSearchQueryOptions\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ElasticIndexSearchQueryOptions from a JSON string\nelastic_index_search_query_options_instance = ElasticIndexSearchQueryOptions.from_json(json)\n# print the JSON string representation of the object\nprint(ElasticIndexSearchQueryOptions.to_json())\n\n# convert the object into a dict\nelastic_index_search_query_options_dict = elastic_index_search_query_options_instance.to_dict()\n# create an instance of ElasticIndexSearchQueryOptions from a dict\nelastic_index_search_query_options_form_dict = elastic_index_search_query_options.from_dict(elastic_index_search_query_options_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ElasticIndexSource/","title":"ElasticIndexSource","text":""},{"location":"apis/public_v2/docs/ElasticIndexSource/#properties","title":"Properties","text":"Name Type Description Notes index_key str elastic_id str"},{"location":"apis/public_v2/docs/ElasticIndexSource/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.elastic_index_source import ElasticIndexSource\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ElasticIndexSource from a JSON string\nelastic_index_source_instance = ElasticIndexSource.from_json(json)\n# print the JSON string representation of the object\nprint(ElasticIndexSource.to_json())\n\n# convert the object into a dict\nelastic_index_source_dict = elastic_index_source_instance.to_dict()\n# create an instance of ElasticIndexSource from a dict\nelastic_index_source_form_dict = elastic_index_source.from_dict(elastic_index_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ElasticInstanceDataIndex/","title":"ElasticInstanceDataIndex","text":""},{"location":"apis/public_v2/docs/ElasticInstanceDataIndex/#properties","title":"Properties","text":"Name Type Description Notes index_key str query_options ElasticIndexSearchQueryOptions elastic_id str"},{"location":"apis/public_v2/docs/ElasticInstanceDataIndex/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.elastic_instance_data_index import ElasticInstanceDataIndex\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ElasticInstanceDataIndex from a JSON string\nelastic_instance_data_index_instance = ElasticInstanceDataIndex.from_json(json)\n# print the JSON string representation of the object\nprint(ElasticInstanceDataIndex.to_json())\n\n# convert the object into a dict\nelastic_instance_data_index_dict = elastic_instance_data_index_instance.to_dict()\n# create an instance of ElasticInstanceDataIndex from a dict\nelastic_instance_data_index_form_dict = elastic_instance_data_index.from_dict(elastic_instance_data_index_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ElasticMetadata/","title":"ElasticMetadata","text":""},{"location":"apis/public_v2/docs/ElasticMetadata/#properties","title":"Properties","text":"Name Type Description Notes aliases Aliases [optional] created Created [optional] description Description [optional] display_name DisplayName [optional] source Source1 [optional] storage Storage [optional] version Version1 [optional] type Type [optional] domain Domain [optional] classification List[str]"},{"location":"apis/public_v2/docs/ElasticMetadata/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.elastic_metadata import ElasticMetadata\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ElasticMetadata from a JSON string\nelastic_metadata_instance = ElasticMetadata.from_json(json)\n# print the JSON string representation of the object\nprint(ElasticMetadata.to_json())\n\n# convert the object into a dict\nelastic_metadata_dict = elastic_metadata_instance.to_dict()\n# create an instance of ElasticMetadata from a dict\nelastic_metadata_form_dict = elastic_metadata.from_dict(elastic_metadata_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Enabled/","title":"Enabled","text":""},{"location":"apis/public_v2/docs/Enabled/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Enabled/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.enabled import Enabled\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Enabled from a JSON string\nenabled_instance = Enabled.from_json(json)\n# print the JSON string representation of the object\nprint(Enabled.to_json())\n\n# convert the object into a dict\nenabled_dict = enabled_instance.to_dict()\n# create an instance of Enabled from a dict\nenabled_form_dict = enabled.from_dict(enabled_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/EndDate/","title":"EndDate","text":""},{"location":"apis/public_v2/docs/EndDate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/EndDate/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.end_date import EndDate\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of EndDate from a JSON string\nend_date_instance = EndDate.from_json(json)\n# print the JSON string representation of the object\nprint(EndDate.to_json())\n\n# convert the object into a dict\nend_date_dict = end_date_instance.to_dict()\n# create an instance of EndDate from a dict\nend_date_form_dict = end_date.from_dict(end_date_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ErrorReason/","title":"ErrorReason","text":""},{"location":"apis/public_v2/docs/ErrorReason/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/ErrorReason/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.error_reason import ErrorReason\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ErrorReason from a JSON string\nerror_reason_instance = ErrorReason.from_json(json)\n# print the JSON string representation of the object\nprint(ErrorReason.to_json())\n\n# convert the object into a dict\nerror_reason_dict = error_reason_instance.to_dict()\n# create an instance of ErrorReason from a dict\nerror_reason_form_dict = error_reason.from_dict(error_reason_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/FileSource/","title":"FileSource","text":""},{"location":"apis/public_v2/docs/FileSource/#properties","title":"Properties","text":"Name Type Description Notes base64_string str filename str"},{"location":"apis/public_v2/docs/FileSource/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.file_source import FileSource\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of FileSource from a JSON string\nfile_source_instance = FileSource.from_json(json)\n# print the JSON string representation of the object\nprint(FileSource.to_json())\n\n# convert the object into a dict\nfile_source_dict = file_source_instance.to_dict()\n# create an instance of FileSource from a dict\nfile_source_form_dict = file_source.from_dict(file_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/FileUri/","title":"FileUri","text":""},{"location":"apis/public_v2/docs/FileUri/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/FileUri/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.file_uri import FileUri\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of FileUri from a JSON string\nfile_uri_instance = FileUri.from_json(json)\n# print the JSON string representation of the object\nprint(FileUri.to_json())\n\n# convert the object into a dict\nfile_uri_dict = file_uri_instance.to_dict()\n# create an instance of FileUri from a dict\nfile_uri_form_dict = file_uri.from_dict(file_uri_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/FileUrl/","title":"FileUrl","text":"<p>List of File's URL to be converted and uploaded to the data index.</p>"},{"location":"apis/public_v2/docs/FileUrl/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/FileUrl/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.file_url import FileUrl\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of FileUrl from a JSON string\nfile_url_instance = FileUrl.from_json(json)\n# print the JSON string representation of the object\nprint(FileUrl.to_json())\n\n# convert the object into a dict\nfile_url_dict = file_url_instance.to_dict()\n# create an instance of FileUrl from a dict\nfile_url_form_dict = file_url.from_dict(file_url_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Filename/","title":"Filename","text":""},{"location":"apis/public_v2/docs/Filename/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Filename/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.filename import Filename\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Filename from a JSON string\nfilename_instance = Filename.from_json(json)\n# print the JSON string representation of the object\nprint(Filename.to_json())\n\n# convert the object into a dict\nfilename_dict = filename_instance.to_dict()\n# create an instance of Filename from a dict\nfilename_form_dict = filename.from_dict(filename_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Flavour/","title":"Flavour","text":""},{"location":"apis/public_v2/docs/Flavour/#properties","title":"Properties","text":"Name Type Description Notes name str display_name DisplayName [optional]"},{"location":"apis/public_v2/docs/Flavour/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.flavour import Flavour\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Flavour from a JSON string\nflavour_instance = Flavour.from_json(json)\n# print the JSON string representation of the object\nprint(Flavour.to_json())\n\n# convert the object into a dict\nflavour_dict = flavour_instance.to_dict()\n# create an instance of Flavour from a dict\nflavour_form_dict = flavour.from_dict(flavour_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/FlavoursDefaultQuota/","title":"FlavoursDefaultQuota","text":""},{"location":"apis/public_v2/docs/FlavoursDefaultQuota/#properties","title":"Properties","text":"Name Type Description Notes display_name str name str default_quota int"},{"location":"apis/public_v2/docs/FlavoursDefaultQuota/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.flavours_default_quota import FlavoursDefaultQuota\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of FlavoursDefaultQuota from a JSON string\nflavours_default_quota_instance = FlavoursDefaultQuota.from_json(json)\n# print the JSON string representation of the object\nprint(FlavoursDefaultQuota.to_json())\n\n# convert the object into a dict\nflavours_default_quota_dict = flavours_default_quota_instance.to_dict()\n# create an instance of FlavoursDefaultQuota from a dict\nflavours_default_quota_form_dict = flavours_default_quota.from_dict(flavours_default_quota_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/FlavoursQuota/","title":"FlavoursQuota","text":""},{"location":"apis/public_v2/docs/FlavoursQuota/#properties","title":"Properties","text":"Name Type Description Notes display_name str name str quota int"},{"location":"apis/public_v2/docs/FlavoursQuota/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.flavours_quota import FlavoursQuota\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of FlavoursQuota from a JSON string\nflavours_quota_instance = FlavoursQuota.from_json(json)\n# print the JSON string representation of the object\nprint(FlavoursQuota.to_json())\n\n# convert the object into a dict\nflavours_quota_dict = flavours_quota_instance.to_dict()\n# create an instance of FlavoursQuota from a dict\nflavours_quota_form_dict = flavours_quota.from_dict(flavours_quota_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIAWSBedrock/","title":"GenAIAWSBedrock","text":"<p>GenAI integration for AWS Bedrock settings</p>"},{"location":"apis/public_v2/docs/GenAIAWSBedrock/#properties","title":"Properties","text":"Name Type Description Notes kind str optional config GenAIAWSBedrockConfig proj_params GenAIAWSBedrockProjParams [optional]"},{"location":"apis/public_v2/docs/GenAIAWSBedrock/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_aiaws_bedrock import GenAIAWSBedrock\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIAWSBedrock from a JSON string\ngen_aiaws_bedrock_instance = GenAIAWSBedrock.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIAWSBedrock.to_json())\n\n# convert the object into a dict\ngen_aiaws_bedrock_dict = gen_aiaws_bedrock_instance.to_dict()\n# create an instance of GenAIAWSBedrock from a dict\ngen_aiaws_bedrock_form_dict = gen_aiaws_bedrock.from_dict(gen_aiaws_bedrock_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIAWSBedrockConfig/","title":"GenAIAWSBedrockConfig","text":"<p>Config for AWS Bedrock</p>"},{"location":"apis/public_v2/docs/GenAIAWSBedrockConfig/#properties","title":"Properties","text":"Name Type Description Notes genai_aws_access_key str genai_aws_secret_key str genai_aws_region_name str"},{"location":"apis/public_v2/docs/GenAIAWSBedrockConfig/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_aiaws_bedrock_config import GenAIAWSBedrockConfig\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIAWSBedrockConfig from a JSON string\ngen_aiaws_bedrock_config_instance = GenAIAWSBedrockConfig.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIAWSBedrockConfig.to_json())\n\n# convert the object into a dict\ngen_aiaws_bedrock_config_dict = gen_aiaws_bedrock_config_instance.to_dict()\n# create an instance of GenAIAWSBedrockConfig from a dict\ngen_aiaws_bedrock_config_form_dict = gen_aiaws_bedrock_config.from_dict(gen_aiaws_bedrock_config_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIAWSBedrockProjParams/","title":"GenAIAWSBedrockProjParams","text":""},{"location":"apis/public_v2/docs/GenAIAWSBedrockProjParams/#properties","title":"Properties","text":"Name Type Description Notes model_id ModelId [optional] prompt_template PromptTemplate [optional] params Params [optional] timeout Timeout [optional]"},{"location":"apis/public_v2/docs/GenAIAWSBedrockProjParams/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_aiaws_bedrock_proj_params import GenAIAWSBedrockProjParams\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIAWSBedrockProjParams from a JSON string\ngen_aiaws_bedrock_proj_params_instance = GenAIAWSBedrockProjParams.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIAWSBedrockProjParams.to_json())\n\n# convert the object into a dict\ngen_aiaws_bedrock_proj_params_dict = gen_aiaws_bedrock_proj_params_instance.to_dict()\n# create an instance of GenAIAWSBedrockProjParams from a dict\ngen_aiaws_bedrock_proj_params_form_dict = gen_aiaws_bedrock_proj_params.from_dict(gen_aiaws_bedrock_proj_params_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIBAM/","title":"GenAIBAM","text":"<p>GenAI integration for BAM settings</p>"},{"location":"apis/public_v2/docs/GenAIBAM/#properties","title":"Properties","text":"Name Type Description Notes kind str optional config GenAIBAMConfig proj_params GenAIAWSBedrockProjParams [optional]"},{"location":"apis/public_v2/docs/GenAIBAM/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_aibam import GenAIBAM\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIBAM from a JSON string\ngen_aibam_instance = GenAIBAM.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIBAM.to_json())\n\n# convert the object into a dict\ngen_aibam_dict = gen_aibam_instance.to_dict()\n# create an instance of GenAIBAM from a dict\ngen_aibam_form_dict = gen_aibam.from_dict(gen_aibam_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIBAMConfig/","title":"GenAIBAMConfig","text":"<p>Config for BAM</p>"},{"location":"apis/public_v2/docs/GenAIBAMConfig/#properties","title":"Properties","text":"Name Type Description Notes genai_api str genai_key str"},{"location":"apis/public_v2/docs/GenAIBAMConfig/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_aibam_config import GenAIBAMConfig\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIBAMConfig from a JSON string\ngen_aibam_config_instance = GenAIBAMConfig.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIBAMConfig.to_json())\n\n# convert the object into a dict\ngen_aibam_config_dict = gen_aibam_config_instance.to_dict()\n# create an instance of GenAIBAMConfig from a dict\ngen_aibam_config_form_dict = gen_aibam_config.from_dict(gen_aibam_config_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAICPD/","title":"GenAICPD","text":"<p>GenAI integration for watsonx settings</p>"},{"location":"apis/public_v2/docs/GenAICPD/#properties","title":"Properties","text":"Name Type Description Notes kind str optional config GenAICPDConfig proj_params GenAIAWSBedrockProjParams [optional]"},{"location":"apis/public_v2/docs/GenAICPD/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_aicpd import GenAICPD\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAICPD from a JSON string\ngen_aicpd_instance = GenAICPD.from_json(json)\n# print the JSON string representation of the object\nprint(GenAICPD.to_json())\n\n# convert the object into a dict\ngen_aicpd_dict = gen_aicpd_instance.to_dict()\n# create an instance of GenAICPD from a dict\ngen_aicpd_form_dict = gen_aicpd.from_dict(gen_aicpd_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAICPDConfig/","title":"GenAICPDConfig","text":"<p>Config for CPD watsonx</p>"},{"location":"apis/public_v2/docs/GenAICPDConfig/#properties","title":"Properties","text":"Name Type Description Notes genai_api str genai_project_id str genai_cpd_url str genai_cpd_verify_tls bool optional genai_cpd_username str genai_cpd_password GenaiCpdPassword [optional] genai_cpd_api_key GenaiCpdApiKey [optional]"},{"location":"apis/public_v2/docs/GenAICPDConfig/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_aicpd_config import GenAICPDConfig\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAICPDConfig from a JSON string\ngen_aicpd_config_instance = GenAICPDConfig.from_json(json)\n# print the JSON string representation of the object\nprint(GenAICPDConfig.to_json())\n\n# convert the object into a dict\ngen_aicpd_config_dict = gen_aicpd_config_instance.to_dict()\n# create an instance of GenAICPDConfig from a dict\ngen_aicpd_config_form_dict = gen_aicpd_config.from_dict(gen_aicpd_config_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIHFInferenceApi/","title":"GenAIHFInferenceApi","text":"<p>GenAI integration for Inference API settings</p>"},{"location":"apis/public_v2/docs/GenAIHFInferenceApi/#properties","title":"Properties","text":"Name Type Description Notes kind str optional config GenAIHFInferenceApiConfig proj_params GenAIAWSBedrockProjParams [optional]"},{"location":"apis/public_v2/docs/GenAIHFInferenceApi/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_aihf_inference_api import GenAIHFInferenceApi\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIHFInferenceApi from a JSON string\ngen_aihf_inference_api_instance = GenAIHFInferenceApi.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIHFInferenceApi.to_json())\n\n# convert the object into a dict\ngen_aihf_inference_api_dict = gen_aihf_inference_api_instance.to_dict()\n# create an instance of GenAIHFInferenceApi from a dict\ngen_aihf_inference_api_form_dict = gen_aihf_inference_api.from_dict(gen_aihf_inference_api_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIHFInferenceApiConfig/","title":"GenAIHFInferenceApiConfig","text":"<p>Config for HF Inference API</p>"},{"location":"apis/public_v2/docs/GenAIHFInferenceApiConfig/#properties","title":"Properties","text":"Name Type Description Notes genai_hf_api_key str"},{"location":"apis/public_v2/docs/GenAIHFInferenceApiConfig/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_aihf_inference_api_config import GenAIHFInferenceApiConfig\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIHFInferenceApiConfig from a JSON string\ngen_aihf_inference_api_config_instance = GenAIHFInferenceApiConfig.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIHFInferenceApiConfig.to_json())\n\n# convert the object into a dict\ngen_aihf_inference_api_config_dict = gen_aihf_inference_api_config_instance.to_dict()\n# create an instance of GenAIHFInferenceApiConfig from a dict\ngen_aihf_inference_api_config_form_dict = gen_aihf_inference_api_config.from_dict(gen_aihf_inference_api_config_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIOpenai/","title":"GenAIOpenai","text":"<p>GenAI integration for OpenAI API settings</p>"},{"location":"apis/public_v2/docs/GenAIOpenai/#properties","title":"Properties","text":"Name Type Description Notes kind str optional config GenAIOpenaiConfig proj_params GenAIAWSBedrockProjParams [optional]"},{"location":"apis/public_v2/docs/GenAIOpenai/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_ai_openai import GenAIOpenai\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIOpenai from a JSON string\ngen_ai_openai_instance = GenAIOpenai.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIOpenai.to_json())\n\n# convert the object into a dict\ngen_ai_openai_dict = gen_ai_openai_instance.to_dict()\n# create an instance of GenAIOpenai from a dict\ngen_ai_openai_form_dict = gen_ai_openai.from_dict(gen_ai_openai_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIOpenaiConfig/","title":"GenAIOpenaiConfig","text":"<p>Config for OpenAI API</p>"},{"location":"apis/public_v2/docs/GenAIOpenaiConfig/#properties","title":"Properties","text":"Name Type Description Notes genai_openai_api_key str genai_openai_base_url str genai_openai_verify_tls bool optional"},{"location":"apis/public_v2/docs/GenAIOpenaiConfig/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_ai_openai_config import GenAIOpenaiConfig\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIOpenaiConfig from a JSON string\ngen_ai_openai_config_instance = GenAIOpenaiConfig.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIOpenaiConfig.to_json())\n\n# convert the object into a dict\ngen_ai_openai_config_dict = gen_ai_openai_config_instance.to_dict()\n# create an instance of GenAIOpenaiConfig from a dict\ngen_ai_openai_config_form_dict = gen_ai_openai_config.from_dict(gen_ai_openai_config_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIParams/","title":"GenAIParams","text":""},{"location":"apis/public_v2/docs/GenAIParams/#properties","title":"Properties","text":"Name Type Description Notes model_id str prompt_template str params object timeout float"},{"location":"apis/public_v2/docs/GenAIParams/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_ai_params import GenAIParams\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIParams from a JSON string\ngen_ai_params_instance = GenAIParams.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIParams.to_json())\n\n# convert the object into a dict\ngen_ai_params_dict = gen_ai_params_instance.to_dict()\n# create an instance of GenAIParams from a dict\ngen_ai_params_form_dict = gen_ai_params.from_dict(gen_ai_params_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIPartialParams/","title":"GenAIPartialParams","text":""},{"location":"apis/public_v2/docs/GenAIPartialParams/#properties","title":"Properties","text":"Name Type Description Notes model_id ModelId [optional] prompt_template PromptTemplate [optional] params Params [optional] timeout Timeout [optional]"},{"location":"apis/public_v2/docs/GenAIPartialParams/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_ai_partial_params import GenAIPartialParams\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIPartialParams from a JSON string\ngen_ai_partial_params_instance = GenAIPartialParams.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIPartialParams.to_json())\n\n# convert the object into a dict\ngen_ai_partial_params_dict = gen_ai_partial_params_instance.to_dict()\n# create an instance of GenAIPartialParams from a dict\ngen_ai_partial_params_form_dict = gen_ai_partial_params.from_dict(gen_ai_partial_params_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIWatsonx/","title":"GenAIWatsonx","text":"<p>GenAI integration for watsonx settings</p>"},{"location":"apis/public_v2/docs/GenAIWatsonx/#properties","title":"Properties","text":"Name Type Description Notes kind str optional config GenAIWatsonxConfig proj_params GenAIAWSBedrockProjParams [optional]"},{"location":"apis/public_v2/docs/GenAIWatsonx/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_ai_watsonx import GenAIWatsonx\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIWatsonx from a JSON string\ngen_ai_watsonx_instance = GenAIWatsonx.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIWatsonx.to_json())\n\n# convert the object into a dict\ngen_ai_watsonx_dict = gen_ai_watsonx_instance.to_dict()\n# create an instance of GenAIWatsonx from a dict\ngen_ai_watsonx_form_dict = gen_ai_watsonx.from_dict(gen_ai_watsonx_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenAIWatsonxConfig/","title":"GenAIWatsonxConfig","text":"<p>Config for watsonx</p>"},{"location":"apis/public_v2/docs/GenAIWatsonxConfig/#properties","title":"Properties","text":"Name Type Description Notes genai_api str genai_project_id str genai_key str"},{"location":"apis/public_v2/docs/GenAIWatsonxConfig/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.gen_ai_watsonx_config import GenAIWatsonxConfig\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenAIWatsonxConfig from a JSON string\ngen_ai_watsonx_config_instance = GenAIWatsonxConfig.from_json(json)\n# print the JSON string representation of the object\nprint(GenAIWatsonxConfig.to_json())\n\n# convert the object into a dict\ngen_ai_watsonx_config_dict = gen_ai_watsonx_config_instance.to_dict()\n# create an instance of GenAIWatsonxConfig from a dict\ngen_ai_watsonx_config_form_dict = gen_ai_watsonx_config.from_dict(gen_ai_watsonx_config_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenaiCpdApiKey/","title":"GenaiCpdApiKey","text":""},{"location":"apis/public_v2/docs/GenaiCpdApiKey/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/GenaiCpdApiKey/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.genai_cpd_api_key import GenaiCpdApiKey\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenaiCpdApiKey from a JSON string\ngenai_cpd_api_key_instance = GenaiCpdApiKey.from_json(json)\n# print the JSON string representation of the object\nprint(GenaiCpdApiKey.to_json())\n\n# convert the object into a dict\ngenai_cpd_api_key_dict = genai_cpd_api_key_instance.to_dict()\n# create an instance of GenaiCpdApiKey from a dict\ngenai_cpd_api_key_form_dict = genai_cpd_api_key.from_dict(genai_cpd_api_key_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GenaiCpdPassword/","title":"GenaiCpdPassword","text":""},{"location":"apis/public_v2/docs/GenaiCpdPassword/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/GenaiCpdPassword/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.genai_cpd_password import GenaiCpdPassword\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GenaiCpdPassword from a JSON string\ngenai_cpd_password_instance = GenaiCpdPassword.from_json(json)\n# print the JSON string representation of the object\nprint(GenaiCpdPassword.to_json())\n\n# convert the object into a dict\ngenai_cpd_password_dict = genai_cpd_password_instance.to_dict()\n# create an instance of GenaiCpdPassword from a dict\ngenai_cpd_password_form_dict = genai_cpd_password.from_dict(genai_cpd_password_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/GroupedProjectDocuments/","title":"GroupedProjectDocuments","text":""},{"location":"apis/public_v2/docs/GroupedProjectDocuments/#properties","title":"Properties","text":"Name Type Description Notes documents List[ProjectDocument] upload_date UploadDate"},{"location":"apis/public_v2/docs/GroupedProjectDocuments/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.grouped_project_documents import GroupedProjectDocuments\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of GroupedProjectDocuments from a JSON string\ngrouped_project_documents_instance = GroupedProjectDocuments.from_json(json)\n# print the JSON string representation of the object\nprint(GroupedProjectDocuments.to_json())\n\n# convert the object into a dict\ngrouped_project_documents_dict = grouped_project_documents_instance.to_dict()\n# create an instance of GroupedProjectDocuments from a dict\ngrouped_project_documents_form_dict = grouped_project_documents.from_dict(grouped_project_documents_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/HTTPValidationError/","title":"HTTPValidationError","text":""},{"location":"apis/public_v2/docs/HTTPValidationError/#properties","title":"Properties","text":"Name Type Description Notes detail List[ValidationError] [optional]"},{"location":"apis/public_v2/docs/HTTPValidationError/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.http_validation_error import HTTPValidationError\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of HTTPValidationError from a JSON string\nhttp_validation_error_instance = HTTPValidationError.from_json(json)\n# print the JSON string representation of the object\nprint(HTTPValidationError.to_json())\n\n# convert the object into a dict\nhttp_validation_error_dict = http_validation_error_instance.to_dict()\n# create an instance of HTTPValidationError from a dict\nhttp_validation_error_form_dict = http_validation_error.from_dict(http_validation_error_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/HeadUrl/","title":"HeadUrl","text":""},{"location":"apis/public_v2/docs/HeadUrl/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/HeadUrl/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.head_url import HeadUrl\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of HeadUrl from a JSON string\nhead_url_instance = HeadUrl.from_json(json)\n# print the JSON string representation of the object\nprint(HeadUrl.to_json())\n\n# convert the object into a dict\nhead_url_dict = head_url_instance.to_dict()\n# create an instance of HeadUrl from a dict\nhead_url_form_dict = head_url.from_dict(head_url_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Headers/","title":"Headers","text":""},{"location":"apis/public_v2/docs/Headers/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Headers/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.headers import Headers\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Headers from a JSON string\nheaders_instance = Headers.from_json(json)\n# print the JSON string representation of the object\nprint(Headers.to_json())\n\n# convert the object into a dict\nheaders_dict = headers_instance.to_dict()\n# create an instance of Headers from a dict\nheaders_form_dict = headers.from_dict(headers_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/HttpSource/","title":"HttpSource","text":"<p>List of Internal File's URLs to be converted and uploaded to the data index.</p>"},{"location":"apis/public_v2/docs/HttpSource/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/HttpSource/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.http_source import HttpSource\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of HttpSource from a JSON string\nhttp_source_instance = HttpSource.from_json(json)\n# print the JSON string representation of the object\nprint(HttpSource.to_json())\n\n# convert the object into a dict\nhttp_source_dict = http_source_instance.to_dict()\n# create an instance of HttpSource from a dict\nhttp_source_form_dict = http_source.from_dict(http_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Id/","title":"Id","text":""},{"location":"apis/public_v2/docs/Id/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Id/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.id import Id\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Id from a JSON string\nid_instance = Id.from_json(json)\n# print the JSON string representation of the object\nprint(Id.to_json())\n\n# convert the object into a dict\nid_dict = id_instance.to_dict()\n# create an instance of Id from a dict\nid_form_dict = id.from_dict(id_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Identifiers/","title":"Identifiers","text":""},{"location":"apis/public_v2/docs/Identifiers/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Identifiers/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.identifiers import Identifiers\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Identifiers from a JSON string\nidentifiers_instance = Identifiers.from_json(json)\n# print the JSON string representation of the object\nprint(Identifiers.to_json())\n\n# convert the object into a dict\nidentifiers_dict = identifiers_instance.to_dict()\n# create an instance of Identifiers from a dict\nidentifiers_form_dict = identifiers.from_dict(identifiers_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Identifiers1/","title":"Identifiers1","text":"<p>Unique identifiers of a publication venue.</p>"},{"location":"apis/public_v2/docs/Identifiers1/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Identifiers1/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.identifiers1 import Identifiers1\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Identifiers1 from a JSON string\nidentifiers1_instance = Identifiers1.from_json(json)\n# print the JSON string representation of the object\nprint(Identifiers1.to_json())\n\n# convert the object into a dict\nidentifiers1_dict = identifiers1_instance.to_dict()\n# create an instance of Identifiers1 from a dict\nidentifiers1_form_dict = identifiers1.from_dict(identifiers1_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/IgnoreAbove/","title":"IgnoreAbove","text":""},{"location":"apis/public_v2/docs/IgnoreAbove/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/IgnoreAbove/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.ignore_above import IgnoreAbove\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of IgnoreAbove from a JSON string\nignore_above_instance = IgnoreAbove.from_json(json)\n# print the JSON string representation of the object\nprint(IgnoreAbove.to_json())\n\n# convert the object into a dict\nignore_above_dict = ignore_above_instance.to_dict()\n# create an instance of IgnoreAbove from a dict\nignore_above_form_dict = ignore_above.from_dict(ignore_above_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ImageUrlsInfo/","title":"ImageUrlsInfo","text":""},{"location":"apis/public_v2/docs/ImageUrlsInfo/#properties","title":"Properties","text":"Name Type Description Notes <p>[Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Issue/","title":"Issue","text":"<p>Publication issue (issue number).</p>"},{"location":"apis/public_v2/docs/Issue/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Issue/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.issue import Issue\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Issue from a JSON string\nissue_instance = Issue.from_json(json)\n# print the JSON string representation of the object\nprint(Issue.to_json())\n\n# convert the object into a dict\nissue_dict = issue_instance.to_dict()\n# create an instance of Issue from a dict\nissue_form_dict = issue.from_dict(issue_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/JsonUploadRequestBody/","title":"JsonUploadRequestBody","text":""},{"location":"apis/public_v2/docs/JsonUploadRequestBody/#properties","title":"Properties","text":"Name Type Description Notes file_url str"},{"location":"apis/public_v2/docs/JsonUploadRequestBody/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.json_upload_request_body import JsonUploadRequestBody\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of JsonUploadRequestBody from a JSON string\njson_upload_request_body_instance = JsonUploadRequestBody.from_json(json)\n# print the JSON string representation of the object\nprint(JsonUploadRequestBody.to_json())\n\n# convert the object into a dict\njson_upload_request_body_dict = json_upload_request_body_instance.to_dict()\n# create an instance of JsonUploadRequestBody from a dict\njson_upload_request_body_form_dict = json_upload_request_body.from_dict(json_upload_request_body_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/KeyPrefix/","title":"KeyPrefix","text":""},{"location":"apis/public_v2/docs/KeyPrefix/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/KeyPrefix/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.key_prefix import KeyPrefix\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of KeyPrefix from a JSON string\nkey_prefix_instance = KeyPrefix.from_json(json)\n# print the JSON string representation of the object\nprint(KeyPrefix.to_json())\n\n# convert the object into a dict\nkey_prefix_dict = key_prefix_instance.to_dict()\n# create an instance of KeyPrefix from a dict\nkey_prefix_form_dict = key_prefix.from_dict(key_prefix_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Keywords/","title":"Keywords","text":""},{"location":"apis/public_v2/docs/Keywords/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Keywords/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.keywords import Keywords\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Keywords from a JSON string\nkeywords_instance = Keywords.from_json(json)\n# print the JSON string representation of the object\nprint(Keywords.to_json())\n\n# convert the object into a dict\nkeywords_dict = keywords_instance.to_dict()\n# create an instance of Keywords from a dict\nkeywords_form_dict = keywords.from_dict(keywords_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/KgKey/","title":"KgKey","text":""},{"location":"apis/public_v2/docs/KgKey/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/KgKey/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.kg_key import KgKey\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of KgKey from a JSON string\nkg_key_instance = KgKey.from_json(json)\n# print the JSON string representation of the object\nprint(KgKey.to_json())\n\n# convert the object into a dict\nkg_key_dict = kg_key_instance.to_dict()\n# create an instance of KgKey from a dict\nkg_key_form_dict = kg_key.from_dict(kg_key_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/","title":"deepsearch.cps.apis.public_v2.KnowledgeGraphsApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description backend_list_project_kgs GET /backend/project/{proj_key}/bags Backend List Project Kgs create_project_knowledge_graph POST /backend/project/{proj_key}/bags Create Project Knowledge Graph list_public_knowledge_graphs GET /project/public/bags List Public Knowledge Graphs update_project_knowledge_graph_metadata PATCH /backend/project/{proj_key}/bags/{bag_key} Update Project Knowledge Graph Metadata"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#backend_list_project_kgs","title":"backend_list_project_kgs","text":"<p>List[object] backend_list_project_kgs(proj_key, term=term)</p> <p>Backend List Project Kgs</p> <p>List all bags in the project, backend-aware</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.KnowledgeGraphsApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    term = None # object |  (optional)\n\n    try:\n        # Backend List Project Kgs\n        api_response = api_instance.backend_list_project_kgs(proj_key, term=term)\n        print(\"The response of KnowledgeGraphsApi-&gt;backend_list_project_kgs:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling KnowledgeGraphsApi-&gt;backend_list_project_kgs: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#parameters","title":"Parameters","text":"Name Type Description Notes proj_key str term object [optional]"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#return-type","title":"Return type","text":"<p>List[object]</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#create_project_knowledge_graph","title":"create_project_knowledge_graph","text":"<p>object create_project_knowledge_graph(proj_key, body)</p> <p>Create Project Knowledge Graph</p> <p>Create new BAG, backend-aware</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.KnowledgeGraphsApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    body = None # object | \n\n    try:\n        # Create Project Knowledge Graph\n        api_response = api_instance.create_project_knowledge_graph(proj_key, body)\n        print(\"The response of KnowledgeGraphsApi-&gt;create_project_knowledge_graph:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling KnowledgeGraphsApi-&gt;create_project_knowledge_graph: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes proj_key str body object"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#return-type_1","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#authorization_1","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#list_public_knowledge_graphs","title":"list_public_knowledge_graphs","text":"<p>List[object] list_public_knowledge_graphs(term=term)</p> <p>List Public Knowledge Graphs</p> <p>List all public BAGs</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.KnowledgeGraphsApi(api_client)\n    term = None # object |  (optional)\n\n    try:\n        # List Public Knowledge Graphs\n        api_response = api_instance.list_public_knowledge_graphs(term=term)\n        print(\"The response of KnowledgeGraphsApi-&gt;list_public_knowledge_graphs:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling KnowledgeGraphsApi-&gt;list_public_knowledge_graphs: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes term object [optional]"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#return-type_2","title":"Return type","text":"<p>List[object]</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#authorization_2","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#update_project_knowledge_graph_metadata","title":"update_project_knowledge_graph_metadata","text":"<p>object update_project_knowledge_graph_metadata(bag_key, proj_key, body)</p> <p>Update Project Knowledge Graph Metadata</p> <p>Update the metadata of a Knowledge graph</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.KnowledgeGraphsApi(api_client)\n    bag_key = None # object | \n    proj_key = 'proj_key_example' # str | \n    body = None # object | \n\n    try:\n        # Update Project Knowledge Graph Metadata\n        api_response = api_instance.update_project_knowledge_graph_metadata(bag_key, proj_key, body)\n        print(\"The response of KnowledgeGraphsApi-&gt;update_project_knowledge_graph_metadata:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling KnowledgeGraphsApi-&gt;update_project_knowledge_graph_metadata: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes bag_key object proj_key str body object"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#return-type_3","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#authorization_3","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/KnowledgeGraphsApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Languages/","title":"Languages","text":""},{"location":"apis/public_v2/docs/Languages/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Languages/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.languages import Languages\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Languages from a JSON string\nlanguages_instance = Languages.from_json(json)\n# print the JSON string representation of the object\nprint(Languages.to_json())\n\n# convert the object into a dict\nlanguages_dict = languages_instance.to_dict()\n# create an instance of Languages from a dict\nlanguages_form_dict = languages.from_dict(languages_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/License/","title":"License","text":""},{"location":"apis/public_v2/docs/License/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/License/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.license import License\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of License from a JSON string\nlicense_instance = License.from_json(json)\n# print the JSON string representation of the object\nprint(License.to_json())\n\n# convert the object into a dict\nlicense_dict = license_instance.to_dict()\n# create an instance of License from a dict\nlicense_form_dict = license.from_dict(license_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Link/","title":"Link","text":"<p>Link to the data source of this document.</p>"},{"location":"apis/public_v2/docs/Link/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Link/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.link import Link\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Link from a JSON string\nlink_instance = Link.from_json(json)\n# print the JSON string representation of the object\nprint(Link.to_json())\n\n# convert the object into a dict\nlink_dict = link_instance.to_dict()\n# create an instance of Link from a dict\nlink_form_dict = link.from_dict(link_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ListProjectFlavours/","title":"ListProjectFlavours","text":""},{"location":"apis/public_v2/docs/ListProjectFlavours/#properties","title":"Properties","text":"Name Type Description Notes flavours List[BagFlavourFullData] proj_key str"},{"location":"apis/public_v2/docs/ListProjectFlavours/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.list_project_flavours import ListProjectFlavours\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ListProjectFlavours from a JSON string\nlist_project_flavours_instance = ListProjectFlavours.from_json(json)\n# print the JSON string representation of the object\nprint(ListProjectFlavours.to_json())\n\n# convert the object into a dict\nlist_project_flavours_dict = list_project_flavours_instance.to_dict()\n# create an instance of ListProjectFlavours from a dict\nlist_project_flavours_form_dict = list_project_flavours.from_dict(list_project_flavours_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Log/","title":"Log","text":"<p>Log entry to describe an ETL task on a document.</p>"},{"location":"apis/public_v2/docs/Log/#properties","title":"Properties","text":"Name Type Description Notes task Task [optional] agent object The Docling agent that performed the task, e.g., CCS or CXS. type object A task category. comment Comment [optional] var_date object A string representation of the task execution datetime in ISO 8601 format."},{"location":"apis/public_v2/docs/Log/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.log import Log\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Log from a JSON string\nlog_instance = Log.from_json(json)\n# print the JSON string representation of the object\nprint(Log.to_json())\n\n# convert the object into a dict\nlog_dict = log_instance.to_dict()\n# create an instance of Log from a dict\nlog_form_dict = log.from_dict(log_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/MergeMode/","title":"MergeMode","text":""},{"location":"apis/public_v2/docs/MergeMode/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/MergeMode/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.merge_mode import MergeMode\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of MergeMode from a JSON string\nmerge_mode_instance = MergeMode.from_json(json)\n# print the JSON string representation of the object\nprint(MergeMode.to_json())\n\n# convert the object into a dict\nmerge_mode_dict = merge_mode_instance.to_dict()\n# create an instance of MergeMode from a dict\nmerge_mode_form_dict = merge_mode.from_dict(merge_mode_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ModelDate/","title":"ModelDate","text":"<p>A string representation of the acquisition datetime in ISO 8601 format.</p>"},{"location":"apis/public_v2/docs/ModelDate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/ModelDate/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.model_date import ModelDate\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ModelDate from a JSON string\nmodel_date_instance = ModelDate.from_json(json)\n# print the JSON string representation of the object\nprint(ModelDate.to_json())\n\n# convert the object into a dict\nmodel_date_dict = model_date_instance.to_dict()\n# create an instance of ModelDate from a dict\nmodel_date_form_dict = model_date.from_dict(model_date_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ModelFrom/","title":"ModelFrom","text":""},{"location":"apis/public_v2/docs/ModelFrom/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/ModelFrom/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.model_from import ModelFrom\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ModelFrom from a JSON string\nmodel_from_instance = ModelFrom.from_json(json)\n# print the JSON string representation of the object\nprint(ModelFrom.to_json())\n\n# convert the object into a dict\nmodel_from_dict = model_from_instance.to_dict()\n# create an instance of ModelFrom from a dict\nmodel_from_form_dict = model_from.from_dict(model_from_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ModelId/","title":"ModelId","text":""},{"location":"apis/public_v2/docs/ModelId/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/ModelId/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.model_id import ModelId\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ModelId from a JSON string\nmodel_id_instance = ModelId.from_json(json)\n# print the JSON string representation of the object\nprint(ModelId.to_json())\n\n# convert the object into a dict\nmodel_id_dict = model_id_instance.to_dict()\n# create an instance of ModelId from a dict\nmodel_id_form_dict = model_id.from_dict(model_id_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ModelPipelineSettings/","title":"ModelPipelineSettings","text":""},{"location":"apis/public_v2/docs/ModelPipelineSettings/#properties","title":"Properties","text":"Name Type Description Notes clusters List[ModelPipelineSettingsClustersInner] page List[ModelPipelineSettingsClustersInner] tables List[ModelPipelineSettingsClustersInner] normalization List[ModelPipelineSettingsClustersInner]"},{"location":"apis/public_v2/docs/ModelPipelineSettings/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.model_pipeline_settings import ModelPipelineSettings\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ModelPipelineSettings from a JSON string\nmodel_pipeline_settings_instance = ModelPipelineSettings.from_json(json)\n# print the JSON string representation of the object\nprint(ModelPipelineSettings.to_json())\n\n# convert the object into a dict\nmodel_pipeline_settings_dict = model_pipeline_settings_instance.to_dict()\n# create an instance of ModelPipelineSettings from a dict\nmodel_pipeline_settings_form_dict = model_pipeline_settings.from_dict(model_pipeline_settings_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ModelPipelineSettingsClustersInner/","title":"ModelPipelineSettingsClustersInner","text":""},{"location":"apis/public_v2/docs/ModelPipelineSettingsClustersInner/#properties","title":"Properties","text":"Name Type Description Notes model_config_key object proj_key object name object [optional] description object [optional] type object config object"},{"location":"apis/public_v2/docs/ModelPipelineSettingsClustersInner/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.model_pipeline_settings_clusters_inner import ModelPipelineSettingsClustersInner\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ModelPipelineSettingsClustersInner from a JSON string\nmodel_pipeline_settings_clusters_inner_instance = ModelPipelineSettingsClustersInner.from_json(json)\n# print the JSON string representation of the object\nprint(ModelPipelineSettingsClustersInner.to_json())\n\n# convert the object into a dict\nmodel_pipeline_settings_clusters_inner_dict = model_pipeline_settings_clusters_inner_instance.to_dict()\n# create an instance of ModelPipelineSettingsClustersInner from a dict\nmodel_pipeline_settings_clusters_inner_form_dict = model_pipeline_settings_clusters_inner.from_dict(model_pipeline_settings_clusters_inner_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ModulesConfig/","title":"ModulesConfig","text":""},{"location":"apis/public_v2/docs/ModulesConfig/#properties","title":"Properties","text":"Name Type Description Notes df_template_variables List[object] linked_ccs_instances List[object] linked_elastic_instances List[object]"},{"location":"apis/public_v2/docs/ModulesConfig/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.modules_config import ModulesConfig\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ModulesConfig from a JSON string\nmodules_config_instance = ModulesConfig.from_json(json)\n# print the JSON string representation of the object\nprint(ModulesConfig.to_json())\n\n# convert the object into a dict\nmodules_config_dict = modules_config_instance.to_dict()\n# create an instance of ModulesConfig from a dict\nmodules_config_form_dict = modules_config.from_dict(modules_config_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Name/","title":"Name","text":"<p>Name of the collection.</p>"},{"location":"apis/public_v2/docs/Name/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Name/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.name import Name\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Name from a JSON string\nname_instance = Name.from_json(json)\n# print the JSON string representation of the object\nprint(Name.to_json())\n\n# convert the object into a dict\nname_dict = name_instance.to_dict()\n# create an instance of Name from a dict\nname_form_dict = name.from_dict(name_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/NumberPages/","title":"NumberPages","text":""},{"location":"apis/public_v2/docs/NumberPages/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/NumberPages/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.number_pages import NumberPages\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of NumberPages from a JSON string\nnumber_pages_instance = NumberPages.from_json(json)\n# print the JSON string representation of the object\nprint(NumberPages.to_json())\n\n# convert the object into a dict\nnumber_pages_dict = number_pages_instance.to_dict()\n# create an instance of NumberPages from a dict\nnumber_pages_form_dict = number_pages.from_dict(number_pages_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/OCROptions/","title":"OCROptions","text":""},{"location":"apis/public_v2/docs/OCROptions/#properties","title":"Properties","text":"Name Type Description Notes do_ocr bool optional kind str optional"},{"location":"apis/public_v2/docs/OCROptions/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.ocr_options import OCROptions\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of OCROptions from a JSON string\nocr_options_instance = OCROptions.from_json(json)\n# print the JSON string representation of the object\nprint(OCROptions.to_json())\n\n# convert the object into a dict\nocr_options_dict = ocr_options_instance.to_dict()\n# create an instance of OCROptions from a dict\nocr_options_form_dict = ocr_options.from_dict(ocr_options_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ObjectKeys/","title":"ObjectKeys","text":"<p>List of s3 object keys to retrieve from bucket to be converted and uploaded to the data index.</p>"},{"location":"apis/public_v2/docs/ObjectKeys/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/ObjectKeys/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.object_keys import ObjectKeys\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ObjectKeys from a JSON string\nobject_keys_instance = ObjectKeys.from_json(json)\n# print the JSON string representation of the object\nprint(ObjectKeys.to_json())\n\n# convert the object into a dict\nobject_keys_dict = object_keys_instance.to_dict()\n# create an instance of ObjectKeys from a dict\nobject_keys_form_dict = object_keys.from_dict(object_keys_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/OcrSettings/","title":"OcrSettings","text":""},{"location":"apis/public_v2/docs/OcrSettings/#properties","title":"Properties","text":"Name Type Description Notes enabled bool optional backend Backend [optional] backend_settings BackendSettings [optional] merge_mode MergeMode [optional]"},{"location":"apis/public_v2/docs/OcrSettings/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.ocr_settings import OcrSettings\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of OcrSettings from a JSON string\nocr_settings_instance = OcrSettings.from_json(json)\n# print the JSON string representation of the object\nprint(OcrSettings.to_json())\n\n# convert the object into a dict\nocr_settings_dict = ocr_settings_instance.to_dict()\n# create an instance of OcrSettings from a dict\nocr_settings_form_dict = ocr_settings.from_dict(ocr_settings_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Package/","title":"Package","text":""},{"location":"apis/public_v2/docs/Package/#properties","title":"Properties","text":"Name Type Description Notes overrides object package_id str"},{"location":"apis/public_v2/docs/Package/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.package import Package\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Package from a JSON string\npackage_instance = Package.from_json(json)\n# print the JSON string representation of the object\nprint(Package.to_json())\n\n# convert the object into a dict\npackage_dict = package_instance.to_dict()\n# create an instance of Package from a dict\npackage_form_dict = package.from_dict(package_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Page/","title":"Page","text":""},{"location":"apis/public_v2/docs/Page/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Page/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.page import Page\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Page from a JSON string\npage_instance = Page.from_json(json)\n# print the JSON string representation of the object\nprint(Page.to_json())\n\n# convert the object into a dict\npage_dict = page_instance.to_dict()\n# create an instance of Page from a dict\npage_form_dict = page.from_dict(page_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/PageLabels/","title":"PageLabels","text":""},{"location":"apis/public_v2/docs/PageLabels/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/PageLabels/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.page_labels import PageLabels\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PageLabels from a JSON string\npage_labels_instance = PageLabels.from_json(json)\n# print the JSON string representation of the object\nprint(PageLabels.to_json())\n\n# convert the object into a dict\npage_labels_dict = page_labels_instance.to_dict()\n# create an instance of PageLabels from a dict\npage_labels_form_dict = page_labels.from_dict(page_labels_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Pages/","title":"Pages","text":"<p>Page range in the publication.</p>"},{"location":"apis/public_v2/docs/Pages/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Pages/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.pages import Pages\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Pages from a JSON string\npages_instance = Pages.from_json(json)\n# print the JSON string representation of the object\nprint(Pages.to_json())\n\n# convert the object into a dict\npages_dict = pages_instance.to_dict()\n# create an instance of Pages from a dict\npages_form_dict = pages.from_dict(pages_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Params/","title":"Params","text":""},{"location":"apis/public_v2/docs/Params/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Params/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.params import Params\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Params from a JSON string\nparams_instance = Params.from_json(json)\n# print the JSON string representation of the object\nprint(Params.to_json())\n\n# convert the object into a dict\nparams_dict = params_instance.to_dict()\n# create an instance of Params from a dict\nparams_form_dict = params.from_dict(params_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/PartialDirectConversionParameters/","title":"PartialDirectConversionParameters","text":"<p>Specify conversion settings (OCR, Assemble, ML Models) directly.  Fields left null are set to platform defaults.</p>"},{"location":"apis/public_v2/docs/PartialDirectConversionParameters/#properties","title":"Properties","text":"Name Type Description Notes type str optional ocr PartialDirectConversionParametersOcr [optional] assemble PartialDirectConversionParametersAssemble [optional] metadata PartialDirectConversionParametersMetadata [optional] page_labels PageLabels [optional] model_pipeline PartialDirectConversionParametersModelPipeline [optional]"},{"location":"apis/public_v2/docs/PartialDirectConversionParameters/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.partial_direct_conversion_parameters import PartialDirectConversionParameters\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PartialDirectConversionParameters from a JSON string\npartial_direct_conversion_parameters_instance = PartialDirectConversionParameters.from_json(json)\n# print the JSON string representation of the object\nprint(PartialDirectConversionParameters.to_json())\n\n# convert the object into a dict\npartial_direct_conversion_parameters_dict = partial_direct_conversion_parameters_instance.to_dict()\n# create an instance of PartialDirectConversionParameters from a dict\npartial_direct_conversion_parameters_form_dict = partial_direct_conversion_parameters.from_dict(partial_direct_conversion_parameters_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/PartialDirectConversionParametersAssemble/","title":"PartialDirectConversionParametersAssemble","text":""},{"location":"apis/public_v2/docs/PartialDirectConversionParametersAssemble/#properties","title":"Properties","text":"Name Type Description Notes mode AssembleMode include_incomplete_documents object"},{"location":"apis/public_v2/docs/PartialDirectConversionParametersAssemble/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.partial_direct_conversion_parameters_assemble import PartialDirectConversionParametersAssemble\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PartialDirectConversionParametersAssemble from a JSON string\npartial_direct_conversion_parameters_assemble_instance = PartialDirectConversionParametersAssemble.from_json(json)\n# print the JSON string representation of the object\nprint(PartialDirectConversionParametersAssemble.to_json())\n\n# convert the object into a dict\npartial_direct_conversion_parameters_assemble_dict = partial_direct_conversion_parameters_assemble_instance.to_dict()\n# create an instance of PartialDirectConversionParametersAssemble from a dict\npartial_direct_conversion_parameters_assemble_form_dict = partial_direct_conversion_parameters_assemble.from_dict(partial_direct_conversion_parameters_assemble_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/PartialDirectConversionParametersMetadata/","title":"PartialDirectConversionParametersMetadata","text":""},{"location":"apis/public_v2/docs/PartialDirectConversionParametersMetadata/#properties","title":"Properties","text":"Name Type Description Notes description Description [optional] display_name DisplayName [optional] license License [optional] source Source1 [optional] version Version1 [optional]"},{"location":"apis/public_v2/docs/PartialDirectConversionParametersMetadata/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.partial_direct_conversion_parameters_metadata import PartialDirectConversionParametersMetadata\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PartialDirectConversionParametersMetadata from a JSON string\npartial_direct_conversion_parameters_metadata_instance = PartialDirectConversionParametersMetadata.from_json(json)\n# print the JSON string representation of the object\nprint(PartialDirectConversionParametersMetadata.to_json())\n\n# convert the object into a dict\npartial_direct_conversion_parameters_metadata_dict = partial_direct_conversion_parameters_metadata_instance.to_dict()\n# create an instance of PartialDirectConversionParametersMetadata from a dict\npartial_direct_conversion_parameters_metadata_form_dict = partial_direct_conversion_parameters_metadata.from_dict(partial_direct_conversion_parameters_metadata_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/PartialDirectConversionParametersModelPipeline/","title":"PartialDirectConversionParametersModelPipeline","text":""},{"location":"apis/public_v2/docs/PartialDirectConversionParametersModelPipeline/#properties","title":"Properties","text":"Name Type Description Notes clusters object page object tables object normalization object"},{"location":"apis/public_v2/docs/PartialDirectConversionParametersModelPipeline/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.partial_direct_conversion_parameters_model_pipeline import PartialDirectConversionParametersModelPipeline\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PartialDirectConversionParametersModelPipeline from a JSON string\npartial_direct_conversion_parameters_model_pipeline_instance = PartialDirectConversionParametersModelPipeline.from_json(json)\n# print the JSON string representation of the object\nprint(PartialDirectConversionParametersModelPipeline.to_json())\n\n# convert the object into a dict\npartial_direct_conversion_parameters_model_pipeline_dict = partial_direct_conversion_parameters_model_pipeline_instance.to_dict()\n# create an instance of PartialDirectConversionParametersModelPipeline from a dict\npartial_direct_conversion_parameters_model_pipeline_form_dict = partial_direct_conversion_parameters_model_pipeline.from_dict(partial_direct_conversion_parameters_model_pipeline_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/PartialDirectConversionParametersOcr/","title":"PartialDirectConversionParametersOcr","text":""},{"location":"apis/public_v2/docs/PartialDirectConversionParametersOcr/#properties","title":"Properties","text":"Name Type Description Notes enabled object [optional] backend Backend [optional] backend_settings BackendSettings [optional] merge_mode MergeMode [optional]"},{"location":"apis/public_v2/docs/PartialDirectConversionParametersOcr/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.partial_direct_conversion_parameters_ocr import PartialDirectConversionParametersOcr\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PartialDirectConversionParametersOcr from a JSON string\npartial_direct_conversion_parameters_ocr_instance = PartialDirectConversionParametersOcr.from_json(json)\n# print the JSON string representation of the object\nprint(PartialDirectConversionParametersOcr.to_json())\n\n# convert the object into a dict\npartial_direct_conversion_parameters_ocr_dict = partial_direct_conversion_parameters_ocr_instance.to_dict()\n# create an instance of PartialDirectConversionParametersOcr from a dict\npartial_direct_conversion_parameters_ocr_form_dict = partial_direct_conversion_parameters_ocr.from_dict(partial_direct_conversion_parameters_ocr_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjKey/","title":"ProjKey","text":""},{"location":"apis/public_v2/docs/ProjKey/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/ProjKey/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.proj_key import ProjKey\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjKey from a JSON string\nproj_key_instance = ProjKey.from_json(json)\n# print the JSON string representation of the object\nprint(ProjKey.to_json())\n\n# convert the object into a dict\nproj_key_dict = proj_key_instance.to_dict()\n# create an instance of ProjKey from a dict\nproj_key_form_dict = proj_key.from_dict(proj_key_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectAgent/","title":"ProjectAgent","text":""},{"location":"apis/public_v2/docs/ProjectAgent/#properties","title":"Properties","text":"Name Type Description Notes agent_info object agent_name str version str"},{"location":"apis/public_v2/docs/ProjectAgent/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_agent import ProjectAgent\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectAgent from a JSON string\nproject_agent_instance = ProjectAgent.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectAgent.to_json())\n\n# convert the object into a dict\nproject_agent_dict = project_agent_instance.to_dict()\n# create an instance of ProjectAgent from a dict\nproject_agent_form_dict = project_agent.from_dict(project_agent_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectAgents/","title":"ProjectAgents","text":""},{"location":"apis/public_v2/docs/ProjectAgents/#properties","title":"Properties","text":"Name Type Description Notes agents List[ProjectAgent]"},{"location":"apis/public_v2/docs/ProjectAgents/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_agents import ProjectAgents\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectAgents from a JSON string\nproject_agents_instance = ProjectAgents.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectAgents.to_json())\n\n# convert the object into a dict\nproject_agents_dict = project_agents_instance.to_dict()\n# create an instance of ProjectAgents from a dict\nproject_agents_form_dict = project_agents.from_dict(project_agents_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectApi/","title":"deepsearch.cps.apis.public_v2.ProjectApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description convert_document POST /project/{proj_key}/convert Convert Document delete_project_integration_config_genai DELETE /project/{proj_key}/integrations/genai Delete Project Integration Config Genai get_convert_task GET /project/{proj_key}/convert_tasks/{task_id} Get Convert Task get_project_default_values GET /project/{proj_key}/default_values Get Project Default Values get_project_integration_config_genai GET /project/{proj_key}/integrations/genai Get Project Integration Config Genai provision_project_packages POST /project/{proj_key}/packages Provision Project Packages update_project_default_values POST /project/{proj_key}/default_values Update Project Default Values update_project_integration_config_genai POST /project/{proj_key}/integrations/genai Update Project Integration Config Genai"},{"location":"apis/public_v2/docs/ProjectApi/#convert_document","title":"convert_document","text":"<p>CpsTask convert_document(proj_key, convert_document_request)</p> <p>Convert Document</p> <p>Convert a document directly with Docling.</p>"},{"location":"apis/public_v2/docs/ProjectApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.convert_document_request import ConvertDocumentRequest\nfrom deepsearch.cps.apis.public_v2.models.cps_task import CpsTask\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ProjectApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    convert_document_request = deepsearch.cps.apis.public_v2.ConvertDocumentRequest() # ConvertDocumentRequest | \n\n    try:\n        # Convert Document\n        api_response = api_instance.convert_document(proj_key, convert_document_request)\n        print(\"The response of ProjectApi-&gt;convert_document:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProjectApi-&gt;convert_document: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ProjectApi/#parameters","title":"Parameters","text":"Name Type Description Notes proj_key str convert_document_request ConvertDocumentRequest"},{"location":"apis/public_v2/docs/ProjectApi/#return-type","title":"Return type","text":"<p>CpsTask</p>"},{"location":"apis/public_v2/docs/ProjectApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ProjectApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ProjectApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectApi/#delete_project_integration_config_genai","title":"delete_project_integration_config_genai","text":"<p>delete_project_integration_config_genai(proj_key)</p> <p>Delete Project Integration Config Genai</p> <p>Delete the GenAI config for a given project integration.</p>"},{"location":"apis/public_v2/docs/ProjectApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ProjectApi(api_client)\n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Delete Project Integration Config Genai\n        api_instance.delete_project_integration_config_genai(proj_key)\n    except Exception as e:\n        print(\"Exception when calling ProjectApi-&gt;delete_project_integration_config_genai: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ProjectApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes proj_key str"},{"location":"apis/public_v2/docs/ProjectApi/#return-type_1","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"apis/public_v2/docs/ProjectApi/#authorization_1","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ProjectApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ProjectApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 204 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectApi/#get_convert_task","title":"get_convert_task","text":"<p>TaskResult get_convert_task(task_id, proj_key, wait=wait)</p> <p>Get Convert Task</p> <p>Check status of a Docling conversion task; return presign urls for MD and JSON file if finished conversion successfully.</p>"},{"location":"apis/public_v2/docs/ProjectApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.task_result import TaskResult\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ProjectApi(api_client)\n    task_id = 'task_id_example' # str | \n    proj_key = 'proj_key_example' # str | \n    wait = deepsearch.cps.apis.public_v2.Wait() # Wait | Optionally block this method call for a few seconds to wait for the result instead of polling through multiple calls. (optional)\n\n    try:\n        # Get Convert Task\n        api_response = api_instance.get_convert_task(task_id, proj_key, wait=wait)\n        print(\"The response of ProjectApi-&gt;get_convert_task:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProjectApi-&gt;get_convert_task: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ProjectApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes task_id str proj_key str wait Wait Optionally block this method call for a few seconds to wait for the result instead of polling through multiple calls. [optional]"},{"location":"apis/public_v2/docs/ProjectApi/#return-type_2","title":"Return type","text":"<p>TaskResult</p>"},{"location":"apis/public_v2/docs/ProjectApi/#authorization_2","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ProjectApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ProjectApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectApi/#get_project_default_values","title":"get_project_default_values","text":"<p>DefaultValues get_project_default_values(proj_key)</p> <p>Get Project Default Values</p> <p>List project's default values.</p>"},{"location":"apis/public_v2/docs/ProjectApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.default_values import DefaultValues\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ProjectApi(api_client)\n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Default Values\n        api_response = api_instance.get_project_default_values(proj_key)\n        print(\"The response of ProjectApi-&gt;get_project_default_values:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProjectApi-&gt;get_project_default_values: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ProjectApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes proj_key str"},{"location":"apis/public_v2/docs/ProjectApi/#return-type_3","title":"Return type","text":"<p>DefaultValues</p>"},{"location":"apis/public_v2/docs/ProjectApi/#authorization_3","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ProjectApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ProjectApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectApi/#get_project_integration_config_genai","title":"get_project_integration_config_genai","text":"<p>ResponseGetProjectIntegrationConfigGenai get_project_integration_config_genai(proj_key, decode_secrets=decode_secrets)</p> <p>Get Project Integration Config Genai</p> <p>Get the GenAI config for a given project.</p>"},{"location":"apis/public_v2/docs/ProjectApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.response_get_project_integration_config_genai import ResponseGetProjectIntegrationConfigGenai\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ProjectApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    decode_secrets = deepsearch.cps.apis.public_v2.DecodeSecrets() # DecodeSecrets |  (optional)\n\n    try:\n        # Get Project Integration Config Genai\n        api_response = api_instance.get_project_integration_config_genai(proj_key, decode_secrets=decode_secrets)\n        print(\"The response of ProjectApi-&gt;get_project_integration_config_genai:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProjectApi-&gt;get_project_integration_config_genai: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ProjectApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes proj_key str decode_secrets DecodeSecrets [optional]"},{"location":"apis/public_v2/docs/ProjectApi/#return-type_4","title":"Return type","text":"<p>ResponseGetProjectIntegrationConfigGenai</p>"},{"location":"apis/public_v2/docs/ProjectApi/#authorization_4","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ProjectApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ProjectApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectApi/#provision_project_packages","title":"provision_project_packages","text":"<p>TaskContext provision_project_packages(proj_key, project_package_instalation_manifest)</p> <p>Provision Project Packages</p> <p>Install packages on a project.</p>"},{"location":"apis/public_v2/docs/ProjectApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_package_instalation_manifest import ProjectPackageInstalationManifest\nfrom deepsearch.cps.apis.public_v2.models.task_context import TaskContext\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ProjectApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    project_package_instalation_manifest = deepsearch.cps.apis.public_v2.ProjectPackageInstalationManifest() # ProjectPackageInstalationManifest | \n\n    try:\n        # Provision Project Packages\n        api_response = api_instance.provision_project_packages(proj_key, project_package_instalation_manifest)\n        print(\"The response of ProjectApi-&gt;provision_project_packages:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProjectApi-&gt;provision_project_packages: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ProjectApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes proj_key str project_package_instalation_manifest ProjectPackageInstalationManifest"},{"location":"apis/public_v2/docs/ProjectApi/#return-type_5","title":"Return type","text":"<p>TaskContext</p>"},{"location":"apis/public_v2/docs/ProjectApi/#authorization_5","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ProjectApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ProjectApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectApi/#update_project_default_values","title":"update_project_default_values","text":"<p>object update_project_default_values(proj_key, default_values)</p> <p>Update Project Default Values</p> <p>Update project's default values.</p>"},{"location":"apis/public_v2/docs/ProjectApi/#example_6","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.default_values import DefaultValues\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ProjectApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    default_values = deepsearch.cps.apis.public_v2.DefaultValues() # DefaultValues | \n\n    try:\n        # Update Project Default Values\n        api_response = api_instance.update_project_default_values(proj_key, default_values)\n        print(\"The response of ProjectApi-&gt;update_project_default_values:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling ProjectApi-&gt;update_project_default_values: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ProjectApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes proj_key str default_values DefaultValues"},{"location":"apis/public_v2/docs/ProjectApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/ProjectApi/#authorization_6","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ProjectApi/#http-request-headers_6","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ProjectApi/#http-response-details_6","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectApi/#update_project_integration_config_genai","title":"update_project_integration_config_genai","text":"<p>update_project_integration_config_genai(proj_key, config)</p> <p>Update Project Integration Config Genai</p> <p>Update the GenAI config for a given project.</p>"},{"location":"apis/public_v2/docs/ProjectApi/#example_7","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.config import Config\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.ProjectApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    config = deepsearch.cps.apis.public_v2.Config() # Config | \n\n    try:\n        # Update Project Integration Config Genai\n        api_instance.update_project_integration_config_genai(proj_key, config)\n    except Exception as e:\n        print(\"Exception when calling ProjectApi-&gt;update_project_integration_config_genai: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/ProjectApi/#parameters_7","title":"Parameters","text":"Name Type Description Notes proj_key str config Config"},{"location":"apis/public_v2/docs/ProjectApi/#return-type_7","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"apis/public_v2/docs/ProjectApi/#authorization_7","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/ProjectApi/#http-request-headers_7","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/ProjectApi/#http-response-details_7","title":"HTTP response details","text":"Status code Description Response headers 204 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectDataIndexConversionSettingsInput/","title":"ProjectDataIndexConversionSettingsInput","text":""},{"location":"apis/public_v2/docs/ProjectDataIndexConversionSettingsInput/#properties","title":"Properties","text":"Name Type Description Notes ocr OCROptions [optional] table_structure TableStructureOptions [optional] generate_page_images bool optional"},{"location":"apis/public_v2/docs/ProjectDataIndexConversionSettingsInput/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_data_index_conversion_settings_input import ProjectDataIndexConversionSettingsInput\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectDataIndexConversionSettingsInput from a JSON string\nproject_data_index_conversion_settings_input_instance = ProjectDataIndexConversionSettingsInput.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectDataIndexConversionSettingsInput.to_json())\n\n# convert the object into a dict\nproject_data_index_conversion_settings_input_dict = project_data_index_conversion_settings_input_instance.to_dict()\n# create an instance of ProjectDataIndexConversionSettingsInput from a dict\nproject_data_index_conversion_settings_input_form_dict = project_data_index_conversion_settings_input.from_dict(project_data_index_conversion_settings_input_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectDataIndexConversionSettingsOutput/","title":"ProjectDataIndexConversionSettingsOutput","text":""},{"location":"apis/public_v2/docs/ProjectDataIndexConversionSettingsOutput/#properties","title":"Properties","text":"Name Type Description Notes ocr OCROptions [optional] table_structure TableStructureOptions [optional] generate_page_images bool optional"},{"location":"apis/public_v2/docs/ProjectDataIndexConversionSettingsOutput/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_data_index_conversion_settings_output import ProjectDataIndexConversionSettingsOutput\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectDataIndexConversionSettingsOutput from a JSON string\nproject_data_index_conversion_settings_output_instance = ProjectDataIndexConversionSettingsOutput.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectDataIndexConversionSettingsOutput.to_json())\n\n# convert the object into a dict\nproject_data_index_conversion_settings_output_dict = project_data_index_conversion_settings_output_instance.to_dict()\n# create an instance of ProjectDataIndexConversionSettingsOutput from a dict\nproject_data_index_conversion_settings_output_form_dict = project_data_index_conversion_settings_output.from_dict(project_data_index_conversion_settings_output_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectDataIndexNonView/","title":"ProjectDataIndexNonView","text":""},{"location":"apis/public_v2/docs/ProjectDataIndexNonView/#properties","title":"Properties","text":"Name Type Description Notes name str description Description [optional] schema_key str optional"},{"location":"apis/public_v2/docs/ProjectDataIndexNonView/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_data_index_non_view import ProjectDataIndexNonView\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectDataIndexNonView from a JSON string\nproject_data_index_non_view_instance = ProjectDataIndexNonView.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectDataIndexNonView.to_json())\n\n# convert the object into a dict\nproject_data_index_non_view_dict = project_data_index_non_view_instance.to_dict()\n# create an instance of ProjectDataIndexNonView from a dict\nproject_data_index_non_view_form_dict = project_data_index_non_view.from_dict(project_data_index_non_view_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectDataIndexSource/","title":"ProjectDataIndexSource","text":""},{"location":"apis/public_v2/docs/ProjectDataIndexSource/#properties","title":"Properties","text":"Name Type Description Notes index_key str proj_key str"},{"location":"apis/public_v2/docs/ProjectDataIndexSource/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_data_index_source import ProjectDataIndexSource\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectDataIndexSource from a JSON string\nproject_data_index_source_instance = ProjectDataIndexSource.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectDataIndexSource.to_json())\n\n# convert the object into a dict\nproject_data_index_source_dict = project_data_index_source_instance.to_dict()\n# create an instance of ProjectDataIndexSource from a dict\nproject_data_index_source_form_dict = project_data_index_source.from_dict(project_data_index_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectDataIndexView/","title":"ProjectDataIndexView","text":""},{"location":"apis/public_v2/docs/ProjectDataIndexView/#properties","title":"Properties","text":"Name Type Description Notes name str description Description [optional] view_of ViewOf"},{"location":"apis/public_v2/docs/ProjectDataIndexView/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_data_index_view import ProjectDataIndexView\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectDataIndexView from a JSON string\nproject_data_index_view_instance = ProjectDataIndexView.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectDataIndexView.to_json())\n\n# convert the object into a dict\nproject_data_index_view_dict = project_data_index_view_instance.to_dict()\n# create an instance of ProjectDataIndexView from a dict\nproject_data_index_view_form_dict = project_data_index_view.from_dict(project_data_index_view_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectDataIndexWithStatus/","title":"ProjectDataIndexWithStatus","text":""},{"location":"apis/public_v2/docs/ProjectDataIndexWithStatus/#properties","title":"Properties","text":"Name Type Description Notes source Source3 name str documents int health str status str creation_date str metadata ProjectDataIndexWithStatusMetadata [optional] description str schema_key SchemaKey [optional] type str view_of ViewOf1 [optional] record_properties RecordProperties [optional] provenance Provenance [optional]"},{"location":"apis/public_v2/docs/ProjectDataIndexWithStatus/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_data_index_with_status import ProjectDataIndexWithStatus\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectDataIndexWithStatus from a JSON string\nproject_data_index_with_status_instance = ProjectDataIndexWithStatus.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectDataIndexWithStatus.to_json())\n\n# convert the object into a dict\nproject_data_index_with_status_dict = project_data_index_with_status_instance.to_dict()\n# create an instance of ProjectDataIndexWithStatus from a dict\nproject_data_index_with_status_form_dict = project_data_index_with_status.from_dict(project_data_index_with_status_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectDataIndexWithStatusMetadata/","title":"ProjectDataIndexWithStatusMetadata","text":""},{"location":"apis/public_v2/docs/ProjectDataIndexWithStatusMetadata/#properties","title":"Properties","text":"Name Type Description Notes aliases Aliases [optional] created Created [optional] description Description [optional] display_name DisplayName [optional] source Source1 [optional] storage Storage [optional] version Version1 [optional] type Type [optional] domain Domain [optional] classification object"},{"location":"apis/public_v2/docs/ProjectDataIndexWithStatusMetadata/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_data_index_with_status_metadata import ProjectDataIndexWithStatusMetadata\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectDataIndexWithStatusMetadata from a JSON string\nproject_data_index_with_status_metadata_instance = ProjectDataIndexWithStatusMetadata.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectDataIndexWithStatusMetadata.to_json())\n\n# convert the object into a dict\nproject_data_index_with_status_metadata_dict = project_data_index_with_status_metadata_instance.to_dict()\n# create an instance of ProjectDataIndexWithStatusMetadata from a dict\nproject_data_index_with_status_metadata_form_dict = project_data_index_with_status_metadata.from_dict(project_data_index_with_status_metadata_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectDocument/","title":"ProjectDocument","text":""},{"location":"apis/public_v2/docs/ProjectDocument/#properties","title":"Properties","text":"Name Type Description Notes document_hash str filename Filename [optional] file_uri FileUri [optional] ref_uri RefUri [optional] number_pages NumberPages [optional] status Status [optional]"},{"location":"apis/public_v2/docs/ProjectDocument/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_document import ProjectDocument\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectDocument from a JSON string\nproject_document_instance = ProjectDocument.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectDocument.to_json())\n\n# convert the object into a dict\nproject_document_dict = project_document_instance.to_dict()\n# create an instance of ProjectDocument from a dict\nproject_document_form_dict = project_document.from_dict(project_document_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectDocumentURL/","title":"ProjectDocumentURL","text":""},{"location":"apis/public_v2/docs/ProjectDocumentURL/#properties","title":"Properties","text":"Name Type Description Notes download_url str"},{"location":"apis/public_v2/docs/ProjectDocumentURL/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_document_url import ProjectDocumentURL\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectDocumentURL from a JSON string\nproject_document_url_instance = ProjectDocumentURL.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectDocumentURL.to_json())\n\n# convert the object into a dict\nproject_document_url_dict = project_document_url_instance.to_dict()\n# create an instance of ProjectDocumentURL from a dict\nproject_document_url_form_dict = project_document_url.from_dict(project_document_url_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectDocuments/","title":"ProjectDocuments","text":""},{"location":"apis/public_v2/docs/ProjectDocuments/#properties","title":"Properties","text":"Name Type Description Notes documents List[ProjectDocument]"},{"location":"apis/public_v2/docs/ProjectDocuments/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_documents import ProjectDocuments\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectDocuments from a JSON string\nproject_documents_instance = ProjectDocuments.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectDocuments.to_json())\n\n# convert the object into a dict\nproject_documents_dict = project_documents_instance.to_dict()\n# create an instance of ProjectDocuments from a dict\nproject_documents_form_dict = project_documents.from_dict(project_documents_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectFlavourTotalKgs/","title":"ProjectFlavourTotalKgs","text":""},{"location":"apis/public_v2/docs/ProjectFlavourTotalKgs/#properties","title":"Properties","text":"Name Type Description Notes proj_key str flavour_name str total_kgs int"},{"location":"apis/public_v2/docs/ProjectFlavourTotalKgs/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_flavour_total_kgs import ProjectFlavourTotalKgs\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectFlavourTotalKgs from a JSON string\nproject_flavour_total_kgs_instance = ProjectFlavourTotalKgs.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectFlavourTotalKgs.to_json())\n\n# convert the object into a dict\nproject_flavour_total_kgs_dict = project_flavour_total_kgs_instance.to_dict()\n# create an instance of ProjectFlavourTotalKgs from a dict\nproject_flavour_total_kgs_form_dict = project_flavour_total_kgs.from_dict(project_flavour_total_kgs_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectFlavoursQuota/","title":"ProjectFlavoursQuota","text":""},{"location":"apis/public_v2/docs/ProjectFlavoursQuota/#properties","title":"Properties","text":"Name Type Description Notes name str proj_key str quotas List[FlavoursQuota]"},{"location":"apis/public_v2/docs/ProjectFlavoursQuota/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_flavours_quota import ProjectFlavoursQuota\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectFlavoursQuota from a JSON string\nproject_flavours_quota_instance = ProjectFlavoursQuota.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectFlavoursQuota.to_json())\n\n# convert the object into a dict\nproject_flavours_quota_dict = project_flavours_quota_instance.to_dict()\n# create an instance of ProjectFlavoursQuota from a dict\nproject_flavours_quota_form_dict = project_flavours_quota.from_dict(project_flavours_quota_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectPackageInstalationManifest/","title":"ProjectPackageInstalationManifest","text":""},{"location":"apis/public_v2/docs/ProjectPackageInstalationManifest/#properties","title":"Properties","text":"Name Type Description Notes packages List[Package]"},{"location":"apis/public_v2/docs/ProjectPackageInstalationManifest/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_package_instalation_manifest import ProjectPackageInstalationManifest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectPackageInstalationManifest from a JSON string\nproject_package_instalation_manifest_instance = ProjectPackageInstalationManifest.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectPackageInstalationManifest.to_json())\n\n# convert the object into a dict\nproject_package_instalation_manifest_dict = project_package_instalation_manifest_instance.to_dict()\n# create an instance of ProjectPackageInstalationManifest from a dict\nproject_package_instalation_manifest_form_dict = project_package_instalation_manifest.from_dict(project_package_instalation_manifest_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectScratchFiles/","title":"ProjectScratchFiles","text":""},{"location":"apis/public_v2/docs/ProjectScratchFiles/#properties","title":"Properties","text":"Name Type Description Notes id str proj_key str user_key str filename str timestamp str url str"},{"location":"apis/public_v2/docs/ProjectScratchFiles/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_scratch_files import ProjectScratchFiles\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectScratchFiles from a JSON string\nproject_scratch_files_instance = ProjectScratchFiles.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectScratchFiles.to_json())\n\n# convert the object into a dict\nproject_scratch_files_dict = project_scratch_files_instance.to_dict()\n# create an instance of ProjectScratchFiles from a dict\nproject_scratch_files_form_dict = project_scratch_files.from_dict(project_scratch_files_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectScratchFilesPaginated/","title":"ProjectScratchFilesPaginated","text":""},{"location":"apis/public_v2/docs/ProjectScratchFilesPaginated/#properties","title":"Properties","text":"Name Type Description Notes files List[ProjectScratchFiles] count int page int items_per_page int"},{"location":"apis/public_v2/docs/ProjectScratchFilesPaginated/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_scratch_files_paginated import ProjectScratchFilesPaginated\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectScratchFilesPaginated from a JSON string\nproject_scratch_files_paginated_instance = ProjectScratchFilesPaginated.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectScratchFilesPaginated.to_json())\n\n# convert the object into a dict\nproject_scratch_files_paginated_dict = project_scratch_files_paginated_instance.to_dict()\n# create an instance of ProjectScratchFilesPaginated from a dict\nproject_scratch_files_paginated_form_dict = project_scratch_files_paginated.from_dict(project_scratch_files_paginated_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectSourceDataIndex/","title":"ProjectSourceDataIndex","text":""},{"location":"apis/public_v2/docs/ProjectSourceDataIndex/#properties","title":"Properties","text":"Name Type Description Notes index_key str query_options ElasticIndexSearchQueryOptions proj_key str"},{"location":"apis/public_v2/docs/ProjectSourceDataIndex/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.project_source_data_index import ProjectSourceDataIndex\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectSourceDataIndex from a JSON string\nproject_source_data_index_instance = ProjectSourceDataIndex.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectSourceDataIndex.to_json())\n\n# convert the object into a dict\nproject_source_data_index_dict = project_source_data_index_instance.to_dict()\n# create an instance of ProjectSourceDataIndex from a dict\nproject_source_data_index_form_dict = project_source_data_index.from_dict(project_source_data_index_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ProjectsFlavours/","title":"ProjectsFlavours","text":""},{"location":"apis/public_v2/docs/ProjectsFlavours/#properties","title":"Properties","text":"Name Type Description Notes proj_key str name str flavours List[Flavour]"},{"location":"apis/public_v2/docs/ProjectsFlavours/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.projects_flavours import ProjectsFlavours\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ProjectsFlavours from a JSON string\nprojects_flavours_instance = ProjectsFlavours.from_json(json)\n# print the JSON string representation of the object\nprint(ProjectsFlavours.to_json())\n\n# convert the object into a dict\nprojects_flavours_dict = projects_flavours_instance.to_dict()\n# create an instance of ProjectsFlavours from a dict\nprojects_flavours_form_dict = projects_flavours.from_dict(projects_flavours_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/PromptTemplate/","title":"PromptTemplate","text":""},{"location":"apis/public_v2/docs/PromptTemplate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/PromptTemplate/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.prompt_template import PromptTemplate\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PromptTemplate from a JSON string\nprompt_template_instance = PromptTemplate.from_json(json)\n# print the JSON string representation of the object\nprint(PromptTemplate.to_json())\n\n# convert the object into a dict\nprompt_template_dict = prompt_template_instance.to_dict()\n# create an instance of PromptTemplate from a dict\nprompt_template_form_dict = prompt_template.from_dict(prompt_template_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Properties/","title":"Properties","text":""},{"location":"apis/public_v2/docs/Properties/#properties_1","title":"Properties","text":"Name Type Description Notes properties Dict[str, Properties] type object enabled Enabled [optional] ignore_above IgnoreAbove [optional]"},{"location":"apis/public_v2/docs/Properties/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.properties import Properties\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Properties from a JSON string\nproperties_instance = Properties.from_json(json)\n# print the JSON string representation of the object\nprint(Properties.to_json())\n\n# convert the object into a dict\nproperties_dict = properties_instance.to_dict()\n# create an instance of Properties from a dict\nproperties_form_dict = properties.from_dict(properties_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Provenance/","title":"Provenance","text":""},{"location":"apis/public_v2/docs/Provenance/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Provenance/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.provenance import Provenance\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Provenance from a JSON string\nprovenance_instance = Provenance.from_json(json)\n# print the JSON string representation of the object\nprint(Provenance.to_json())\n\n# convert the object into a dict\nprovenance_dict = provenance_instance.to_dict()\n# create an instance of Provenance from a dict\nprovenance_form_dict = provenance.from_dict(provenance_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Publication/","title":"Publication","text":"<p>Publication details of a journal or venue.</p>"},{"location":"apis/public_v2/docs/Publication/#properties","title":"Properties","text":"Name Type Description Notes identifiers Identifiers1 [optional] name str Name of the publication. alternate_names AlternateNames [optional] type Type1 [optional] pages Pages [optional] issue Issue [optional] volume Volume [optional] url Url [optional]"},{"location":"apis/public_v2/docs/Publication/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.publication import Publication\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Publication from a JSON string\npublication_instance = Publication.from_json(json)\n# print the JSON string representation of the object\nprint(Publication.to_json())\n\n# convert the object into a dict\npublication_dict = publication_instance.to_dict()\n# create an instance of Publication from a dict\npublication_form_dict = publication.from_dict(publication_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Publication1/","title":"Publication1","text":"<p>List of publication journals or venues.</p>"},{"location":"apis/public_v2/docs/Publication1/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Publication1/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.publication1 import Publication1\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Publication1 from a JSON string\npublication1_instance = Publication1.from_json(json)\n# print the JSON string representation of the object\nprint(Publication1.to_json())\n\n# convert the object into a dict\npublication1_dict = publication1_instance.to_dict()\n# create an instance of Publication1 from a dict\npublication1_form_dict = publication1.from_dict(publication1_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/PublicationDate/","title":"PublicationDate","text":""},{"location":"apis/public_v2/docs/PublicationDate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/PublicationDate/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.publication_date import PublicationDate\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of PublicationDate from a JSON string\npublication_date_instance = PublicationDate.from_json(json)\n# print the JSON string representation of the object\nprint(PublicationDate.to_json())\n\n# convert the object into a dict\npublication_date_dict = publication_date_instance.to_dict()\n# create an instance of PublicationDate from a dict\npublication_date_form_dict = publication_date.from_dict(publication_date_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Publishers/","title":"Publishers","text":""},{"location":"apis/public_v2/docs/Publishers/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Publishers/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.publishers import Publishers\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Publishers from a JSON string\npublishers_instance = Publishers.from_json(json)\n# print the JSON string representation of the object\nprint(Publishers.to_json())\n\n# convert the object into a dict\npublishers_dict = publishers_instance.to_dict()\n# create an instance of Publishers from a dict\npublishers_form_dict = publishers.from_dict(publishers_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Query/","title":"Query","text":""},{"location":"apis/public_v2/docs/Query/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Query/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.query import Query\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Query from a JSON string\nquery_instance = Query.from_json(json)\n# print the JSON string representation of the object\nprint(Query.to_json())\n\n# convert the object into a dict\nquery_dict = query_instance.to_dict()\n# create an instance of Query from a dict\nquery_form_dict = query.from_dict(query_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/RecordProperties/","title":"RecordProperties","text":""},{"location":"apis/public_v2/docs/RecordProperties/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/RecordProperties/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.record_properties import RecordProperties\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of RecordProperties from a JSON string\nrecord_properties_instance = RecordProperties.from_json(json)\n# print the JSON string representation of the object\nprint(RecordProperties.to_json())\n\n# convert the object into a dict\nrecord_properties_dict = record_properties_instance.to_dict()\n# create an instance of RecordProperties from a dict\nrecord_properties_form_dict = record_properties.from_dict(record_properties_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/RefUri/","title":"RefUri","text":""},{"location":"apis/public_v2/docs/RefUri/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/RefUri/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.ref_uri import RefUri\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of RefUri from a JSON string\nref_uri_instance = RefUri.from_json(json)\n# print the JSON string representation of the object\nprint(RefUri.to_json())\n\n# convert the object into a dict\nref_uri_dict = ref_uri_instance.to_dict()\n# create an instance of RefUri from a dict\nref_uri_form_dict = ref_uri.from_dict(ref_uri_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ReferenceCount/","title":"ReferenceCount","text":"<p>Total number of documents referenced by this document.</p>"},{"location":"apis/public_v2/docs/ReferenceCount/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/ReferenceCount/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.reference_count import ReferenceCount\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ReferenceCount from a JSON string\nreference_count_instance = ReferenceCount.from_json(json)\n# print the JSON string representation of the object\nprint(ReferenceCount.to_json())\n\n# convert the object into a dict\nreference_count_dict = reference_count_instance.to_dict()\n# create an instance of ReferenceCount from a dict\nreference_count_form_dict = reference_count.from_dict(reference_count_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ReferenceToModel/","title":"ReferenceToModel","text":"<p>Reference to a model configuration.</p>"},{"location":"apis/public_v2/docs/ReferenceToModel/#properties","title":"Properties","text":"Name Type Description Notes model_config_key str proj_key str name str optional description str optional"},{"location":"apis/public_v2/docs/ReferenceToModel/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.reference_to_model import ReferenceToModel\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ReferenceToModel from a JSON string\nreference_to_model_instance = ReferenceToModel.from_json(json)\n# print the JSON string representation of the object\nprint(ReferenceToModel.to_json())\n\n# convert the object into a dict\nreference_to_model_dict = reference_to_model_instance.to_dict()\n# create an instance of ReferenceToModel from a dict\nreference_to_model_form_dict = reference_to_model.from_dict(reference_to_model_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/References/","title":"References","text":""},{"location":"apis/public_v2/docs/References/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/References/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.references import References\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of References from a JSON string\nreferences_instance = References.from_json(json)\n# print the JSON string representation of the object\nprint(References.to_json())\n\n# convert the object into a dict\nreferences_dict = references_instance.to_dict()\n# create an instance of References from a dict\nreferences_form_dict = references.from_dict(references_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/RelatedTasks/","title":"RelatedTasks","text":""},{"location":"apis/public_v2/docs/RelatedTasks/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/RelatedTasks/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.related_tasks import RelatedTasks\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of RelatedTasks from a JSON string\nrelated_tasks_instance = RelatedTasks.from_json(json)\n# print the JSON string representation of the object\nprint(RelatedTasks.to_json())\n\n# convert the object into a dict\nrelated_tasks_dict = related_tasks_instance.to_dict()\n# create an instance of RelatedTasks from a dict\nrelated_tasks_form_dict = related_tasks.from_dict(related_tasks_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ResponseDocumentArtifacts/","title":"ResponseDocumentArtifacts","text":""},{"location":"apis/public_v2/docs/ResponseDocumentArtifacts/#properties","title":"Properties","text":"Name Type Description Notes artifacts DocumentArtifacts"},{"location":"apis/public_v2/docs/ResponseDocumentArtifacts/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.response_document_artifacts import ResponseDocumentArtifacts\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ResponseDocumentArtifacts from a JSON string\nresponse_document_artifacts_instance = ResponseDocumentArtifacts.from_json(json)\n# print the JSON string representation of the object\nprint(ResponseDocumentArtifacts.to_json())\n\n# convert the object into a dict\nresponse_document_artifacts_dict = response_document_artifacts_instance.to_dict()\n# create an instance of ResponseDocumentArtifacts from a dict\nresponse_document_artifacts_form_dict = response_document_artifacts.from_dict(response_document_artifacts_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ResponseGetProjectDataIndexConversionSettings/","title":"ResponseGetProjectDataIndexConversionSettings","text":""},{"location":"apis/public_v2/docs/ResponseGetProjectDataIndexConversionSettings/#properties","title":"Properties","text":"Name Type Description Notes ocr OCROptions [optional] table_structure TableStructureOptions [optional] generate_page_images object [optional]"},{"location":"apis/public_v2/docs/ResponseGetProjectDataIndexConversionSettings/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.response_get_project_data_index_conversion_settings import ResponseGetProjectDataIndexConversionSettings\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ResponseGetProjectDataIndexConversionSettings from a JSON string\nresponse_get_project_data_index_conversion_settings_instance = ResponseGetProjectDataIndexConversionSettings.from_json(json)\n# print the JSON string representation of the object\nprint(ResponseGetProjectDataIndexConversionSettings.to_json())\n\n# convert the object into a dict\nresponse_get_project_data_index_conversion_settings_dict = response_get_project_data_index_conversion_settings_instance.to_dict()\n# create an instance of ResponseGetProjectDataIndexConversionSettings from a dict\nresponse_get_project_data_index_conversion_settings_form_dict = response_get_project_data_index_conversion_settings.from_dict(response_get_project_data_index_conversion_settings_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ResponseGetProjectIntegrationConfigGenai/","title":"ResponseGetProjectIntegrationConfigGenai","text":""},{"location":"apis/public_v2/docs/ResponseGetProjectIntegrationConfigGenai/#properties","title":"Properties","text":"Name Type Description Notes kind object [optional] config GenAIAWSBedrockConfig proj_params GenAIAWSBedrockProjParams [optional]"},{"location":"apis/public_v2/docs/ResponseGetProjectIntegrationConfigGenai/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.response_get_project_integration_config_genai import ResponseGetProjectIntegrationConfigGenai\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ResponseGetProjectIntegrationConfigGenai from a JSON string\nresponse_get_project_integration_config_genai_instance = ResponseGetProjectIntegrationConfigGenai.from_json(json)\n# print the JSON string representation of the object\nprint(ResponseGetProjectIntegrationConfigGenai.to_json())\n\n# convert the object into a dict\nresponse_get_project_integration_config_genai_dict = response_get_project_integration_config_genai_instance.to_dict()\n# create an instance of ResponseGetProjectIntegrationConfigGenai from a dict\nresponse_get_project_integration_config_genai_form_dict = response_get_project_integration_config_genai.from_dict(response_get_project_integration_config_genai_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ResponseGroupedDocuments/","title":"ResponseGroupedDocuments","text":""},{"location":"apis/public_v2/docs/ResponseGroupedDocuments/#properties","title":"Properties","text":"Name Type Description Notes grouped_documents List[GroupedProjectDocuments]"},{"location":"apis/public_v2/docs/ResponseGroupedDocuments/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.response_grouped_documents import ResponseGroupedDocuments\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ResponseGroupedDocuments from a JSON string\nresponse_grouped_documents_instance = ResponseGroupedDocuments.from_json(json)\n# print the JSON string representation of the object\nprint(ResponseGroupedDocuments.to_json())\n\n# convert the object into a dict\nresponse_grouped_documents_dict = response_grouped_documents_instance.to_dict()\n# create an instance of ResponseGroupedDocuments from a dict\nresponse_grouped_documents_form_dict = response_grouped_documents.from_dict(response_grouped_documents_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ResponseUpdateProjectDataIndexConversionSettings/","title":"ResponseUpdateProjectDataIndexConversionSettings","text":""},{"location":"apis/public_v2/docs/ResponseUpdateProjectDataIndexConversionSettings/#properties","title":"Properties","text":"Name Type Description Notes ocr OCROptions [optional] table_structure TableStructureOptions [optional] generate_page_images object [optional]"},{"location":"apis/public_v2/docs/ResponseUpdateProjectDataIndexConversionSettings/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.response_update_project_data_index_conversion_settings import ResponseUpdateProjectDataIndexConversionSettings\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ResponseUpdateProjectDataIndexConversionSettings from a JSON string\nresponse_update_project_data_index_conversion_settings_instance = ResponseUpdateProjectDataIndexConversionSettings.from_json(json)\n# print the JSON string representation of the object\nprint(ResponseUpdateProjectDataIndexConversionSettings.to_json())\n\n# convert the object into a dict\nresponse_update_project_data_index_conversion_settings_dict = response_update_project_data_index_conversion_settings_instance.to_dict()\n# create an instance of ResponseUpdateProjectDataIndexConversionSettings from a dict\nresponse_update_project_data_index_conversion_settings_form_dict = response_update_project_data_index_conversion_settings.from_dict(response_update_project_data_index_conversion_settings_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ResponseUploadJobs/","title":"ResponseUploadJobs","text":""},{"location":"apis/public_v2/docs/ResponseUploadJobs/#properties","title":"Properties","text":"Name Type Description Notes upload_jobs List[UploadJob]"},{"location":"apis/public_v2/docs/ResponseUploadJobs/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.response_upload_jobs import ResponseUploadJobs\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ResponseUploadJobs from a JSON string\nresponse_upload_jobs_instance = ResponseUploadJobs.from_json(json)\n# print the JSON string representation of the object\nprint(ResponseUploadJobs.to_json())\n\n# convert the object into a dict\nresponse_upload_jobs_dict = response_upload_jobs_instance.to_dict()\n# create an instance of ResponseUploadJobs from a dict\nresponse_upload_jobs_form_dict = response_upload_jobs.from_dict(response_upload_jobs_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/S3Coordinates/","title":"S3Coordinates","text":""},{"location":"apis/public_v2/docs/S3Coordinates/#properties","title":"Properties","text":"Name Type Description Notes host str port int ssl bool verify_ssl bool access_key str secret_key str bucket str key_prefix KeyPrefix [optional] location str"},{"location":"apis/public_v2/docs/S3Coordinates/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.s3_coordinates import S3Coordinates\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of S3Coordinates from a JSON string\ns3_coordinates_instance = S3Coordinates.from_json(json)\n# print the JSON string representation of the object\nprint(S3Coordinates.to_json())\n\n# convert the object into a dict\ns3_coordinates_dict = s3_coordinates_instance.to_dict()\n# create an instance of S3Coordinates from a dict\ns3_coordinates_form_dict = s3_coordinates.from_dict(s3_coordinates_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/S3DocumentSource/","title":"S3DocumentSource","text":"<p>Specifies documents to import from an S3 bucket</p>"},{"location":"apis/public_v2/docs/S3DocumentSource/#properties","title":"Properties","text":"Name Type Description Notes coordinates S3Coordinates object_keys ObjectKeys [optional]"},{"location":"apis/public_v2/docs/S3DocumentSource/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.s3_document_source import S3DocumentSource\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of S3DocumentSource from a JSON string\ns3_document_source_instance = S3DocumentSource.from_json(json)\n# print the JSON string representation of the object\nprint(S3DocumentSource.to_json())\n\n# convert the object into a dict\ns3_document_source_dict = s3_document_source_instance.to_dict()\n# create an instance of S3DocumentSource from a dict\ns3_document_source_form_dict = s3_document_source.from_dict(s3_document_source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SchemaKey/","title":"SchemaKey","text":""},{"location":"apis/public_v2/docs/SchemaKey/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/SchemaKey/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.schema_key import SchemaKey\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of SchemaKey from a JSON string\nschema_key_instance = SchemaKey.from_json(json)\n# print the JSON string representation of the object\nprint(SchemaKey.to_json())\n\n# convert the object into a dict\nschema_key_dict = schema_key_instance.to_dict()\n# create an instance of SchemaKey from a dict\nschema_key_form_dict = schema_key.from_dict(schema_key_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ScratchIds/","title":"ScratchIds","text":""},{"location":"apis/public_v2/docs/ScratchIds/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/ScratchIds/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.scratch_ids import ScratchIds\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ScratchIds from a JSON string\nscratch_ids_instance = ScratchIds.from_json(json)\n# print the JSON string representation of the object\nprint(ScratchIds.to_json())\n\n# convert the object into a dict\nscratch_ids_dict = scratch_ids_instance.to_dict()\n# create an instance of ScratchIds from a dict\nscratch_ids_form_dict = scratch_ids.from_dict(scratch_ids_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SearchString/","title":"SearchString","text":""},{"location":"apis/public_v2/docs/SearchString/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/SearchString/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.search_string import SearchString\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of SearchString from a JSON string\nsearch_string_instance = SearchString.from_json(json)\n# print the JSON string representation of the object\nprint(SearchString.to_json())\n\n# convert the object into a dict\nsearch_string_dict = search_string_instance.to_dict()\n# create an instance of SearchString from a dict\nsearch_string_form_dict = search_string.from_dict(search_string_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SemanticApi/","title":"deepsearch.cps.apis.public_v2.SemanticApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description ingest POST /project/{proj_key}/semantic/ingest Ingest"},{"location":"apis/public_v2/docs/SemanticApi/#ingest","title":"ingest","text":"<p>CpsTask ingest(proj_key, semantic_ingest_request)</p> <p>Ingest</p> <p>Ingest documents and collections for RAG</p>"},{"location":"apis/public_v2/docs/SemanticApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.cps_task import CpsTask\nfrom deepsearch.cps.apis.public_v2.models.semantic_ingest_request import SemanticIngestRequest\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SemanticApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    semantic_ingest_request = deepsearch.cps.apis.public_v2.SemanticIngestRequest() # SemanticIngestRequest | \n\n    try:\n        # Ingest\n        api_response = api_instance.ingest(proj_key, semantic_ingest_request)\n        print(\"The response of SemanticApi-&gt;ingest:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SemanticApi-&gt;ingest: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SemanticApi/#parameters","title":"Parameters","text":"Name Type Description Notes proj_key str semantic_ingest_request SemanticIngestRequest"},{"location":"apis/public_v2/docs/SemanticApi/#return-type","title":"Return type","text":"<p>CpsTask</p>"},{"location":"apis/public_v2/docs/SemanticApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SemanticApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SemanticApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SemanticIngestReqParams/","title":"SemanticIngestReqParams","text":""},{"location":"apis/public_v2/docs/SemanticIngestReqParams/#properties","title":"Properties","text":"Name Type Description Notes skip_ingested_docs bool"},{"location":"apis/public_v2/docs/SemanticIngestReqParams/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.semantic_ingest_req_params import SemanticIngestReqParams\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of SemanticIngestReqParams from a JSON string\nsemantic_ingest_req_params_instance = SemanticIngestReqParams.from_json(json)\n# print the JSON string representation of the object\nprint(SemanticIngestReqParams.to_json())\n\n# convert the object into a dict\nsemantic_ingest_req_params_dict = semantic_ingest_req_params_instance.to_dict()\n# create an instance of SemanticIngestReqParams from a dict\nsemantic_ingest_req_params_form_dict = semantic_ingest_req_params.from_dict(semantic_ingest_req_params_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SemanticIngestRequest/","title":"SemanticIngestRequest","text":""},{"location":"apis/public_v2/docs/SemanticIngestRequest/#properties","title":"Properties","text":"Name Type Description Notes source Source4 parameters SemanticIngestReqParams"},{"location":"apis/public_v2/docs/SemanticIngestRequest/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.semantic_ingest_request import SemanticIngestRequest\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of SemanticIngestRequest from a JSON string\nsemantic_ingest_request_instance = SemanticIngestRequest.from_json(json)\n# print the JSON string representation of the object\nprint(SemanticIngestRequest.to_json())\n\n# convert the object into a dict\nsemantic_ingest_request_dict = semantic_ingest_request_instance.to_dict()\n# create an instance of SemanticIngestRequest from a dict\nsemantic_ingest_request_form_dict = semantic_ingest_request.from_dict(semantic_ingest_request_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SemanticIngestSourcePrivateDataCollection/","title":"SemanticIngestSourcePrivateDataCollection","text":""},{"location":"apis/public_v2/docs/SemanticIngestSourcePrivateDataCollection/#properties","title":"Properties","text":"Name Type Description Notes type str proj_key str index_key str"},{"location":"apis/public_v2/docs/SemanticIngestSourcePrivateDataCollection/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.semantic_ingest_source_private_data_collection import SemanticIngestSourcePrivateDataCollection\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of SemanticIngestSourcePrivateDataCollection from a JSON string\nsemantic_ingest_source_private_data_collection_instance = SemanticIngestSourcePrivateDataCollection.from_json(json)\n# print the JSON string representation of the object\nprint(SemanticIngestSourcePrivateDataCollection.to_json())\n\n# convert the object into a dict\nsemantic_ingest_source_private_data_collection_dict = semantic_ingest_source_private_data_collection_instance.to_dict()\n# create an instance of SemanticIngestSourcePrivateDataCollection from a dict\nsemantic_ingest_source_private_data_collection_form_dict = semantic_ingest_source_private_data_collection.from_dict(semantic_ingest_source_private_data_collection_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SemanticIngestSourcePrivateDataDocument/","title":"SemanticIngestSourcePrivateDataDocument","text":""},{"location":"apis/public_v2/docs/SemanticIngestSourcePrivateDataDocument/#properties","title":"Properties","text":"Name Type Description Notes type str proj_key str index_key str document_hash str"},{"location":"apis/public_v2/docs/SemanticIngestSourcePrivateDataDocument/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.semantic_ingest_source_private_data_document import SemanticIngestSourcePrivateDataDocument\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of SemanticIngestSourcePrivateDataDocument from a JSON string\nsemantic_ingest_source_private_data_document_instance = SemanticIngestSourcePrivateDataDocument.from_json(json)\n# print the JSON string representation of the object\nprint(SemanticIngestSourcePrivateDataDocument.to_json())\n\n# convert the object into a dict\nsemantic_ingest_source_private_data_document_dict = semantic_ingest_source_private_data_document_instance.to_dict()\n# create an instance of SemanticIngestSourcePrivateDataDocument from a dict\nsemantic_ingest_source_private_data_document_form_dict = semantic_ingest_source_private_data_document.from_dict(semantic_ingest_source_private_data_document_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SemanticIngestSourcePublicDataDocument/","title":"SemanticIngestSourcePublicDataDocument","text":""},{"location":"apis/public_v2/docs/SemanticIngestSourcePublicDataDocument/#properties","title":"Properties","text":"Name Type Description Notes type str elastic_id str index_key str document_hash str"},{"location":"apis/public_v2/docs/SemanticIngestSourcePublicDataDocument/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.semantic_ingest_source_public_data_document import SemanticIngestSourcePublicDataDocument\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of SemanticIngestSourcePublicDataDocument from a JSON string\nsemantic_ingest_source_public_data_document_instance = SemanticIngestSourcePublicDataDocument.from_json(json)\n# print the JSON string representation of the object\nprint(SemanticIngestSourcePublicDataDocument.to_json())\n\n# convert the object into a dict\nsemantic_ingest_source_public_data_document_dict = semantic_ingest_source_public_data_document_instance.to_dict()\n# create an instance of SemanticIngestSourcePublicDataDocument from a dict\nsemantic_ingest_source_public_data_document_form_dict = semantic_ingest_source_public_data_document.from_dict(semantic_ingest_source_public_data_document_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SemanticIngestSourceUrl/","title":"SemanticIngestSourceUrl","text":""},{"location":"apis/public_v2/docs/SemanticIngestSourceUrl/#properties","title":"Properties","text":"Name Type Description Notes type str url str"},{"location":"apis/public_v2/docs/SemanticIngestSourceUrl/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.semantic_ingest_source_url import SemanticIngestSourceUrl\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of SemanticIngestSourceUrl from a JSON string\nsemantic_ingest_source_url_instance = SemanticIngestSourceUrl.from_json(json)\n# print the JSON string representation of the object\nprint(SemanticIngestSourceUrl.to_json())\n\n# convert the object into a dict\nsemantic_ingest_source_url_dict = semantic_ingest_source_url_instance.to_dict()\n# create an instance of SemanticIngestSourceUrl from a dict\nsemantic_ingest_source_url_form_dict = semantic_ingest_source_url.from_dict(semantic_ingest_source_url_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Size/","title":"Size","text":"<p>Size in bytes of the raw document from the data source.</p>"},{"location":"apis/public_v2/docs/Size/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Size/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.size import Size\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Size from a JSON string\nsize_instance = Size.from_json(json)\n# print the JSON string representation of the object\nprint(Size.to_json())\n\n# convert the object into a dict\nsize_dict = size_instance.to_dict()\n# create an instance of Size from a dict\nsize_form_dict = size.from_dict(size_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Size1/","title":"Size1","text":""},{"location":"apis/public_v2/docs/Size1/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Size1/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.size1 import Size1\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Size1 from a JSON string\nsize1_instance = Size1.from_json(json)\n# print the JSON string representation of the object\nprint(Size1.to_json())\n\n# convert the object into a dict\nsize1_dict = size1_instance.to_dict()\n# create an instance of Size1 from a dict\nsize1_form_dict = size1.from_dict(size1_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Sort/","title":"Sort","text":""},{"location":"apis/public_v2/docs/Sort/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Sort/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.sort import Sort\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Sort from a JSON string\nsort_instance = Sort.from_json(json)\n# print the JSON string representation of the object\nprint(Sort.to_json())\n\n# convert the object into a dict\nsort_dict = sort_instance.to_dict()\n# create an instance of Sort from a dict\nsort_form_dict = sort.from_dict(sort_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Source/","title":"Source","text":""},{"location":"apis/public_v2/docs/Source/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Source/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.source import Source\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Source from a JSON string\nsource_instance = Source.from_json(json)\n# print the JSON string representation of the object\nprint(Source.to_json())\n\n# convert the object into a dict\nsource_dict = source_instance.to_dict()\n# create an instance of Source from a dict\nsource_form_dict = source.from_dict(source_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Source1/","title":"Source1","text":""},{"location":"apis/public_v2/docs/Source1/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Source1/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.source1 import Source1\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Source1 from a JSON string\nsource1_instance = Source1.from_json(json)\n# print the JSON string representation of the object\nprint(Source1.to_json())\n\n# convert the object into a dict\nsource1_dict = source1_instance.to_dict()\n# create an instance of Source1 from a dict\nsource1_form_dict = source1.from_dict(source1_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Source2/","title":"Source2","text":""},{"location":"apis/public_v2/docs/Source2/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Source2/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.source2 import Source2\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Source2 from a JSON string\nsource2_instance = Source2.from_json(json)\n# print the JSON string representation of the object\nprint(Source2.to_json())\n\n# convert the object into a dict\nsource2_dict = source2_instance.to_dict()\n# create an instance of Source2 from a dict\nsource2_form_dict = source2.from_dict(source2_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Source3/","title":"Source3","text":""},{"location":"apis/public_v2/docs/Source3/#properties","title":"Properties","text":"Name Type Description Notes index_key object elastic_id object proj_key object"},{"location":"apis/public_v2/docs/Source3/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.source3 import Source3\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Source3 from a JSON string\nsource3_instance = Source3.from_json(json)\n# print the JSON string representation of the object\nprint(Source3.to_json())\n\n# convert the object into a dict\nsource3_dict = source3_instance.to_dict()\n# create an instance of Source3 from a dict\nsource3_form_dict = source3.from_dict(source3_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Source4/","title":"Source4","text":""},{"location":"apis/public_v2/docs/Source4/#properties","title":"Properties","text":"Name Type Description Notes type object url object elastic_id object index_key object document_hash object proj_key object"},{"location":"apis/public_v2/docs/Source4/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.source4 import Source4\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Source4 from a JSON string\nsource4_instance = Source4.from_json(json)\n# print the JSON string representation of the object\nprint(Source4.to_json())\n\n# convert the object into a dict\nsource4_dict = source4_instance.to_dict()\n# create an instance of Source4 from a dict\nsource4_form_dict = source4.from_dict(source4_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/StartCount/","title":"StartCount","text":""},{"location":"apis/public_v2/docs/StartCount/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/StartCount/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.start_count import StartCount\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of StartCount from a JSON string\nstart_count_instance = StartCount.from_json(json)\n# print the JSON string representation of the object\nprint(StartCount.to_json())\n\n# convert the object into a dict\nstart_count_dict = start_count_instance.to_dict()\n# create an instance of StartCount from a dict\nstart_count_form_dict = start_count.from_dict(start_count_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/StartedAt/","title":"StartedAt","text":""},{"location":"apis/public_v2/docs/StartedAt/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/StartedAt/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.started_at import StartedAt\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of StartedAt from a JSON string\nstarted_at_instance = StartedAt.from_json(json)\n# print the JSON string representation of the object\nprint(StartedAt.to_json())\n\n# convert the object into a dict\nstarted_at_dict = started_at_instance.to_dict()\n# create an instance of StartedAt from a dict\nstarted_at_form_dict = started_at.from_dict(started_at_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Status/","title":"Status","text":""},{"location":"apis/public_v2/docs/Status/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Status/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.status import Status\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Status from a JSON string\nstatus_instance = Status.from_json(json)\n# print the JSON string representation of the object\nprint(Status.to_json())\n\n# convert the object into a dict\nstatus_dict = status_instance.to_dict()\n# create an instance of Status from a dict\nstatus_form_dict = status.from_dict(status_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/StatusFilter/","title":"StatusFilter","text":""},{"location":"apis/public_v2/docs/StatusFilter/#properties","title":"Properties","text":"Name Type Description Notes <p>[Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Storage/","title":"Storage","text":""},{"location":"apis/public_v2/docs/Storage/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Storage/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.storage import Storage\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Storage from a JSON string\nstorage_instance = Storage.from_json(json)\n# print the JSON string representation of the object\nprint(Storage.to_json())\n\n# convert the object into a dict\nstorage_dict = storage_instance.to_dict()\n# create an instance of Storage from a dict\nstorage_form_dict = storage.from_dict(storage_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/StorageSummaryTask/","title":"StorageSummaryTask","text":""},{"location":"apis/public_v2/docs/StorageSummaryTask/#properties","title":"Properties","text":"Name Type Description Notes dc_key DcKey [optional] kg_key KgKey [optional] kind str proj_key str task_id str"},{"location":"apis/public_v2/docs/StorageSummaryTask/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.storage_summary_task import StorageSummaryTask\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of StorageSummaryTask from a JSON string\nstorage_summary_task_instance = StorageSummaryTask.from_json(json)\n# print the JSON string representation of the object\nprint(StorageSummaryTask.to_json())\n\n# convert the object into a dict\nstorage_summary_task_dict = storage_summary_task_instance.to_dict()\n# create an instance of StorageSummaryTask from a dict\nstorage_summary_task_form_dict = storage_summary_task.from_dict(storage_summary_task_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Subjects/","title":"Subjects","text":""},{"location":"apis/public_v2/docs/Subjects/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Subjects/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.subjects import Subjects\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Subjects from a JSON string\nsubjects_instance = Subjects.from_json(json)\n# print the JSON string representation of the object\nprint(Subjects.to_json())\n\n# convert the object into a dict\nsubjects_dict = subjects_instance.to_dict()\n# create an instance of Subjects from a dict\nsubjects_form_dict = subjects.from_dict(subjects_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemApi/","title":"deepsearch.cps.apis.public_v2.SystemApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description get_system_information GET /system/info Get System Information get_system_modules_configuration GET /system/modules/configuration Get System Modules Configuration get_system_modules_tasks GET /system/modules/tasks Get System Modules Tasks list_packages GET /system/packages List Packages list_system_knowledge_graphs GET /system/kgs List System Knowledge Graphs system_get_all_dcs_admin GET /system/admin/get_all_dcs System Get All Dcs Admin system_get_all_kgs_admin GET /system/admin/get_all_kgs System Get All Kgs Admin"},{"location":"apis/public_v2/docs/SystemApi/#get_system_information","title":"get_system_information","text":"<p>SystemInfo get_system_information()</p> <p>Get System Information</p> <p>Get system info.</p>"},{"location":"apis/public_v2/docs/SystemApi/#example","title":"Example","text":"<pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.system_info import SystemInfo\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemApi(api_client)\n\n    try:\n        # Get System Information\n        api_response = api_instance.get_system_information()\n        print(\"The response of SystemApi-&gt;get_system_information:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemApi-&gt;get_system_information: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemApi/#parameters","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemApi/#return-type","title":"Return type","text":"<p>SystemInfo</p>"},{"location":"apis/public_v2/docs/SystemApi/#authorization","title":"Authorization","text":"<p>No authorization required</p>"},{"location":"apis/public_v2/docs/SystemApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemApi/#get_system_modules_configuration","title":"get_system_modules_configuration","text":"<p>ModulesConfig get_system_modules_configuration()</p> <p>Get System Modules Configuration</p> <p>Get modules configuration.</p>"},{"location":"apis/public_v2/docs/SystemApi/#example_1","title":"Example","text":"<pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.modules_config import ModulesConfig\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemApi(api_client)\n\n    try:\n        # Get System Modules Configuration\n        api_response = api_instance.get_system_modules_configuration()\n        print(\"The response of SystemApi-&gt;get_system_modules_configuration:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemApi-&gt;get_system_modules_configuration: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemApi/#parameters_1","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemApi/#return-type_1","title":"Return type","text":"<p>ModulesConfig</p>"},{"location":"apis/public_v2/docs/SystemApi/#authorization_1","title":"Authorization","text":"<p>No authorization required</p>"},{"location":"apis/public_v2/docs/SystemApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemApi/#get_system_modules_tasks","title":"get_system_modules_tasks","text":"<p>object get_system_modules_tasks()</p> <p>Get System Modules Tasks</p> <p>Get modules configuration.</p>"},{"location":"apis/public_v2/docs/SystemApi/#example_2","title":"Example","text":"<pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemApi(api_client)\n\n    try:\n        # Get System Modules Tasks\n        api_response = api_instance.get_system_modules_tasks()\n        print(\"The response of SystemApi-&gt;get_system_modules_tasks:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemApi-&gt;get_system_modules_tasks: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemApi/#parameters_2","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemApi/#return-type_2","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/SystemApi/#authorization_2","title":"Authorization","text":"<p>No authorization required</p>"},{"location":"apis/public_v2/docs/SystemApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemApi/#list_packages","title":"list_packages","text":"<p>List[CPSPackage] list_packages()</p> <p>List Packages</p> <p>Get packages available in this CPS installation for installing in a project.</p>"},{"location":"apis/public_v2/docs/SystemApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.cps_package import CPSPackage\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemApi(api_client)\n\n    try:\n        # List Packages\n        api_response = api_instance.list_packages()\n        print(\"The response of SystemApi-&gt;list_packages:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemApi-&gt;list_packages: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemApi/#parameters_3","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemApi/#return-type_3","title":"Return type","text":"<p>List[CPSPackage]</p>"},{"location":"apis/public_v2/docs/SystemApi/#authorization_3","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemApi/#list_system_knowledge_graphs","title":"list_system_knowledge_graphs","text":"<p>List[object] list_system_knowledge_graphs(proj_key=proj_key, term=term)</p> <p>List System Knowledge Graphs</p> <p>List all Knowledge Graphs in the system.</p>"},{"location":"apis/public_v2/docs/SystemApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemApi(api_client)\n    proj_key = deepsearch.cps.apis.public_v2.ProjKey() # ProjKey |  (optional)\n    term = deepsearch.cps.apis.public_v2.Term() # Term |  (optional)\n\n    try:\n        # List System Knowledge Graphs\n        api_response = api_instance.list_system_knowledge_graphs(proj_key=proj_key, term=term)\n        print(\"The response of SystemApi-&gt;list_system_knowledge_graphs:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemApi-&gt;list_system_knowledge_graphs: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes proj_key ProjKey [optional] term Term [optional]"},{"location":"apis/public_v2/docs/SystemApi/#return-type_4","title":"Return type","text":"<p>List[object]</p>"},{"location":"apis/public_v2/docs/SystemApi/#authorization_4","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemApi/#system_get_all_dcs_admin","title":"system_get_all_dcs_admin","text":"<p>List[str] system_get_all_dcs_admin()</p> <p>System Get All Dcs Admin</p> <p>Get all data catalogs (only dc_key) for admin use.</p>"},{"location":"apis/public_v2/docs/SystemApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemApi(api_client)\n\n    try:\n        # System Get All Dcs Admin\n        api_response = api_instance.system_get_all_dcs_admin()\n        print(\"The response of SystemApi-&gt;system_get_all_dcs_admin:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemApi-&gt;system_get_all_dcs_admin: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemApi/#parameters_5","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemApi/#return-type_5","title":"Return type","text":"<p>List[str]</p>"},{"location":"apis/public_v2/docs/SystemApi/#authorization_5","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemApi/#system_get_all_kgs_admin","title":"system_get_all_kgs_admin","text":"<p>List[object] system_get_all_kgs_admin()</p> <p>System Get All Kgs Admin</p> <p>Get all kgs (only bag_key) for admin use.</p>"},{"location":"apis/public_v2/docs/SystemApi/#example_6","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemApi(api_client)\n\n    try:\n        # System Get All Kgs Admin\n        api_response = api_instance.system_get_all_kgs_admin()\n        print(\"The response of SystemApi-&gt;system_get_all_kgs_admin:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemApi-&gt;system_get_all_kgs_admin: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemApi/#parameters_6","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemApi/#return-type_6","title":"Return type","text":"<p>List[object]</p>"},{"location":"apis/public_v2/docs/SystemApi/#authorization_6","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemApi/#http-request-headers_6","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemApi/#http-response-details_6","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/","title":"deepsearch.cps.apis.public_v2.SystemFlavoursApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description delete_flavour DELETE /system/admin/delete_flavour/{flavour_name} Delete Flavour get_flavour GET /system/admin/get_flavour/{flavour_name} Get Flavour list_all_flavours GET /system/admin/list_all_flavours List All Flavours list_flavours_by_project GET /system/admin/get_project_flavours/{proj_key} List Flavours By Project list_projects_flavours GET /system/admin/list_projects_flavours List Projects Flavours save_flavour PUT /system/admin/save_flavour Save Flavour save_project_flavours PUT /system/admin/save_project_flavours Save Project Flavours"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#delete_flavour","title":"delete_flavour","text":"<p>object delete_flavour(flavour_name)</p> <p>Delete Flavour</p> <p>Delete flavour from db.</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemFlavoursApi(api_client)\n    flavour_name = 'flavour_name_example' # str | \n\n    try:\n        # Delete Flavour\n        api_response = api_instance.delete_flavour(flavour_name)\n        print(\"The response of SystemFlavoursApi-&gt;delete_flavour:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemFlavoursApi-&gt;delete_flavour: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#parameters","title":"Parameters","text":"Name Type Description Notes flavour_name str"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#return-type","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#get_flavour","title":"get_flavour","text":"<p>BagFlavourFullData get_flavour(flavour_name)</p> <p>Get Flavour</p> <p>Get flavour from db.</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.bag_flavour_full_data import BagFlavourFullData\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemFlavoursApi(api_client)\n    flavour_name = 'flavour_name_example' # str | \n\n    try:\n        # Get Flavour\n        api_response = api_instance.get_flavour(flavour_name)\n        print(\"The response of SystemFlavoursApi-&gt;get_flavour:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemFlavoursApi-&gt;get_flavour: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes flavour_name str"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#return-type_1","title":"Return type","text":"<p>BagFlavourFullData</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#authorization_1","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#list_all_flavours","title":"list_all_flavours","text":"<p>List[BagFlavourFullData] list_all_flavours()</p> <p>List All Flavours</p> <p>Get all KG flavours storage on db.</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.bag_flavour_full_data import BagFlavourFullData\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemFlavoursApi(api_client)\n\n    try:\n        # List All Flavours\n        api_response = api_instance.list_all_flavours()\n        print(\"The response of SystemFlavoursApi-&gt;list_all_flavours:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemFlavoursApi-&gt;list_all_flavours: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#parameters_2","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#return-type_2","title":"Return type","text":"<p>List[BagFlavourFullData]</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#authorization_2","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#list_flavours_by_project","title":"list_flavours_by_project","text":"<p>ListProjectFlavours list_flavours_by_project(proj_key)</p> <p>List Flavours By Project</p> <p>Get project assignment flavours.</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.list_project_flavours import ListProjectFlavours\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemFlavoursApi(api_client)\n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # List Flavours By Project\n        api_response = api_instance.list_flavours_by_project(proj_key)\n        print(\"The response of SystemFlavoursApi-&gt;list_flavours_by_project:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemFlavoursApi-&gt;list_flavours_by_project: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes proj_key str"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#return-type_3","title":"Return type","text":"<p>ListProjectFlavours</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#authorization_3","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#list_projects_flavours","title":"list_projects_flavours","text":"<p>List[ProjectsFlavours] list_projects_flavours()</p> <p>List Projects Flavours</p> <p>Get all projects and their flavours.</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.projects_flavours import ProjectsFlavours\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemFlavoursApi(api_client)\n\n    try:\n        # List Projects Flavours\n        api_response = api_instance.list_projects_flavours()\n        print(\"The response of SystemFlavoursApi-&gt;list_projects_flavours:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemFlavoursApi-&gt;list_projects_flavours: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#parameters_4","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#return-type_4","title":"Return type","text":"<p>List[ProjectsFlavours]</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#authorization_4","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#save_flavour","title":"save_flavour","text":"<p>object save_flavour(new_flavour, bag_flavour_full_data)</p> <p>Save Flavour</p> <p>Save flavour on db.</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.bag_flavour_full_data import BagFlavourFullData\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemFlavoursApi(api_client)\n    new_flavour = True # bool | \n    bag_flavour_full_data = deepsearch.cps.apis.public_v2.BagFlavourFullData() # BagFlavourFullData | \n\n    try:\n        # Save Flavour\n        api_response = api_instance.save_flavour(new_flavour, bag_flavour_full_data)\n        print(\"The response of SystemFlavoursApi-&gt;save_flavour:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemFlavoursApi-&gt;save_flavour: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes new_flavour bool bag_flavour_full_data BagFlavourFullData"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#authorization_5","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#save_project_flavours","title":"save_project_flavours","text":"<p>object save_project_flavours(projects_flavours)</p> <p>Save Project Flavours</p> <p>Save project flavours assignment on db.</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#example_6","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.projects_flavours import ProjectsFlavours\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemFlavoursApi(api_client)\n    projects_flavours = deepsearch.cps.apis.public_v2.ProjectsFlavours() # ProjectsFlavours | \n\n    try:\n        # Save Project Flavours\n        api_response = api_instance.save_project_flavours(projects_flavours)\n        print(\"The response of SystemFlavoursApi-&gt;save_project_flavours:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemFlavoursApi-&gt;save_project_flavours: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#parameters_6","title":"Parameters","text":"Name Type Description Notes projects_flavours ProjectsFlavours"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#return-type_6","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#authorization_6","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-request-headers_6","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemFlavoursApi/#http-response-details_6","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemInfo/","title":"SystemInfo","text":""},{"location":"apis/public_v2/docs/SystemInfo/#properties","title":"Properties","text":"Name Type Description Notes notifications List[object] default_project object deployment Deployment toolkit object allow_non_admins_to_make_resources_public bool api object genai_defaults Dict[str, GenAIParams] conversion_settings_defaults ProjectDataIndexConversionSettingsOutput [optional]"},{"location":"apis/public_v2/docs/SystemInfo/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.system_info import SystemInfo\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of SystemInfo from a JSON string\nsystem_info_instance = SystemInfo.from_json(json)\n# print the JSON string representation of the object\nprint(SystemInfo.to_json())\n\n# convert the object into a dict\nsystem_info_dict = system_info_instance.to_dict()\n# create an instance of SystemInfo from a dict\nsystem_info_form_dict = system_info.from_dict(system_info_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/","title":"deepsearch.cps.apis.public_v2.SystemQuotasApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description get_flavours_default_quotas GET /system/admin/get_flavours_default_quota Get Flavours Default Quotas get_project_flavour_total_kgs GET /system/admin/get_project_flavour_total_kgs/{proj_key}/{flavour_name} Get Project Flavour Total Kgs get_project_flavours_quota GET /system/admin/get_project_flavours_quota/{proj_key} Get Project Flavours Quota get_projects_flavours_quota GET /system/admin/get_projects_flavours_quota Get Projects Flavours Quota save_flavours_default_quotas PUT /system/admin/save_flavours_default_quota Save Flavours Default Quotas save_project_flavours_quota PUT /system/admin/save_project_flavours_quota Save Project Flavours Quota"},{"location":"apis/public_v2/docs/SystemQuotasApi/#get_flavours_default_quotas","title":"get_flavours_default_quotas","text":"<p>List[FlavoursDefaultQuota] get_flavours_default_quotas()</p> <p>Get Flavours Default Quotas</p> <p>Get flavours default values.</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.flavours_default_quota import FlavoursDefaultQuota\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemQuotasApi(api_client)\n\n    try:\n        # Get Flavours Default Quotas\n        api_response = api_instance.get_flavours_default_quotas()\n        print(\"The response of SystemQuotasApi-&gt;get_flavours_default_quotas:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemQuotasApi-&gt;get_flavours_default_quotas: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#parameters","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#return-type","title":"Return type","text":"<p>List[FlavoursDefaultQuota]</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#get_project_flavour_total_kgs","title":"get_project_flavour_total_kgs","text":"<p>ProjectFlavourTotalKgs get_project_flavour_total_kgs(flavour_name, proj_key)</p> <p>Get Project Flavour Total Kgs</p> <p>Gets kg total number by proj_key and flavour_key.</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_flavour_total_kgs import ProjectFlavourTotalKgs\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemQuotasApi(api_client)\n    flavour_name = 'flavour_name_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Flavour Total Kgs\n        api_response = api_instance.get_project_flavour_total_kgs(flavour_name, proj_key)\n        print(\"The response of SystemQuotasApi-&gt;get_project_flavour_total_kgs:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemQuotasApi-&gt;get_project_flavour_total_kgs: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes flavour_name str proj_key str"},{"location":"apis/public_v2/docs/SystemQuotasApi/#return-type_1","title":"Return type","text":"<p>ProjectFlavourTotalKgs</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#authorization_1","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#get_project_flavours_quota","title":"get_project_flavours_quota","text":"<p>List[FlavoursQuota] get_project_flavours_quota(proj_key)</p> <p>Get Project Flavours Quota</p> <p>Get project flavours quota.</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.flavours_quota import FlavoursQuota\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemQuotasApi(api_client)\n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Flavours Quota\n        api_response = api_instance.get_project_flavours_quota(proj_key)\n        print(\"The response of SystemQuotasApi-&gt;get_project_flavours_quota:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemQuotasApi-&gt;get_project_flavours_quota: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes proj_key str"},{"location":"apis/public_v2/docs/SystemQuotasApi/#return-type_2","title":"Return type","text":"<p>List[FlavoursQuota]</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#authorization_2","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#get_projects_flavours_quota","title":"get_projects_flavours_quota","text":"<p>List[ProjectFlavoursQuota] get_projects_flavours_quota()</p> <p>Get Projects Flavours Quota</p> <p>Get projects flavours quotas.</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_flavours_quota import ProjectFlavoursQuota\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemQuotasApi(api_client)\n\n    try:\n        # Get Projects Flavours Quota\n        api_response = api_instance.get_projects_flavours_quota()\n        print(\"The response of SystemQuotasApi-&gt;get_projects_flavours_quota:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemQuotasApi-&gt;get_projects_flavours_quota: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#parameters_3","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#return-type_3","title":"Return type","text":"<p>List[ProjectFlavoursQuota]</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#authorization_3","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#save_flavours_default_quotas","title":"save_flavours_default_quotas","text":"<p>List[FlavoursDefaultQuota] save_flavours_default_quotas(flavours_default_quota)</p> <p>Save Flavours Default Quotas</p> <p>Save flavours default quota.</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#example_4","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.flavours_default_quota import FlavoursDefaultQuota\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemQuotasApi(api_client)\n    flavours_default_quota = [deepsearch.cps.apis.public_v2.FlavoursDefaultQuota()] # List[FlavoursDefaultQuota] | \n\n    try:\n        # Save Flavours Default Quotas\n        api_response = api_instance.save_flavours_default_quotas(flavours_default_quota)\n        print(\"The response of SystemQuotasApi-&gt;save_flavours_default_quotas:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemQuotasApi-&gt;save_flavours_default_quotas: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#parameters_4","title":"Parameters","text":"Name Type Description Notes flavours_default_quota List[FlavoursDefaultQuota]"},{"location":"apis/public_v2/docs/SystemQuotasApi/#return-type_4","title":"Return type","text":"<p>List[FlavoursDefaultQuota]</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#authorization_4","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-request-headers_4","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-response-details_4","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#save_project_flavours_quota","title":"save_project_flavours_quota","text":"<p>object save_project_flavours_quota(project_flavours_quota)</p> <p>Save Project Flavours Quota</p> <p>Save project flavours quota.</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#example_5","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_flavours_quota import ProjectFlavoursQuota\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemQuotasApi(api_client)\n    project_flavours_quota = deepsearch.cps.apis.public_v2.ProjectFlavoursQuota() # ProjectFlavoursQuota | \n\n    try:\n        # Save Project Flavours Quota\n        api_response = api_instance.save_project_flavours_quota(project_flavours_quota)\n        print(\"The response of SystemQuotasApi-&gt;save_project_flavours_quota:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemQuotasApi-&gt;save_project_flavours_quota: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#parameters_5","title":"Parameters","text":"Name Type Description Notes project_flavours_quota ProjectFlavoursQuota"},{"location":"apis/public_v2/docs/SystemQuotasApi/#return-type_5","title":"Return type","text":"<p>object</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#authorization_5","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-request-headers_5","title":"HTTP request headers","text":"<ul> <li>Content-Type: application/json</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemQuotasApi/#http-response-details_5","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/","title":"deepsearch.cps.apis.public_v2.SystemSummaryApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description system_get_cps_summary GET /system/admin/summary System Get Cps Summary system_get_dc_storage_summary_async GET /system/admin/dc_storage_summary/{dc_key} System Get Dc Storage Summary Async system_get_kg_storage_summary_async GET /system/admin/kg_storage_summary/{kg_key} System Get Kg Storage Summary Async"},{"location":"apis/public_v2/docs/SystemSummaryApi/#system_get_cps_summary","title":"system_get_cps_summary","text":"<p>List[CPSSummary] system_get_cps_summary()</p> <p>System Get Cps Summary</p> <p>Get cps summary data.</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.cps_summary import CPSSummary\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemSummaryApi(api_client)\n\n    try:\n        # System Get Cps Summary\n        api_response = api_instance.system_get_cps_summary()\n        print(\"The response of SystemSummaryApi-&gt;system_get_cps_summary:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemSummaryApi-&gt;system_get_cps_summary: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#parameters","title":"Parameters","text":"<p>This endpoint does not need any parameter.</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#return-type","title":"Return type","text":"<p>List[CPSSummary]</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#system_get_dc_storage_summary_async","title":"system_get_dc_storage_summary_async","text":"<p>StorageSummaryTask system_get_dc_storage_summary_async(dc_key)</p> <p>System Get Dc Storage Summary Async</p> <p>Get data catalog storage summary.</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.storage_summary_task import StorageSummaryTask\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemSummaryApi(api_client)\n    dc_key = 'dc_key_example' # str | \n\n    try:\n        # System Get Dc Storage Summary Async\n        api_response = api_instance.system_get_dc_storage_summary_async(dc_key)\n        print(\"The response of SystemSummaryApi-&gt;system_get_dc_storage_summary_async:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemSummaryApi-&gt;system_get_dc_storage_summary_async: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes dc_key str"},{"location":"apis/public_v2/docs/SystemSummaryApi/#return-type_1","title":"Return type","text":"<p>StorageSummaryTask</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#authorization_1","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#system_get_kg_storage_summary_async","title":"system_get_kg_storage_summary_async","text":"<p>StorageSummaryTask system_get_kg_storage_summary_async(kg_key)</p> <p>System Get Kg Storage Summary Async</p> <p>Get knowledge graph storage summary.</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.storage_summary_task import StorageSummaryTask\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.SystemSummaryApi(api_client)\n    kg_key = 'kg_key_example' # str | \n\n    try:\n        # System Get Kg Storage Summary Async\n        api_response = api_instance.system_get_kg_storage_summary_async(kg_key)\n        print(\"The response of SystemSummaryApi-&gt;system_get_kg_storage_summary_async:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling SystemSummaryApi-&gt;system_get_kg_storage_summary_async: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes kg_key str"},{"location":"apis/public_v2/docs/SystemSummaryApi/#return-type_2","title":"Return type","text":"<p>StorageSummaryTask</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#authorization_2","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/SystemSummaryApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TableFormerMode/","title":"TableFormerMode","text":""},{"location":"apis/public_v2/docs/TableFormerMode/#properties","title":"Properties","text":"Name Type Description Notes <p>[Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TableStructureOptions/","title":"TableStructureOptions","text":""},{"location":"apis/public_v2/docs/TableStructureOptions/#properties","title":"Properties","text":"Name Type Description Notes do_table_structure bool optional table_structure_mode TableFormerMode [optional]"},{"location":"apis/public_v2/docs/TableStructureOptions/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.table_structure_options import TableStructureOptions\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TableStructureOptions from a JSON string\ntable_structure_options_instance = TableStructureOptions.from_json(json)\n# print the JSON string representation of the object\nprint(TableStructureOptions.to_json())\n\n# convert the object into a dict\ntable_structure_options_dict = table_structure_options_instance.to_dict()\n# create an instance of TableStructureOptions from a dict\ntable_structure_options_form_dict = table_structure_options.from_dict(table_structure_options_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TargetConversionParameters/","title":"TargetConversionParameters","text":"<p>Specify target settings (add_raw_pages, add_annotations).  Fields left null are set to platform defaults.</p>"},{"location":"apis/public_v2/docs/TargetConversionParameters/#properties","title":"Properties","text":"Name Type Description Notes add_raw_pages AddRawPages [optional] add_annotations AddAnnotations [optional]"},{"location":"apis/public_v2/docs/TargetConversionParameters/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.target_conversion_parameters import TargetConversionParameters\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TargetConversionParameters from a JSON string\ntarget_conversion_parameters_instance = TargetConversionParameters.from_json(json)\n# print the JSON string representation of the object\nprint(TargetConversionParameters.to_json())\n\n# convert the object into a dict\ntarget_conversion_parameters_dict = target_conversion_parameters_instance.to_dict()\n# create an instance of TargetConversionParameters from a dict\ntarget_conversion_parameters_form_dict = target_conversion_parameters.from_dict(target_conversion_parameters_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Task/","title":"Task","text":"<p>An identifier of this task. It may be used to identify this task from other tasks of the same agent and type.</p>"},{"location":"apis/public_v2/docs/Task/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Task/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.task import Task\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Task from a JSON string\ntask_instance = Task.from_json(json)\n# print the JSON string representation of the object\nprint(Task.to_json())\n\n# convert the object into a dict\ntask_dict = task_instance.to_dict()\n# create an instance of Task from a dict\ntask_form_dict = task.from_dict(task_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TaskContext/","title":"TaskContext","text":""},{"location":"apis/public_v2/docs/TaskContext/#properties","title":"Properties","text":"Name Type Description Notes proj_key str user_key str task_type str task_id str task_status str execution_mode str progress float meta object created_at datetime started_at StartedAt [optional] completed_at CompletedAt [optional] start_count StartCount [optional] error_reason ErrorReason [optional] related_tasks RelatedTasks [optional]"},{"location":"apis/public_v2/docs/TaskContext/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.task_context import TaskContext\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TaskContext from a JSON string\ntask_context_instance = TaskContext.from_json(json)\n# print the JSON string representation of the object\nprint(TaskContext.to_json())\n\n# convert the object into a dict\ntask_context_dict = task_context_instance.to_dict()\n# create an instance of TaskContext from a dict\ntask_context_form_dict = task_context.from_dict(task_context_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TaskResult/","title":"TaskResult","text":""},{"location":"apis/public_v2/docs/TaskResult/#properties","title":"Properties","text":"Name Type Description Notes result object [optional] task_id str task_status str"},{"location":"apis/public_v2/docs/TaskResult/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.task_result import TaskResult\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TaskResult from a JSON string\ntask_result_instance = TaskResult.from_json(json)\n# print the JSON string representation of the object\nprint(TaskResult.to_json())\n\n# convert the object into a dict\ntask_result_dict = task_result_instance.to_dict()\n# create an instance of TaskResult from a dict\ntask_result_form_dict = task_result.from_dict(task_result_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TaskType/","title":"TaskType","text":""},{"location":"apis/public_v2/docs/TaskType/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/TaskType/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.task_type import TaskType\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TaskType from a JSON string\ntask_type_instance = TaskType.from_json(json)\n# print the JSON string representation of the object\nprint(TaskType.to_json())\n\n# convert the object into a dict\ntask_type_dict = task_type_instance.to_dict()\n# create an instance of TaskType from a dict\ntask_type_form_dict = task_type.from_dict(task_type_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TasksApi/","title":"deepsearch.cps.apis.public_v2.TasksApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description abort_project_task POST /project/{proj_key}/tasks/{task_id}/actions/abort Abort Project Task get_project_celery_task GET /project/{proj_key}/celery_tasks/{task_id} Get Project Celery Task get_project_task GET /project/{proj_key}/tasks/{task_id} Get Project Task list_project_tasks GET /project/{proj_key}/tasks List Project Tasks"},{"location":"apis/public_v2/docs/TasksApi/#abort_project_task","title":"abort_project_task","text":"<p>abort_project_task(task_id, proj_key)</p> <p>Abort Project Task</p> <p>Abort a task.</p>"},{"location":"apis/public_v2/docs/TasksApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.TasksApi(api_client)\n    task_id = 'task_id_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Abort Project Task\n        api_instance.abort_project_task(task_id, proj_key)\n    except Exception as e:\n        print(\"Exception when calling TasksApi-&gt;abort_project_task: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/TasksApi/#parameters","title":"Parameters","text":"Name Type Description Notes task_id str proj_key str"},{"location":"apis/public_v2/docs/TasksApi/#return-type","title":"Return type","text":"<p>void (empty response body)</p>"},{"location":"apis/public_v2/docs/TasksApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/TasksApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/TasksApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 204 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TasksApi/#get_project_celery_task","title":"get_project_celery_task","text":"<p>TaskResult get_project_celery_task(task_id, proj_key, wait=wait)</p> <p>Get Project Celery Task</p> <p>Get a celery task for a project.</p>"},{"location":"apis/public_v2/docs/TasksApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.task_result import TaskResult\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.TasksApi(api_client)\n    task_id = 'task_id_example' # str | \n    proj_key = 'proj_key_example' # str | \n    wait = deepsearch.cps.apis.public_v2.Wait1() # Wait1 | Optionally block this method call for a few seconds to wait for the result instead of polling through multiple calls. (optional)\n\n    try:\n        # Get Project Celery Task\n        api_response = api_instance.get_project_celery_task(task_id, proj_key, wait=wait)\n        print(\"The response of TasksApi-&gt;get_project_celery_task:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TasksApi-&gt;get_project_celery_task: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/TasksApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes task_id str proj_key str wait Wait1 Optionally block this method call for a few seconds to wait for the result instead of polling through multiple calls. [optional]"},{"location":"apis/public_v2/docs/TasksApi/#return-type_1","title":"Return type","text":"<p>TaskResult</p>"},{"location":"apis/public_v2/docs/TasksApi/#authorization_1","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/TasksApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/TasksApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TasksApi/#get_project_task","title":"get_project_task","text":"<p>TaskContext get_project_task(task_id, proj_key)</p> <p>Get Project Task</p> <p>Get a task for a project.</p>"},{"location":"apis/public_v2/docs/TasksApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.task_context import TaskContext\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.TasksApi(api_client)\n    task_id = 'task_id_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Get Project Task\n        api_response = api_instance.get_project_task(task_id, proj_key)\n        print(\"The response of TasksApi-&gt;get_project_task:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TasksApi-&gt;get_project_task: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/TasksApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes task_id str proj_key str"},{"location":"apis/public_v2/docs/TasksApi/#return-type_2","title":"Return type","text":"<p>TaskContext</p>"},{"location":"apis/public_v2/docs/TasksApi/#authorization_2","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/TasksApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/TasksApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TasksApi/#list_project_tasks","title":"list_project_tasks","text":"<p>List[TaskContext] list_project_tasks(proj_key, task_type=task_type, skip=skip, limit=limit, sort_by=sort_by, sort_order=sort_order)</p> <p>List Project Tasks</p> <p>List tasks for a project.</p>"},{"location":"apis/public_v2/docs/TasksApi/#example_3","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.task_context import TaskContext\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.TasksApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    task_type = deepsearch.cps.apis.public_v2.TaskType() # TaskType |  (optional)\n    skip = 0 # int |  (optional) (default to 0)\n    limit = 50 # int |  (optional) (default to 50)\n    sort_by = '_id' # str |  (optional) (default to '_id')\n    sort_order = 'desc' # str |  (optional) (default to 'desc')\n\n    try:\n        # List Project Tasks\n        api_response = api_instance.list_project_tasks(proj_key, task_type=task_type, skip=skip, limit=limit, sort_by=sort_by, sort_order=sort_order)\n        print(\"The response of TasksApi-&gt;list_project_tasks:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling TasksApi-&gt;list_project_tasks: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/TasksApi/#parameters_3","title":"Parameters","text":"Name Type Description Notes proj_key str task_type TaskType [optional] skip int optional limit int optional sort_by str optional sort_order str optional"},{"location":"apis/public_v2/docs/TasksApi/#return-type_3","title":"Return type","text":"<p>List[TaskContext]</p>"},{"location":"apis/public_v2/docs/TasksApi/#authorization_3","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/TasksApi/#http-request-headers_3","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/TasksApi/#http-response-details_3","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TemporaryUploadFileResult/","title":"TemporaryUploadFileResult","text":""},{"location":"apis/public_v2/docs/TemporaryUploadFileResult/#properties","title":"Properties","text":"Name Type Description Notes id str upload TemporaryUrlFields download TemporaryUrl metadata TemporaryUrl upload_private TemporaryUrlFields download_private TemporaryUrl metadata_private TemporaryUrl"},{"location":"apis/public_v2/docs/TemporaryUploadFileResult/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.temporary_upload_file_result import TemporaryUploadFileResult\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TemporaryUploadFileResult from a JSON string\ntemporary_upload_file_result_instance = TemporaryUploadFileResult.from_json(json)\n# print the JSON string representation of the object\nprint(TemporaryUploadFileResult.to_json())\n\n# convert the object into a dict\ntemporary_upload_file_result_dict = temporary_upload_file_result_instance.to_dict()\n# create an instance of TemporaryUploadFileResult from a dict\ntemporary_upload_file_result_form_dict = temporary_upload_file_result.from_dict(temporary_upload_file_result_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TemporaryUrl/","title":"TemporaryUrl","text":""},{"location":"apis/public_v2/docs/TemporaryUrl/#properties","title":"Properties","text":"Name Type Description Notes url str"},{"location":"apis/public_v2/docs/TemporaryUrl/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.temporary_url import TemporaryUrl\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TemporaryUrl from a JSON string\ntemporary_url_instance = TemporaryUrl.from_json(json)\n# print the JSON string representation of the object\nprint(TemporaryUrl.to_json())\n\n# convert the object into a dict\ntemporary_url_dict = temporary_url_instance.to_dict()\n# create an instance of TemporaryUrl from a dict\ntemporary_url_form_dict = temporary_url.from_dict(temporary_url_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TemporaryUrlFields/","title":"TemporaryUrlFields","text":""},{"location":"apis/public_v2/docs/TemporaryUrlFields/#properties","title":"Properties","text":"Name Type Description Notes url str fields object"},{"location":"apis/public_v2/docs/TemporaryUrlFields/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.temporary_url_fields import TemporaryUrlFields\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TemporaryUrlFields from a JSON string\ntemporary_url_fields_instance = TemporaryUrlFields.from_json(json)\n# print the JSON string representation of the object\nprint(TemporaryUrlFields.to_json())\n\n# convert the object into a dict\ntemporary_url_fields_dict = temporary_url_fields_instance.to_dict()\n# create an instance of TemporaryUrlFields from a dict\ntemporary_url_fields_form_dict = temporary_url_fields.from_dict(temporary_url_fields_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Term/","title":"Term","text":""},{"location":"apis/public_v2/docs/Term/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Term/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.term import Term\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Term from a JSON string\nterm_instance = Term.from_json(json)\n# print the JSON string representation of the object\nprint(Term.to_json())\n\n# convert the object into a dict\nterm_dict = term_instance.to_dict()\n# create an instance of Term from a dict\nterm_form_dict = term.from_dict(term_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Text/","title":"Text","text":""},{"location":"apis/public_v2/docs/Text/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Text/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.text import Text\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Text from a JSON string\ntext_instance = Text.from_json(json)\n# print the JSON string representation of the object\nprint(Text.to_json())\n\n# convert the object into a dict\ntext_dict = text_instance.to_dict()\n# create an instance of Text from a dict\ntext_form_dict = text.from_dict(text_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Timeout/","title":"Timeout","text":""},{"location":"apis/public_v2/docs/Timeout/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Timeout/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.timeout import Timeout\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Timeout from a JSON string\ntimeout_instance = Timeout.from_json(json)\n# print the JSON string representation of the object\nprint(Timeout.to_json())\n\n# convert the object into a dict\ntimeout_dict = timeout_instance.to_dict()\n# create an instance of Timeout from a dict\ntimeout_form_dict = timeout.from_dict(timeout_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Title/","title":"Title","text":""},{"location":"apis/public_v2/docs/Title/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Title/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.title import Title\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Title from a JSON string\ntitle_instance = Title.from_json(json)\n# print the JSON string representation of the object\nprint(Title.to_json())\n\n# convert the object into a dict\ntitle_dict = title_instance.to_dict()\n# create an instance of Title from a dict\ntitle_form_dict = title.from_dict(title_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TokenResponse/","title":"TokenResponse","text":""},{"location":"apis/public_v2/docs/TokenResponse/#properties","title":"Properties","text":"Name Type Description Notes token str"},{"location":"apis/public_v2/docs/TokenResponse/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.token_response import TokenResponse\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TokenResponse from a JSON string\ntoken_response_instance = TokenResponse.from_json(json)\n# print the JSON string representation of the object\nprint(TokenResponse.to_json())\n\n# convert the object into a dict\ntoken_response_dict = token_response_instance.to_dict()\n# create an instance of TokenResponse from a dict\ntoken_response_form_dict = token_response.from_dict(token_response_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/TruncatePages/","title":"TruncatePages","text":""},{"location":"apis/public_v2/docs/TruncatePages/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/TruncatePages/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.truncate_pages import TruncatePages\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of TruncatePages from a JSON string\ntruncate_pages_instance = TruncatePages.from_json(json)\n# print the JSON string representation of the object\nprint(TruncatePages.to_json())\n\n# convert the object into a dict\ntruncate_pages_dict = truncate_pages_instance.to_dict()\n# create an instance of TruncatePages from a dict\ntruncate_pages_form_dict = truncate_pages.from_dict(truncate_pages_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Type/","title":"Type","text":""},{"location":"apis/public_v2/docs/Type/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Type/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.type import Type\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Type from a JSON string\ntype_instance = Type.from_json(json)\n# print the JSON string representation of the object\nprint(Type.to_json())\n\n# convert the object into a dict\ntype_dict = type_instance.to_dict()\n# create an instance of Type from a dict\ntype_form_dict = type.from_dict(type_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Type1/","title":"Type1","text":"<p>Type of publication (journal article, conference, review,...).</p>"},{"location":"apis/public_v2/docs/Type1/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Type1/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.type1 import Type1\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Type1 from a JSON string\ntype1_instance = Type1.from_json(json)\n# print the JSON string representation of the object\nprint(Type1.to_json())\n\n# convert the object into a dict\ntype1_dict = type1_instance.to_dict()\n# create an instance of Type1 from a dict\ntype1_form_dict = type1.from_dict(type1_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/UploadApi/","title":"deepsearch.cps.apis.public_v2.UploadApi","text":"<p>All URIs are relative to /api/cps/public/v2</p> Method HTTP request Description create_project_scratch_file POST /project/{proj_key}/scratch/files/upload/{filename} Create Project Scratch File list_project_scratch_files GET /project/{proj_key}/scratch/files List Project Scratch Files list_project_scratch_files_paginated GET /project/{proj_key}/scratch/files_paginated List Project Scratch Files Paginated"},{"location":"apis/public_v2/docs/UploadApi/#create_project_scratch_file","title":"create_project_scratch_file","text":"<p>TemporaryUploadFileResult create_project_scratch_file(filename, proj_key)</p> <p>Create Project Scratch File</p> <p>Create file pointers for temporary storage.</p>"},{"location":"apis/public_v2/docs/UploadApi/#example","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.temporary_upload_file_result import TemporaryUploadFileResult\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.UploadApi(api_client)\n    filename = 'filename_example' # str | \n    proj_key = 'proj_key_example' # str | \n\n    try:\n        # Create Project Scratch File\n        api_response = api_instance.create_project_scratch_file(filename, proj_key)\n        print(\"The response of UploadApi-&gt;create_project_scratch_file:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling UploadApi-&gt;create_project_scratch_file: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/UploadApi/#parameters","title":"Parameters","text":"Name Type Description Notes filename str proj_key str"},{"location":"apis/public_v2/docs/UploadApi/#return-type","title":"Return type","text":"<p>TemporaryUploadFileResult</p>"},{"location":"apis/public_v2/docs/UploadApi/#authorization","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/UploadApi/#http-request-headers","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/UploadApi/#http-response-details","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/UploadApi/#list_project_scratch_files","title":"list_project_scratch_files","text":"<p>List[ProjectScratchFiles] list_project_scratch_files(proj_key, scratch_ids=scratch_ids)</p> <p>List Project Scratch Files</p> <p>Get temporary files uploaded to a project.</p>"},{"location":"apis/public_v2/docs/UploadApi/#example_1","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_scratch_files import ProjectScratchFiles\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.UploadApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    scratch_ids = deepsearch.cps.apis.public_v2.ScratchIds() # ScratchIds |  (optional)\n\n    try:\n        # List Project Scratch Files\n        api_response = api_instance.list_project_scratch_files(proj_key, scratch_ids=scratch_ids)\n        print(\"The response of UploadApi-&gt;list_project_scratch_files:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling UploadApi-&gt;list_project_scratch_files: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/UploadApi/#parameters_1","title":"Parameters","text":"Name Type Description Notes proj_key str scratch_ids ScratchIds [optional]"},{"location":"apis/public_v2/docs/UploadApi/#return-type_1","title":"Return type","text":"<p>List[ProjectScratchFiles]</p>"},{"location":"apis/public_v2/docs/UploadApi/#authorization_1","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/UploadApi/#http-request-headers_1","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/UploadApi/#http-response-details_1","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/UploadApi/#list_project_scratch_files_paginated","title":"list_project_scratch_files_paginated","text":"<p>ProjectScratchFilesPaginated list_project_scratch_files_paginated(proj_key, page=page, items_per_page=items_per_page, search_string=search_string, begin_date=begin_date, end_date=end_date)</p> <p>List Project Scratch Files Paginated</p> <p>Get paginated list of temporary files uploaded to a project.</p>"},{"location":"apis/public_v2/docs/UploadApi/#example_2","title":"Example","text":"<ul> <li>Api Key Authentication (Bearer):</li> </ul> <pre><code>import deepsearch.cps.apis.public_v2\nfrom deepsearch.cps.apis.public_v2.models.project_scratch_files_paginated import ProjectScratchFilesPaginated\nfrom deepsearch.cps.apis.public_v2.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to /api/cps/public/v2\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = deepsearch.cps.apis.public_v2.Configuration(\n    host = \"/api/cps/public/v2\"\n)\n\n# The client must configure the authentication and authorization parameters\n# in accordance with the API server security policy.\n# Examples for each auth method are provided below, use the example that\n# satisfies your auth use case.\n\n# Configure API key authorization: Bearer\nconfiguration.api_key['Bearer'] = os.environ[\"API_KEY\"]\n\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['Bearer'] = 'Bearer'\n\n# Enter a context with an instance of the API client\nwith deepsearch.cps.apis.public_v2.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = deepsearch.cps.apis.public_v2.UploadApi(api_client)\n    proj_key = 'proj_key_example' # str | \n    page = deepsearch.cps.apis.public_v2.Page() # Page |  (optional)\n    items_per_page = 20 # int |  (optional) (default to 20)\n    search_string = deepsearch.cps.apis.public_v2.SearchString() # SearchString |  (optional)\n    begin_date = deepsearch.cps.apis.public_v2.BeginDate() # BeginDate |  (optional)\n    end_date = deepsearch.cps.apis.public_v2.EndDate() # EndDate |  (optional)\n\n    try:\n        # List Project Scratch Files Paginated\n        api_response = api_instance.list_project_scratch_files_paginated(proj_key, page=page, items_per_page=items_per_page, search_string=search_string, begin_date=begin_date, end_date=end_date)\n        print(\"The response of UploadApi-&gt;list_project_scratch_files_paginated:\\n\")\n        pprint(api_response)\n    except Exception as e:\n        print(\"Exception when calling UploadApi-&gt;list_project_scratch_files_paginated: %s\\n\" % e)\n</code></pre>"},{"location":"apis/public_v2/docs/UploadApi/#parameters_2","title":"Parameters","text":"Name Type Description Notes proj_key str page Page [optional] items_per_page int optional search_string SearchString [optional] begin_date BeginDate [optional] end_date EndDate [optional]"},{"location":"apis/public_v2/docs/UploadApi/#return-type_2","title":"Return type","text":"<p>ProjectScratchFilesPaginated</p>"},{"location":"apis/public_v2/docs/UploadApi/#authorization_2","title":"Authorization","text":"<p>Bearer</p>"},{"location":"apis/public_v2/docs/UploadApi/#http-request-headers_2","title":"HTTP request headers","text":"<ul> <li>Content-Type: Not defined</li> <li>Accept: application/json</li> </ul>"},{"location":"apis/public_v2/docs/UploadApi/#http-response-details_2","title":"HTTP response details","text":"Status code Description Response headers 200 Successful Response - 422 Validation Error - <p>[Back to top] [Back to API list] [Back to Model list] [Back to README]</p>"},{"location":"apis/public_v2/docs/UploadDate/","title":"UploadDate","text":""},{"location":"apis/public_v2/docs/UploadDate/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/UploadDate/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.upload_date import UploadDate\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of UploadDate from a JSON string\nupload_date_instance = UploadDate.from_json(json)\n# print the JSON string representation of the object\nprint(UploadDate.to_json())\n\n# convert the object into a dict\nupload_date_dict = upload_date_instance.to_dict()\n# create an instance of UploadDate from a dict\nupload_date_form_dict = upload_date.from_dict(upload_date_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/UploadElasticRequestBody/","title":"UploadElasticRequestBody","text":""},{"location":"apis/public_v2/docs/UploadElasticRequestBody/#properties","title":"Properties","text":"Name Type Description Notes document_hashes DocumentHashes [optional] with_operations WithOperations [optional]"},{"location":"apis/public_v2/docs/UploadElasticRequestBody/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.upload_elastic_request_body import UploadElasticRequestBody\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of UploadElasticRequestBody from a JSON string\nupload_elastic_request_body_instance = UploadElasticRequestBody.from_json(json)\n# print the JSON string representation of the object\nprint(UploadElasticRequestBody.to_json())\n\n# convert the object into a dict\nupload_elastic_request_body_dict = upload_elastic_request_body_instance.to_dict()\n# create an instance of UploadElasticRequestBody from a dict\nupload_elastic_request_body_form_dict = upload_elastic_request_body.from_dict(upload_elastic_request_body_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/UploadJob/","title":"UploadJob","text":""},{"location":"apis/public_v2/docs/UploadJob/#properties","title":"Properties","text":"Name Type Description Notes var_date datetime num_docs int"},{"location":"apis/public_v2/docs/UploadJob/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.upload_job import UploadJob\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of UploadJob from a JSON string\nupload_job_instance = UploadJob.from_json(json)\n# print the JSON string representation of the object\nprint(UploadJob.to_json())\n\n# convert the object into a dict\nupload_job_dict = upload_job_instance.to_dict()\n# create an instance of UploadJob from a dict\nupload_job_form_dict = upload_job.from_dict(upload_job_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/UploadToElastic/","title":"UploadToElastic","text":""},{"location":"apis/public_v2/docs/UploadToElastic/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/UploadToElastic/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.upload_to_elastic import UploadToElastic\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of UploadToElastic from a JSON string\nupload_to_elastic_instance = UploadToElastic.from_json(json)\n# print the JSON string representation of the object\nprint(UploadToElastic.to_json())\n\n# convert the object into a dict\nupload_to_elastic_dict = upload_to_elastic_instance.to_dict()\n# create an instance of UploadToElastic from a dict\nupload_to_elastic_form_dict = upload_to_elastic.from_dict(upload_to_elastic_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Url/","title":"Url","text":"<p>URL on the publication site.</p>"},{"location":"apis/public_v2/docs/Url/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Url/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.url import Url\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Url from a JSON string\nurl_instance = Url.from_json(json)\n# print the JSON string representation of the object\nprint(Url.to_json())\n\n# convert the object into a dict\nurl_dict = url_instance.to_dict()\n# create an instance of Url from a dict\nurl_form_dict = url.from_dict(url_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/UrlRefs/","title":"UrlRefs","text":""},{"location":"apis/public_v2/docs/UrlRefs/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/UrlRefs/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.url_refs import UrlRefs\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of UrlRefs from a JSON string\nurl_refs_instance = UrlRefs.from_json(json)\n# print the JSON string representation of the object\nprint(UrlRefs.to_json())\n\n# convert the object into a dict\nurl_refs_dict = url_refs_instance.to_dict()\n# create an instance of UrlRefs from a dict\nurl_refs_form_dict = url_refs.from_dict(url_refs_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Urls/","title":"Urls","text":"<p>List of URLs to be printed to PDF, converted and uploaded to the data index.</p>"},{"location":"apis/public_v2/docs/Urls/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Urls/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.urls import Urls\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Urls from a JSON string\nurls_instance = Urls.from_json(json)\n# print the JSON string representation of the object\nprint(Urls.to_json())\n\n# convert the object into a dict\nurls_dict = urls_instance.to_dict()\n# create an instance of Urls from a dict\nurls_form_dict = urls.from_dict(urls_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ValidationError/","title":"ValidationError","text":""},{"location":"apis/public_v2/docs/ValidationError/#properties","title":"Properties","text":"Name Type Description Notes loc List[ValidationErrorLocInner] msg str type str"},{"location":"apis/public_v2/docs/ValidationError/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.validation_error import ValidationError\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ValidationError from a JSON string\nvalidation_error_instance = ValidationError.from_json(json)\n# print the JSON string representation of the object\nprint(ValidationError.to_json())\n\n# convert the object into a dict\nvalidation_error_dict = validation_error_instance.to_dict()\n# create an instance of ValidationError from a dict\nvalidation_error_form_dict = validation_error.from_dict(validation_error_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ValidationErrorLocInner/","title":"ValidationErrorLocInner","text":""},{"location":"apis/public_v2/docs/ValidationErrorLocInner/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/ValidationErrorLocInner/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.validation_error_loc_inner import ValidationErrorLocInner\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ValidationErrorLocInner from a JSON string\nvalidation_error_loc_inner_instance = ValidationErrorLocInner.from_json(json)\n# print the JSON string representation of the object\nprint(ValidationErrorLocInner.to_json())\n\n# convert the object into a dict\nvalidation_error_loc_inner_dict = validation_error_loc_inner_instance.to_dict()\n# create an instance of ValidationErrorLocInner from a dict\nvalidation_error_loc_inner_form_dict = validation_error_loc_inner.from_dict(validation_error_loc_inner_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Version/","title":"Version","text":"<p>The version of this collection model.</p>"},{"location":"apis/public_v2/docs/Version/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Version/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.version import Version\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Version from a JSON string\nversion_instance = Version.from_json(json)\n# print the JSON string representation of the object\nprint(Version.to_json())\n\n# convert the object into a dict\nversion_dict = version_instance.to_dict()\n# create an instance of Version from a dict\nversion_form_dict = version.from_dict(version_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Version1/","title":"Version1","text":""},{"location":"apis/public_v2/docs/Version1/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Version1/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.version1 import Version1\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Version1 from a JSON string\nversion1_instance = Version1.from_json(json)\n# print the JSON string representation of the object\nprint(Version1.to_json())\n\n# convert the object into a dict\nversion1_dict = version1_instance.to_dict()\n# create an instance of Version1 from a dict\nversion1_form_dict = version1.from_dict(version1_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ViewOf/","title":"ViewOf","text":""},{"location":"apis/public_v2/docs/ViewOf/#properties","title":"Properties","text":"Name Type Description Notes index_key object query_options ElasticIndexSearchQueryOptions proj_key object elastic_id object"},{"location":"apis/public_v2/docs/ViewOf/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.view_of import ViewOf\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ViewOf from a JSON string\nview_of_instance = ViewOf.from_json(json)\n# print the JSON string representation of the object\nprint(ViewOf.to_json())\n\n# convert the object into a dict\nview_of_dict = view_of_instance.to_dict()\n# create an instance of ViewOf from a dict\nview_of_form_dict = view_of.from_dict(view_of_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/ViewOf1/","title":"ViewOf1","text":""},{"location":"apis/public_v2/docs/ViewOf1/#properties","title":"Properties","text":"Name Type Description Notes index_key object query_options ElasticIndexSearchQueryOptions proj_key object elastic_id object"},{"location":"apis/public_v2/docs/ViewOf1/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.view_of1 import ViewOf1\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of ViewOf1 from a JSON string\nview_of1_instance = ViewOf1.from_json(json)\n# print the JSON string representation of the object\nprint(ViewOf1.to_json())\n\n# convert the object into a dict\nview_of1_dict = view_of1_instance.to_dict()\n# create an instance of ViewOf1 from a dict\nview_of1_form_dict = view_of1.from_dict(view_of1_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Volume/","title":"Volume","text":"<p>Publication volume.</p>"},{"location":"apis/public_v2/docs/Volume/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Volume/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.volume import Volume\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Volume from a JSON string\nvolume_instance = Volume.from_json(json)\n# print the JSON string representation of the object\nprint(Volume.to_json())\n\n# convert the object into a dict\nvolume_dict = volume_instance.to_dict()\n# create an instance of Volume from a dict\nvolume_form_dict = volume.from_dict(volume_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Wait/","title":"Wait","text":"<p>Optionally block this method call for a few seconds to wait for the result instead of polling through multiple calls.</p>"},{"location":"apis/public_v2/docs/Wait/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Wait/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.wait import Wait\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Wait from a JSON string\nwait_instance = Wait.from_json(json)\n# print the JSON string representation of the object\nprint(Wait.to_json())\n\n# convert the object into a dict\nwait_dict = wait_instance.to_dict()\n# create an instance of Wait from a dict\nwait_form_dict = wait.from_dict(wait_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/Wait1/","title":"Wait1","text":"<p>Optionally block this method call for a few seconds to wait for the result instead of polling through multiple calls.</p>"},{"location":"apis/public_v2/docs/Wait1/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/Wait1/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.wait1 import Wait1\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of Wait1 from a JSON string\nwait1_instance = Wait1.from_json(json)\n# print the JSON string representation of the object\nprint(Wait1.to_json())\n\n# convert the object into a dict\nwait1_dict = wait1_instance.to_dict()\n# create an instance of Wait1 from a dict\nwait1_form_dict = wait1.from_dict(wait1_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/WithOperations/","title":"WithOperations","text":"<p>List of Operation Status documents don't have to be used as filter.</p>"},{"location":"apis/public_v2/docs/WithOperations/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/WithOperations/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.with_operations import WithOperations\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of WithOperations from a JSON string\nwith_operations_instance = WithOperations.from_json(json)\n# print the JSON string representation of the object\nprint(WithOperations.to_json())\n\n# convert the object into a dict\nwith_operations_dict = with_operations_instance.to_dict()\n# create an instance of WithOperations from a dict\nwith_operations_form_dict = with_operations.from_dict(with_operations_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"apis/public_v2/docs/WithoutOperations/","title":"WithoutOperations","text":"<p>List of Operation Status documents don't have to be used as filter.</p>"},{"location":"apis/public_v2/docs/WithoutOperations/#properties","title":"Properties","text":"Name Type Description Notes"},{"location":"apis/public_v2/docs/WithoutOperations/#example","title":"Example","text":"<p><pre><code>from deepsearch.cps.apis.public_v2.models.without_operations import WithoutOperations\n\n# TODO update the JSON string below\njson = \"{}\"\n# create an instance of WithoutOperations from a JSON string\nwithout_operations_instance = WithoutOperations.from_json(json)\n# print the JSON string representation of the object\nprint(WithoutOperations.to_json())\n\n# convert the object into a dict\nwithout_operations_dict = without_operations_instance.to_dict()\n# create an instance of WithoutOperations from a dict\nwithout_operations_form_dict = without_operations.from_dict(without_operations_dict)\n</code></pre> [Back to Model list] [Back to API list] [Back to README]</p>"},{"location":"guide/","title":"User guide","text":""},{"location":"guide/#configuration","title":"Configuration","text":"<ul> <li>Configure the SDK</li> </ul>"},{"location":"guide/#common-deep-search-operations","title":"Common Deep Search operations","text":"<ul> <li>Convert a document</li> </ul>"},{"location":"guide/#management-of-system-resources","title":"Management of system resources","text":"<ul> <li>List projects</li> <li>List and manage data</li> <li>List and manage KGs</li> <li>Operate with manual API calls</li> <li>Custom CLI plugins</li> </ul>"},{"location":"guide/apis/","title":"APIs","text":"<p>Tip</p> <pre><code>The features described on this page are not available in the public service. [Contact us](https://ds4sd.github.io/) to know more.\n</code></pre>"},{"location":"guide/apis/#interaction-with-the-deep-search-apis","title":"Interaction with the Deep Search APIs","text":""},{"location":"guide/apis/#autogenerated-api-clients","title":"Autogenerated API clients","text":"<p>The SDK is also exposing the Swagger/OpenAPI autogenerated sdk clients. They can be used for interaction with all the CPS API endpoints.</p> <p>For more details, refer to the autogenerated docs.</p>"},{"location":"guide/apis/#usage-of-the-swagger-sdk","title":"Usage of the Swagger SDK","text":"<pre><code>from deepsearch.cps.client.api import CpsApi\nimport urllib3\nurllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\n# Import of the bare Swagger clients\nfrom deepsearch.cps.apis import public as sw_client\n\n\napi = CpsApi.from_env()\n\n# Initialize the Swagger client, e.g. the `KnowledgeGraphsApi`\nsw_kg_api = sw_client.KnowledgeGraphsApi(api.client.swagger_client)\n\n# ...use the Swagger client directly\n</code></pre>"},{"location":"guide/apis/#interacting-with-the-api-directly-via-requests","title":"Interacting with the API directly via <code>requests</code>","text":"<p>Another option is interacting with the CPS API directly using the endpoints. CPS provides a Swagger UI for inspecting all API endpoints (documented with schemas). To access the API documentation please use the following URLs: - User API: <code>https://{HOST}/api/cps/user/v1/docs/</code> - Public API: <code>https://{HOST}/api/cps/public/v1/ui/</code></p> <p>For example: - User API: https://deepsearch-experience.res.ibm.com/api/cps/user/v1/docs/ - Public API: https://deepsearch-experience.res.ibm.com/api/cps/public/v1/ui/</p> <p>Once find the endpoint for your request, you can use it with this example code.</p> <pre><code>from deepsearch.cps.client.api import CpsApi\n\n\napi = CpsApi.from_env()\ncps_api_url = api.client.swagger_client.configuration.host\n\n# For example, get list of KGs via the endpoint `/backend/project/{proj_key}/bags`\nproj_key = \"abc123\"\nr = api.client.session.get(f\"{cps_api_url}/backend/project/{proj_key}/bags\")\nr.raise_for_status()\nprint(r.json())\n</code></pre>"},{"location":"guide/cli_plugins/","title":"CLI plugins","text":"<p>We use Pluggy to extend the DeepSearch CLI. We recommend having a look at it's documentation for further details.</p>"},{"location":"guide/cli_plugins/#writing-a-cli-plugin","title":"Writing a CLI plugin","text":"<p>We use Typer on the DeepSearch CLI. We recommend having a look at it's tutorial, which goes into further detail on how to use this library. In the example file below, we use the <code>hookimpl</code> to add our own CLI command group.</p> <p>The main requirements are:</p> <ul> <li>Your hook implementation must return a <code>typer.Typer</code> instance</li> <li>The instance must have a <code>name</code> set</li> </ul> <p>Consider the following toy example:</p> <pre><code># my_deepsearch_plugin/main.py\n\nimport typer\n\n# Get the hookimpl that you will use to hook into the DeepSearch CLI\nfrom deepsearch.core.cli.plugins import deepsearch_cli_hookimpl\n\n# Implement the function to return a group.\n# We're defining an 'example' group,\n# using the Typer library.\n# It will be available as 'deepsearch example'.\n# Note: the name of the function is important!\n@deepsearch_cli_hookimpl\ndef deepsearch_cli_add_group() -&gt; typer.Typer:\n    app = typer.Typer(name=\"example\")\n\n    # Define one or more commands.\n    @app.command(\"test\")\n    def test(name: str):\n        typer.echo(f\"Hello, {name}!\")\n\n    return app\n</code></pre> <p>You can use any of the <code>deepsearch</code> package's contents to write your CLI plugins. See deepsearch/examples for more examples.</p>"},{"location":"guide/cli_plugins/#adding-the-plugin-to-your-package","title":"Adding the plugin to your package","text":"<p>Pluggy makes use of setuptools entry points to load plugins. Here's how you can add yours:</p>"},{"location":"guide/cli_plugins/#via-setuppy","title":"Via <code>setup.py</code>","text":"<p>Add a <code>entry_points</code> argument to your <code>setup.py</code>, replacing <code>my_deepsearch_plugin.main</code> to point to the file where you defined your plugin.</p> <pre><code>setup(\n    entry_points={\n        \"deepsearch\": [\"cli = my_deepsearch_plugin.main\"],\n    }\n)\n</code></pre>"},{"location":"guide/cli_plugins/#via-poetry-with-pyprojecttoml","title":"Via Poetry with <code>pyproject.toml</code>","text":"<p>Add the following to your <code>pyproject.toml</code>, replacing <code>my_deepsearch_plugin.main</code> to point to the file where you defined your plugin.</p> <pre><code>[tool.poetry.plugins.deepsearch]\ncli = \"my_deepsearch_plugin.main\"\n</code></pre>"},{"location":"guide/cli_plugins/#using-the-plugin","title":"Using the plugin","text":"<p>After installing your plugin package, you should see the <code>example</code> section when you run <code>deepsearch</code>:</p> <pre><code>&gt; deepsearch\n\nUsage: deepsearch [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --install-completion [bash|zsh|fish|powershell|pwsh]\n                                  Install completion for the specified shell.\n  --show-completion [bash|zsh|fish|powershell|pwsh]\n                                  Show completion for the specified shell, to\n                                  copy it or customize the installation.\n  --help                          Show this message and exit.\n\nCommands:\n  [ ... ]  [ ... ]\n  example\n  [ ... ]  [ ... ]\n</code></pre> <p>And running our newly added command gives us...</p> <pre><code>&gt; deepsearch example test DeepSearch\n\nHello, DeepSearch!\n</code></pre>"},{"location":"guide/configuration/","title":"Configuration","text":"<p>The Toolkit can be configured via the CLI and via environment variables.</p> <p>Besides global settings, the Toolkit also allows the configuration of multiple profiles for enabling users to easily work with different Deep Search deployments.</p>"},{"location":"guide/configuration/#profiles","title":"Profiles","text":"<p>The Toolkit provides the capability of easily interacting with different Deep Search instances through the use of profiles. A user may define multiple profiles, identified by profile name, and can easily switch between them.</p>"},{"location":"guide/configuration/#profile-setup","title":"Profile Setup","text":"<p>To configure your Deep Search profile, check out Set up your Profile.</p>"},{"location":"guide/configuration/#command-overview","title":"Command Overview","text":"<p>For an overview of the profile management commands check <code>deepsearch profile --help</code>: <pre><code>$ deepsearch profile --help\n\n Usage: deepsearch profile [OPTIONS] COMMAND [ARGS]...\n\n Manage profile configuration\n\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --help          Show this message and exit.                    \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 config         Add or update a profile.                        \u2502\n\u2502 list           List all profiles.                              \u2502\n\u2502 remove         Remove a profile.                               \u2502\n\u2502 show           Display a profile.                              \u2502\n\u2502 use            Activate a profile.                             \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre></p>"},{"location":"guide/configuration/#usage","title":"Usage","text":""},{"location":"guide/configuration/#usage-in-cli","title":"Usage in CLI","text":"<pre><code>$ # configure a profile\n$ deepsearch profile config --profile-name foo --host ds-1.example.com ...\n$ # -&gt; \"foo\" now available and selected as the active profile\n$\n$ deepsearch cps projects list\n$ # -&gt; outputs projects corresponding to \"foo\"\n$\n$ # configure another profile\n$ deepsearch profile config --profile-name bar --host ds-2.example.com ...\n$ # -&gt; \"bar\" now available and selected as the active profile\n$\n$ deepsearch profile list\n$ # -&gt; displays all profiles, with \"bar\" marked as the active one\n$\n$ deepsearch cps projects list\n$ # -&gt; outputs projects corresponding to \"bar\"\n$\n$ # switch to previous profile\n$ deepsearch profile use foo\n$ # -&gt; \"foo\" now selected as the active profile\n$\n$ deepsearch cps projects list\n$ # -&gt; outputs projects corresponding to \"foo\"\n</code></pre>"},{"location":"guide/configuration/#usage-in-python","title":"Usage in Python","text":"<p>To use the active profile: <pre><code>from deepsearch.cps.client.api import CpsApi\n\napi = CpsApi.from_env()\n\nprint([p.name for p in api.projects.list()])\n# -&gt; outputs projects corresponding to active profile\n</code></pre></p> <p>To use a specific profile: <pre><code>from deepsearch.cps.client.api import CpsApi\n\napi = CpsApi.from_env(profile_name=\"foo\")\n\nprint([p.name for p in api.projects.list()])\n# -&gt; outputs projects corresponding to \"foo\"\n</code></pre></p> <p>To use specific settings: <pre><code>from deepsearch.core.client.settings import ProfileSettings\nfrom deepsearch.cps.client.api import CpsApi\n\n# create a ProfileSettings object, e.g.:\nsettings = ProfileSettings(\n    # ...\n)\n# or interactively via the CLI:\n# settings = ProfileSettings.from_cli_prompt()\n\napi = CpsApi.from_settings(settings=settings)\n\nprint([p.name for p in api.projects.list()])\n# -&gt; outputs projects corresponding to provided settings\n</code></pre></p>"},{"location":"guide/configuration/#environment-variables","title":"Environment Variables","text":"<p>Under the hood, the Toolkit leverages Pydantic Settings with dotenv support, so configuration settings can be easily overriden via environment variables. This can be useful e.g. in a containerization scenario.</p> <p>To see which environment variables are supported, check the relevant Pydantic Settings classes, also taking into account any defined prefixes.</p>"},{"location":"guide/convert_doc/","title":"Document conversion","text":"<p>This page shows how to convert documents and download the converted <code>.json</code> files. Instead of downloading the converted <code>.json</code> files, if you'd like to add the converted document to your project see Adding documents in a project.</p> <p>For the tasks on this page, you are required to identify your project within Deep Search via a <code>PROJ_KEY</code>. Listing projects shows the <code>PROJ_KEY</code> for all of your projects. </p>"},{"location":"guide/convert_doc/#converting-local-documents","title":"Converting local documents","text":"<p>The toolkit provides an easy method to convert documents from your local machine. The <code>deepsearch documents</code> component processes your input, uploads local files, submits for conversion and downloads the results to your machine. </p> <p>Let <code>PATH_DOCS</code> be the path to a PDF document in your local machine. </p> CLIPython <pre><code>$ deepsearch documents convert -p PROJ_KEY -i PATH_DOCS\n</code></pre> <pre><code>import deepsearch as ds                                         \ndocuments = ds.convert_documents(api=api, proj_key=PROJ_KEY, source_path=PATH_DOCS)\n\n# Let's download all the converted documents locally in RESULT_DIR\ndocuments.download_all(result_dir = RESULT_DIR)\n</code></pre> <ul> <li> <p>For CLI:  The converted documents are automatically downloaded in a <code>result_TIMESTAMP</code> directory of the user's current working directory. The <code>TIMESTAMP</code> has the format <code>YYYY-MM-DD_HHhMMmSSs</code>. </p> </li> <li> <p>For python: The user specifies the location where converted documents are downloaded. </p> </li> </ul>"},{"location":"guide/convert_doc/#converting-remote-documents","title":"Converting remote documents","text":""},{"location":"guide/convert_doc/#single-url","title":"Single URL","text":"<p>Let <code>URL</code> be the web address for an online document.</p> CLIPython <pre><code>$ deepsearch documents convert -p PROJ_KEY -u URL\n</code></pre> <pre><code>import deepsearch as ds                                         \ndocuments = ds.convert_documents(api=api,proj_key=PROJ_KEY, urls=URL)\n\n# Let's download all the converted documents locally in RESULT_DIR\ndocuments.download_all(result_dir = RESULT_DIR)\n</code></pre>"},{"location":"guide/convert_doc/#generating-reports","title":"Generating reports","text":"<p>It is possible to create reports which inform the user about the document conversion tasks and their statuses. Such a report is useful in analysis and debugging large tasks.</p> <ul> <li> <p>For CLI: When a document conversion job is launched from the CLI, the task id for each submitted batch is saved to a result directory. Let <code>PATH_TASK_IDS</code> be the path to text file containing the <code>task ids</code>.</p> </li> <li> <p>For python: The <code>DocumentConversionResult</code> object has a built-in method for generating reports.</p> </li> </ul> CLIPython <pre><code>deepsearch documents get-report -p PROJ_KEY -t PATH_TASK_IDS\n</code></pre> <pre><code>import deepsearch as ds                                         \ndocuments = ds.convert_documents(api=api, proj_key=PROJ_KEY, source_path=PATH_DOCS)\n\n# Let's generate the report for this document conversion job\ndocuments.generate_report(result_dir=\"./result/\", progress_bar=True)\n</code></pre>"},{"location":"guide/convert_doc/#customize-conversion-settings","title":"Customize conversion settings","text":"<p>You can exercise control over the conversion settings used in document conversion through the python SDK as follows.</p> <p>To do so, initialise a <code>ConversionSettings</code> object.</p> <pre><code>from deepsearch.documents.core.models import ConversionSettings\n\nconv_settings = ConversionSettings()\n\n# Modify conv_settings, see sections below...\n\ndocuments = ds.convert_documents(\n  api=api,\n  proj_key=PROJ_KEY,\n  source_path=PATH_DOCS,\n  conversion_settings=conv_settings # pass conv_settings as argument\n)           \n</code></pre>"},{"location":"guide/convert_doc/#modify-the-conversion-pipeline-models","title":"Modify the conversion pipeline models","text":"<p>You can modify the behaviour of the conversion pipeline by setting custom models for a task, or disabling them altogether. Currently, you may modify which models to use for table structure prediction (<code>tables</code>).</p>"},{"location":"guide/convert_doc/#example-1-disable-the-table-structure-predictions","title":"Example 1: Disable the table structure predictions","text":"<p>You can simply disable a model by setting it to <code>False</code></p> <pre><code>conv_settings.table_structure.do_table_structure = False\n</code></pre>"},{"location":"guide/convert_doc/#example-2-pick-an-alternative-system-model-for-table-structure","title":"Example 2: Pick an alternative system model for table structure","text":"<p>Deep Search offer two alternative models for the same task, e.g. for table structure prediction. You can choose between <code>fast</code> and <code>accurate</code> where's default is <code>fast</code>.</p> <p>You can simply change the table structure by setting it to <code>accurate</code></p> <pre><code>conv_settings.table_structure.table_structure_mode = \"accurate\"\n</code></pre>"},{"location":"guide/convert_doc/#modify-ocr-settings","title":"Modify OCR settings","text":"<p>By default OCR is enable, you can disable it or choose an OCR backend.</p>"},{"location":"guide/convert_doc/#example-1-disable-default-ocr","title":"Example 1: Disable default OCR","text":"<pre><code>from deepsearch.documents.core.models import ConversionSettings\n\nconv_settings = ConversionSettings()\nconv_settings.ocr.do_ocr = False\n</code></pre>"},{"location":"guide/convert_doc/#example-2-choose-alternative-ocr-engine","title":"Example 2: Choose alternative OCR engine","text":"<p>The default OCR engine is <code>easyocr</code>, you can change it to alternative <code>tesserocr</code>.</p> <pre><code>from deepsearch.documents.core.models import ConversionSettings\n\nconv_settings = ConversionSettings()\nconv_settings.ocr.kind = \"tesserocr\"\n</code></pre>"},{"location":"guide/data_indices/","title":"Data","text":"<p>Tip</p> <pre><code>The features described on this page are not available in the public service. [Contact us](https://ds4sd.github.io/) to know more.\n</code></pre>"},{"location":"guide/data_indices/#data-indices","title":"Data indices","text":"<p>A data index stores a collection of documents in a project. This page shows how to create and delete a data index, and to list all data indices in a project.</p> <p>Since a data index \"lives\" inside a project, we need to specify which project we are referring to. This is accomplished by a project key <code>PROJ_KEY</code>. We can obtain the project keys for our projects by listing them.</p>"},{"location":"guide/data_indices/#creating-a-data-index-in-a-project","title":"Creating a data index in a project","text":"<p>Suppose you want to create an index called <code>NAME</code>. Optionally, a description,<code>DESC</code>, for the data index can be provided.</p> CLIPython <pre><code>$ deepsearch cps data-indices create -p PROJ_KEY -n NAME -d DESC\n</code></pre> <p>After you have generated the api object (from a profile):</p> <pre><code>api.data_indices.create(proj_key=PROJ_KEY, name=NAME, desc=DESC)\n</code></pre> <p>In addition, it is possible to specify non-default <code>type</code> of data index. For more, see here for CLI and here for python.</p> Type Description <code>Document</code> (Default) Index containing documents uploaded as PDF and converted by the platform. <code>DB Record</code> Index containing data matching the DB records schema. This usually orginates from curated data collections, and exposes a schema which can be leveraged in the processing pipeline. <code>Generic</code> Generic type with the least requirements. <code>Experiment</code> Data coming from simulation experiments."},{"location":"guide/data_indices/#listing-data-indices-in-a-project","title":"Listing data indices in a project","text":"CLIPython <pre><code>$ deepsearch cps data-indices list -p PROJ_KEY\n</code></pre> <pre><code>indices = api.data_indices.list(PROJ_KEY)\n\nfor item in indices:\n    print(item.source.index_key, item.name)\n\n# If your project uses Pandas, you can easily convert the list of projects to a Dataframe\nimport pandas as pd\ndf = pd.DataFrame([item.to_dict() for item in indices])\nprint(df)\n</code></pre>"},{"location":"guide/data_indices/#deleting-a-data-index-from-a-project","title":"Deleting a data index from a project","text":"<p>To delete a data index, you need to specify an index via its <code>INDEX_KEY</code>. Listing data indices will show the <code>INDEX_KEY</code> for all the indices in a project.</p> CLIPython <pre><code>$ deepsearch cps data-indices delete -p PROJ_KEY -x INDEX_KEY\n</code></pre> <pre><code>from deepsearch.cps.client.components.elastic import ElasticProjectDataCollectionSource\n\n# specify index\ncoords = ElasticProjectDataCollectionSource(proj_key=PROJ_KEY, index_key=INDEX_KEY)\n\napi.data_indices.delete(coords)\n</code></pre>"},{"location":"guide/data_indices/#adding-documents-to-a-project","title":"Adding documents to a project","text":"<p>Documents can be converted and added, directly, to a data index in a project. Briefly, documents can be on a local machine or on the remote files. Local documents can be in PDF format, ZIP archives, or directory containing both (<code>PATH_DOCS</code>). The web address of a remote document is input directly or multiple web addresses can be stored in a text file (<code>PATH_URL</code>). The specification of documents is same as in Document Conversion.</p> CLIPython <pre><code>// for local documents\n$ deepsearch cps data-indices upload -p PROJ_KEY -x INDEX_KEY -i PATH_DOCS\n\n// for online documents\n$ deepsearch cps data-indices upload -p PROJ_KEY -x INDEX_KEY -u PATH_URL\n\n// for COS documents\n$ deepsearch cps data-indices upload -p PROJ_KEY -x INDEX_KEY -c PATH_COS_COORDINATES\n</code></pre> <pre><code>from deepsearch.cps.client.components.elastic import ElasticProjectDataCollectionSource\nfrom deepsearch.cps.data_indices import utils as data_indices_utils\n\n# Specify index\ncoords = ElasticProjectDataCollectionSource(proj_key=PROJ_KEY, index_key=INDEX_KEY)\n\n# For local documents\ndata_indices_utils.upload_files(api=api, coords=coords, local_file=PATH_DOCS)\n\n# For online documents\n\n# load the urls from the file to a list\ninput_urls = open(PATH_URL).readlines()\n# or, define a list directly\n#input_urls = [\"https:///URL1\", \"https://URL2\", \"https://URL3\"]\n\ndata_indices_utils.upload_files(api=api, coords=coords, url=input_urls)\n\n# For COS documents\ncos_coordinates = S3Coordinates.parse_file(s3_coordinates)\n\ndata_indices_utils.upload_files(api=api, coords=coords, s3_coordinates=cos_coordinates)\n</code></pre>"},{"location":"guide/data_indices/#adding-attachments-to-an-index-item","title":"Adding attachments to an index item","text":"<p>Attachments can be added to an index item in a project. Briefly, attachments have to be on local machine and can be (almost) any format. The full list of supported formats are listed here.</p> CLIPython <pre><code>$ deepsearch cps data-indices add-attachment -p PROJ_KEY -x INDEX_KEY -d INDEX_ITEM_ID -i ATTACHMENT_PATH -k ATTACHMENT_KEY\n</code></pre> <pre><code>from deepsearch.cps.client.components.data_indices import DataIndex\n\n# get indices of the project\nindices = api.data_indices.list(PROJ_KEY)\n\n# get specific index to add attachment\nindex = next((x for x in indices if x.source.index_key == index_key), None)\n\n# if the index exists, add attachment\nif index is not None:\n    # specify parameters\n    index_item_id = \"example_item_id\"\n    attachment_path = \"path/to/local/file\"\n    attachment_key = \"usr_my_attachment\"  # optional. if set need start with 'usr_' and be snake_case\n\n    index.add_item_attachment(\n        api=api,\n        index_item_id=index_item_id,\n        attachment_path=attachment_path,\n        attachment_key=attachment_key,  # optional\n    )\n</code></pre>"},{"location":"guide/kgs/","title":"Knowledge graphs","text":"<p>Tip</p> <pre><code>The features described on this page are not available in the public service. [Contact us](https://ds4sd.github.io/) to know more.\n</code></pre>"},{"location":"guide/kgs/#knowledge-graphs","title":"Knowledge graphs","text":""},{"location":"guide/kgs/#operations-on-kgs","title":"Operations on KGs","text":"<p>When interacting with a KG, you can obtain the proj_key and kg_key identifiers from the API section of the UI.</p> <p></p>"},{"location":"guide/kgs/#list-the-kgs-in-a-project","title":"List the KGs in a project","text":"<pre><code>proj_key = \"abc123\" # get your proj_key from the UI details\n\nkgs = api.knowledge_graphs.list(proj_key)\nprint(kgs)\n</code></pre>"},{"location":"guide/kgs/#query-a-kg","title":"Query a KG","text":"<pre><code>from deepsearch.cps.client.queries import Query\nfrom deepsearch.cps.client.queries.task import Value\nfrom deepsearch.cps.client.queries.query_tasks import ForEach, Workflow\nfrom deepsearch.cps.client.builders.wf_builder import WorkflowBuilder, WorkflowTaskOperation\n\nproj_key = \"abc123\" # get your proj_key from the UI details\nkg_key = \"xyz987\" # get kg_key (also called bag_key) from the UI details\nkg = api.knowledge_graphs.get(proj_key, kg_key)\n\nif kg is None:\n    raise Exception(\"No such kg\")\n\n# Get the KG topology\ntopo = kg.get_topology()\n\nquery = Query()\n\nbuilder = WorkflowBuilder()\n# ... add Workflow tasks to the query\n\n# Add Workflow and KG coordinates to the query\nwf = query.add(Workflow(id=\"\", builder=builder, coordinates=kg, inputs={}))\n\n# Execute the query\nresult = api.queries.run(query)\n</code></pre> <p>More example queries are available in the examples gallery.</p>"},{"location":"guide/kgs/#download-a-kg","title":"Download a KG","text":"CLIPython <p>Using the <code>deepsearch cps</code> component:  <pre><code>$ deepsearch cps kgs download -p 'abc123' -k 'zxc987'\n\nurl\n--------------------------------\nhttps://host.domain/download-url\n</code></pre> <p>After you have generated the <code>api</code> object (from a profile):</p> <pre><code>proj_key = \"abc123\" # get your proj_key from the UI details\nkg_key = \"xyz987\" # get kg_key (also called bag_key) from the UI details\nkg = api.knowledge_graphs.get(proj_key, kg_key)\n\ndownload_url = kg.download()\n</code></pre>"},{"location":"guide/projects/","title":"Projects","text":"<p>Tip</p> <pre><code>The features described on this page are not available in the public service. [Contact us](https://ds4sd.github.io/) to know more.\n</code></pre>"},{"location":"guide/projects/#projects","title":"Projects","text":"<p>Deep Search projects allow users to collaborate. All resources such as data, models and knowledge graphs belong to a project.</p> <p>A collaborator may be added to a project as <code>owner</code>, <code>editor</code>, or <code>viewer</code>. Below is a description of these roles.</p> Role Description <code>viewer</code> Inspect documents, view all project resources, query project knowledge graphs. <code>editor</code> All permissions of <code>viewer</code> + creating and editing new project resources. <code>owner</code> All permissions of <code>editor</code> + possibility to manage collaborators and delete the project."},{"location":"guide/projects/#project-management","title":"Project management","text":"<p>Info</p> <p>Make sure to complete your profile setup before using the project management features listed below.</p>"},{"location":"guide/projects/#creating-a-project","title":"Creating a project","text":"CLIPython <p>Using the <code>deepsearch cps</code> component:  <pre><code>$ deepsearch cps projects create my-project\n\nkey                                       name\n----------------------------------------  ----------\nd1d526e14cdac562b5174c2df9dd1b04c29a8c33  my-project\n</code></pre> <p>After you have generated the <code>api</code> object (from a profile), creating a project is very easy.</p> <pre><code>proj = api.projects.create(name=\"my-project\")\n\nprint(proj)\n# &gt; Project(key='7be8d8e763b55996710007cf97f31244e8ea237c', name='my-project')\n</code></pre>"},{"location":"guide/projects/#listing-projects","title":"Listing projects","text":"CLIPython <p>Using the <code>deepsearch cps</code> component:  <pre><code>$ deepsearch cps projects list\n\nkey                                       name\n----------------------------------------  ---------------------\nd1d526e14cdac562b5174c2df9dd1b04c29a8c33  my-project\n20ae7fb2567d4b777712a6bb50f133c118497d0d  test-project\n1146f5cf2c5ebb4774df38888d5fa608673fca33  it-services\n744978acd58c0cd16893ec4e0ccdd69fd8dd5566  ...\n</code></pre> <p>After you have generated the <code>api</code> object (from a profile), listing projects is very easy.</p> <pre><code>projects = api.projects.list()     # returns list of projects\n\nfor proj in projects:\n    print(proj.key, proj.name)\n\n# If your project uses Pandas, you can easily convert the list of projects to a Dataframe\nimport pandas as pd\ndf = pd.DataFrame(projects)\nprint(df)\n</code></pre>"},{"location":"guide/projects/#assigning-a-user-to-a-project","title":"Assigning a user to a project","text":"CLIPython <p>Using the <code>deepsearch cps</code> component:  <pre><code>$ deepsearch cps projects assign d1d526e... user@example.com viewer\n</code></pre> <pre><code># example project to assign\nproj = \"7be8d8e763b55996710007cf97f31244e8ea237c\"\n\n# or using a Project instance, e.g.:\n# proj = api.projects.create(name=\"new-project\")\n\napi.projects.assign_user(\n    project=proj,\n    username=\"user@example.com\",\n    role=\"viewer\",\n)\n</code></pre>"},{"location":"guide/projects/#removing-a-project","title":"Removing a project","text":"CLIPython <p>Using the <code>deepsearch cps</code> component:  <pre><code>$ deepsearch cps projects remove d1d526e...\n</code></pre> <pre><code># example project to remove\nproj = \"7be8d8e763b55996710007cf97f31244e8ea237c\"\n\n# or using a Project instance, e.g.:\n# proj = api.projects.create(name=\"new-project\")\n\napi.projects.remove(project=proj)\n</code></pre>"}]}